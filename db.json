{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/chess.jpeg","path":"img/chess.jpeg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"819ed02f3d41355b55b1158164e291ad5f476513","modified":1660222188120},{"_id":"source/_posts/2019和2020.md","hash":"72fbcfb11b8ad65869bf8925427e50c6be5ff8b2","modified":1673501791849},{"_id":"source/_posts/202207W3.md","hash":"9b8ee0cbe85dccf36ffb692ecaade5b5cd41d377","modified":1675667237487},{"_id":"source/_posts/2022已过三分之一.md","hash":"ad3a2a4d29dab64947e673223eea7a9448978041","modified":1660370098272},{"_id":"source/_posts/2022.md","hash":"4015f4292943c0d46b735ce740fdd2473df0714e","modified":1672714273417},{"_id":"source/_posts/Class-based views.md","hash":"e7c0b98adc87b850b737bb5ce930b3b3fdd8f515","modified":1686737817616},{"_id":"source/_posts/202208W1.md","hash":"a057a80ab4d9bf440be0c4a4d4229051918df654","modified":1675667237499},{"_id":"source/_posts/DRF JWT 配置.md","hash":"2043aa0f3dbf6001f4e9af3cfdaaff0f0f387324","modified":1660222188124},{"_id":"source/_posts/Borg状态共享.md","hash":"30f23d27dc3b3f66502f0cd71032a15119ce1574","modified":1660222188129},{"_id":"source/_posts/Django ORM 机制.md","hash":"dc444fa7fd60e20c38d486219cf4c44b54ae8b6a","modified":1686737814600},{"_id":"source/_posts/Django 使用 logging 模块的一次记录.md","hash":"b610fa836e11e1c967e2fd9522087fafcac32968","modified":1686737801509},{"_id":"source/_posts/Django2.0 重写用户模型.md","hash":"78da7b5533fb806ea07cb4c2cad74f0d5cf419da","modified":1686737824606},{"_id":"source/_posts/Docker 指令.md","hash":"f835185359fc1e8977b5d7ced3b2d1ec9939a6c1","modified":1660222188128},{"_id":"source/_posts/Docker 指令2.md","hash":"a76c5946bf53beb919119355cd966c5aa7de5715","modified":1660222188128},{"_id":"source/_posts/Elasticsearch基本查询.md","hash":"636802d45665f4ef7c3fdf94e21e6f9cc23338ce","modified":1660222188141},{"_id":"source/_posts/Elasticsearch组合查询.md","hash":"fc076d56474e9b33ceaa840e1c6de575da91983e","modified":1660222188129},{"_id":"source/_posts/Elasticsearch配置.md","hash":"244326c97c1b5be0cc29d21708bdb9ff994e5261","modified":1660222188142},{"_id":"source/_posts/Elasticsearch操作.md","hash":"063fe0f74ffa4b5f154f3f2823317db989b4f6f1","modified":1668480338837},{"_id":"source/_posts/Git 更新fork代码的内容.md","hash":"3ca73ef0e0e0621b6aaea6055337ecac25f10857","modified":1660222188142},{"_id":"source/_posts/Github搜索开源项目方式.md","hash":"dfd89fc6fc0af293d0b72aa03214d30251bfb02a","modified":1660222188142},{"_id":"source/_posts/Git设置代理.md","hash":"34ec69d70fddd2579f091d7a3ec4aab2a55e1729","modified":1660222188128},{"_id":"source/_posts/Linux文件属性.md","hash":"eb9b8f34dc195d679db05ff2d13048a23ec5274f","modified":1686737906545},{"_id":"source/_posts/Redis 数据保留.md","hash":"c906fb083f75c57abe616842e13055b3482b8f85","modified":1660222188129},{"_id":"source/_posts/Linux 文件隐藏属性.md","hash":"f3f28548ace42d8bdf97961c26dce8fb3100a90b","modified":1686737909537},{"_id":"source/_posts/Python 线程池 ThreadPoolExecutor.md","hash":"62d443b62ffc86be5a46318233029fac73eb0e2d","modified":1660222188124},{"_id":"source/_posts/Ubuntu系统安装redis.md","hash":"f21eb15d45494ab15089c3b45647bae82305e53d","modified":1686737893074},{"_id":"source/_posts/Windows10 docker desktop k8s.md","hash":"567ba81465d35f39e1a1d01e3cfeca917a40362a","modified":1660222188121},{"_id":"source/_posts/apscheduler.md","hash":"aa1d7874a60077e5e6e2c99130e95634b2752cad","modified":1660222188125},{"_id":"source/_posts/django Signals.md","hash":"e0643d865b7a77a7db183e3c6ec99f4651225ac6","modified":1686737804119},{"_id":"source/_posts/django 图片储存七牛云.md","hash":"2bcb2260b61b8283feaa9565c04e078fad4efc17","modified":1686737798181},{"_id":"source/_posts/django-allauth 阿里云发送邮件出现nginx 504解决方法.md","hash":"f00474074595ce4d4f5e205f161fbb38389360c8","modified":1686737820846},{"_id":"source/_posts/django3 choices 新特性.md","hash":"36511062dd34649bd79f7eeffb2bc817bf1a818d","modified":1686737827256},{"_id":"source/_posts/do things matters.md","hash":"e9e6da01a2bdbcb96fbe13fa77d24332987a4923","modified":1660222188127},{"_id":"source/_posts/docker pull更换源.md","hash":"47dfc106c353a71bd355fb7c713c62322744adc9","modified":1660222188132},{"_id":"source/_posts/drf 一次错误排查.md","hash":"e1a5aa2cae9c00f873ac42ab84751480c70c5507","modified":1660222188132},{"_id":"source/_posts/first.md","hash":"288e1d9682f12ea6cbb38c1f3705b93348dbac27","modified":1660222188125},{"_id":"source/_posts/pipenv 使用.md","hash":"9c45ad02a40a9a98378b5baf51a926b2a4142f0e","modified":1660222188133},{"_id":"source/_posts/plan.md","hash":"b45df7d494b8f4a2f17ac4c42b438a3f583befed","modified":1660222188134},{"_id":"source/_posts/pathlib模块用法.md","hash":"0c3fec96960bfc4d39493fdf0af6e05e4a6890f9","modified":1660222188130},{"_id":"source/_posts/supervisor + pipenv + uwsgi.md","hash":"90f6b415b0e1928e8c4af09443ee047b562925c7","modified":1686737903537},{"_id":"source/_posts/ubuntu python3.7 安装uwsgi 常见错误.md","hash":"d360e95b530b8b4971d0d78581a882b6a11fb046","modified":1686737900016},{"_id":"source/_posts/hello-world.md","hash":"05d0bac42609fac5114d995023dfd83cabbd0762","modified":1660222188123},{"_id":"source/_posts/ubuntu 部署 django2.0 + uwsgi + nginx.md","hash":"af49c97bfcd8e2cdb10260752a6cf66b4d893b44","modified":1686737896995},{"_id":"source/_posts/win10 osg.js 使用.md","hash":"17a8db84dda3a04dc77441721cd7c7debf31c8e8","modified":1686737875714},{"_id":"source/_posts/windows 安装 helm.md","hash":"e83cf80c23b14c71a394a08f60d617b47e63dbcb","modified":1686737879700},{"_id":"source/_posts/wsl2 安装 Centos8.md","hash":"d0320106a66f42b8d7b291908b0805465bfe20d9","modified":1660222188127},{"_id":"source/_posts/《大秦帝国》终于到了.md","hash":"67ab7e9c410e4e9c49f3ba6c2c9db69c92b058a0","modified":1660222188127},{"_id":"source/_posts/windows终端命令行下使用网络代理.md","hash":"902f2225a4ee6bdad39b776bce2e04c39164dcb5","modified":1660222188141},{"_id":"source/_posts/仿佛重生.md","hash":"8bd0f89c6f2e715fadae6fd5fdbf38ebb5e5883d","modified":1660222188125},{"_id":"source/_posts/写了个脚本把以前的博客从sqlite转成md.md","hash":"7555a5805147147f5768c7a939d157cda17027a8","modified":1660222188132},{"_id":"source/_posts/删除排序数组中的重复项.md","hash":"2761cce2f5710ce8ba9100dddf1cbdfe7954e2e9","modified":1686737867924},{"_id":"source/_posts/围棋第一次胜局.md","hash":"4283d99193007c3839cb93e7a98d9fe45096746b","modified":1660222188142},{"_id":"source/_posts/数据库定时备份任务.md","hash":"b92c50e9d01bf2e6403fca85387be8675e14487c","modified":1686737859359},{"_id":"source/_posts/来到深圳.md","hash":"1c256dfd446e59bd04faa6f5d57a4153abd0c31a","modified":1686737779088},{"_id":"source/_posts/树莓派4b ubuntu 20 设置阿里源.md","hash":"eda9262308a4bf37650b5061f94a3fe8f0e2fe02","modified":1660222188124},{"_id":"source/_posts/树莓派ubuntu 20 安装k3s.md","hash":"9fc1309502bb24ef51e951246a26af312f44e92e","modified":1660222188143},{"_id":"source/_posts/树莓派frp内网穿透.md","hash":"480f8c172307f078b70f9e2add374bfdc09aabb2","modified":1660222188122},{"_id":"source/_posts/树莓派ubuntu 20 网络设置.md","hash":"a123f38cba9ab209497aa5e57bb2fa5abe3effb4","modified":1660222188123},{"_id":"source/_posts/树莓派固定ip设置.md","hash":"1ca92ad8458d9a778be8bdd5eefae895be9ce155","modified":1660222188132},{"_id":"source/_posts/镜像发布.md","hash":"a522e7ae29ec8f76ff0543c16b4069bc04ad140e","modified":1660222188128},{"_id":"source/404/index.md","hash":"53ddea53f95a244dc40b9c07581ef7932853cc4a","modified":1660222188119},{"_id":"source/_data/friends.json","hash":"aadd741725ffb4eaee9c266e3856e4f01a38d875","modified":1660222188120},{"_id":"source/about/index.md","hash":"9516986deead56a13019e6a0ebc4a28b2c6ae179","modified":1675240372622},{"_id":"source/categories/index.md","hash":"83c73b155f85d80ec924d1702c398d7dca71bf82","modified":1660222188144},{"_id":"source/contact/index.md","hash":"f4984d241e6edc9da123a4d56b69a94abfe7dab4","modified":1660222188145},{"_id":"source/tags/CNAME","hash":"819ed02f3d41355b55b1158164e291ad5f476513","modified":1660222188145},{"_id":"source/tags/index.md","hash":"6d0038bf77b8130b36fc80ec7202f76e1955e471","modified":1660222188146},{"_id":"source/friends/index.md","hash":"fe37024d5ba7a229e0833c728fccccc0882cd029","modified":1660222188145},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995677},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995678},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995678},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995678},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995678},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995672},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995673},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995673},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995673},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660221995674},{"_id":"themes/icarus/.gitignore","hash":"36084c0851a22bfd393933abb8e262562ffc6802","modified":1660221995671},{"_id":"themes/icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1660221995672},{"_id":"themes/icarus/package.json","hash":"f26f7e4dd9b194a06c2c77df2c31f3d66662e1af","modified":1660221995678},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1660221995671},{"_id":"themes/icarus/.eslintrc.json","hash":"43c7740158c8690242720b4ff7fa11426fc20c79","modified":1660221995670},{"_id":"themes/icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1660221995672},{"_id":"themes/icarus/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1660221995671},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1660221995670},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1660221995671},{"_id":"themes/icarus/include/dependency.js","hash":"0ca35dec92ccf383f45db905db1a5a0e92d7209e","modified":1660221995672},{"_id":"themes/icarus/include/register.js","hash":"ec6596b63bfb4349ba61792d905abe8e06fea625","modified":1660221995672},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1660221995671},{"_id":"themes/icarus/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1660230173258},{"_id":"themes/icarus/scripts/_friends.yml","hash":"d9ff3c9be41c6cdc505168d2a373f60a2fa9d9a8","modified":1660225023419},{"_id":"themes/icarus/languages/fr.yml","hash":"06d5c819d6108a42b28cff7b52e5410d0bed55d1","modified":1660221995675},{"_id":"themes/icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1660221995675},{"_id":"themes/icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1660221995675},{"_id":"themes/icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1660221995675},{"_id":"themes/icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1660221995676},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1660221995676},{"_id":"themes/icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1660221995676},{"_id":"themes/icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1660221995676},{"_id":"themes/icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1660221995676},{"_id":"themes/icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1660221995676},{"_id":"themes/icarus/include/config.js","hash":"1ff0f174e9670074ad2bee890d5b6da486800c9a","modified":1660221995672},{"_id":"themes/icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1660221995676},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1660221995676},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1660221995676},{"_id":"themes/icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1660221995676},{"_id":"themes/icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1660221995676},{"_id":"themes/icarus/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1660221995677},{"_id":"themes/icarus/layout/layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1660221995678},{"_id":"themes/icarus/layout/archive.jsx","hash":"05677e93d4a43f417dbbf0d63ca37a99e6349e3b","modified":1660221995676},{"_id":"themes/icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1660221995678},{"_id":"themes/icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1660221995675},{"_id":"themes/icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1660221995678},{"_id":"themes/icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1660221995678},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"e106fa240c24c8bfbdd623549651600c6d786c9c","modified":1660221995671},{"_id":"themes/icarus/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1660221995678},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"3e55bcb2156dd31ff7bf4bed12f9fb69fd1b21cd","modified":1660221995671},{"_id":"themes/icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1660221995678},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"45c59d56b198faeb9f38b88170810b98d54ebed1","modified":1660221995671},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1660221995670},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"4eabc0c60cb7102fdd5e4b0fbd8c0ac4c17cc8d0","modified":1660221995671},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1660221995670},{"_id":"themes/icarus/include/migration/head.js","hash":"75bb762d715aa3b27037512051641a06fc31fb5d","modified":1660221995672},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1660221995671},{"_id":"themes/icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1660221995672},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"b49270a202d839c298e584b5d017f56140c7e7a0","modified":1660221995671},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1660221995671},{"_id":"themes/icarus/include/schema/config.json","hash":"b949c52d02d5ee520ae4666a016ce91faf6fb350","modified":1660221995673},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1660221995672},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"48b6bd2cc567687a7b1648c55c8f9de9d44fa9e1","modified":1660221995671},{"_id":"themes/icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1660221995674},{"_id":"themes/icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1660221995674},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1660221995672},{"_id":"themes/icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1660221995674},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1660221995674},{"_id":"themes/icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1660221995674},{"_id":"themes/icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1660221995674},{"_id":"themes/icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1660221995674},{"_id":"themes/icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1660221995674},{"_id":"themes/icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1660221995674},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1660221995674},{"_id":"themes/icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1660221995675},{"_id":"themes/icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1660221995675},{"_id":"themes/icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1660221995675},{"_id":"themes/icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1660221995675},{"_id":"themes/icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1660221995675},{"_id":"themes/icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1660221995679},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1660221995679},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1660221995679},{"_id":"themes/icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1660221995675},{"_id":"themes/icarus/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1660221995679},{"_id":"themes/icarus/source/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1660221995679},{"_id":"themes/icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1660221995679},{"_id":"themes/icarus/include/util/friends.js","hash":"d2f2ae4ff369055c2e5ec91d9495710bf62959ce","modified":1660224035303},{"_id":"themes/icarus/source/img/avatar.jpg","hash":"a9f5fd4324a38f366f0417374b4fe98693743bc9","modified":1660226262227},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1660221995679},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1660221995680},{"_id":"themes/icarus/source/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1660221995680},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1660221995680},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1660221995680},{"_id":"themes/icarus/layout/common/article.jsx","hash":"e2765287c6bc6eb97975a1bb4e325b046e95b392","modified":1660221995677},{"_id":"themes/icarus/source/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1660221995680},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"427089c33002707b76e2f38709459a6824fd0f9b","modified":1660221995677},{"_id":"themes/icarus/layout/common/head.jsx","hash":"2ec1f511f32e3a9c86d49f1338f57ae5ece18898","modified":1660221995677},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1660221995677},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1660221995677},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1660221995680},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"baa8e40e036a3ec0114d96893b708435104b4ba9","modified":1660221995677},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1660221995677},{"_id":"themes/icarus/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1660221995677},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"251263b97de12f2b8d1fce2514e83430f2515b94","modified":1660221995677},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"0fe1fddab431fb9f63906d8c480d5cd6b33abc32","modified":1660221995677},{"_id":"themes/icarus/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1660221995677},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1660221995678},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1660221995672},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"f49270b619f5d2c3decde6b0b5a0c3bbab4b54a5","modified":1660221995672},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1660221995678},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"09d706cbb94d6da9a0d15c719ce7139325cae1c7","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1660221995673},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1660221995680},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1660221995673},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1660226914781},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1660221995673},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1660232701957},{"_id":"themes/icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1660221995673},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1660221995674},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1678617220974},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1678617220974},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1678617220974},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1678617220974},{"_id":"public/content.json","hash":"6a63dc70266f442e271ee0421c1066571eec189b","modified":1690856184406},{"_id":"public/manifest.json","hash":"9c6c55561aabce012690965ee44bb98ccce176aa","modified":1678617220974},{"_id":"public/404/index.html","hash":"fdaeb9a3dd152d04ff7254e94c05ec8733cc88cb","modified":1690856095422},{"_id":"public/about/index.html","hash":"e4ba6710a8ebb7f58595dc630d8d2d40bd89ba10","modified":1690856095422},{"_id":"public/2022/08/08/202208W1/index.html","hash":"da393d5e96281af8e1455eb8b3050ccd7a497c93","modified":1690856095422},{"_id":"public/2022/07/24/202207W3/index.html","hash":"c079a72bc9ce2ef8ece7c769e9acd76cdd10ba46","modified":1690856095422},{"_id":"public/2022/05/08/2022已过三分之一/index.html","hash":"bac78da2651164dd50adbf4160c535247f4511ab","modified":1690856095422},{"_id":"public/2022/01/01/2022/index.html","hash":"bf688c6fb69e1ec51753e0494c6a6769d2613c66","modified":1679107174037},{"_id":"public/2021/10/05/do things matters/index.html","hash":"e0c3e98078d7aeb454d1d7c4efb02fad859be9c2","modified":1690856095422},{"_id":"public/2021/07/08/围棋第一次胜局/index.html","hash":"17adc41c2c76523ea9960d6b2a3572e9d907109a","modified":1690856095422},{"_id":"public/2021/07/08/写了个脚本把以前的博客从sqlite转成md/index.html","hash":"1be86151d59bf5f39fa1cd0778c52b2561c50e4e","modified":1660582699249},{"_id":"public/2021/07/07/hello-world/index.html","hash":"ccfeb1df09d1d2865735adb885c88c273e00034a","modified":1679107174037},{"_id":"public/2021/07/07/first/index.html","hash":"69369c7382613ab3efae92021cff16238365d1cb","modified":1690856095422},{"_id":"public/2021/07/04/wsl2 安装 Centos8/index.html","hash":"a610ebabda51de7569a6d513959b954127d50a70","modified":1690856095422},{"_id":"public/2021/07/01/windows 安装 helm/index.html","hash":"65cc1793351820d452193d05cb10f9030615227f","modified":1686737748609},{"_id":"public/2021/02/11/树莓派ubuntu 20 安装k3s/index.html","hash":"156cb43c4d6c6739b3c3b6c5a1b97f6984a2144f","modified":1690856095422},{"_id":"public/2020/11/14/Windows10 docker desktop k8s/index.html","hash":"25d52950b448e637c0cea25f0664b7a022fac7d7","modified":1690856095422},{"_id":"public/2020/09/26/Borg状态共享/index.html","hash":"4acff6dd643260a2bb66b9a113422bf74d30290d","modified":1679670618388},{"_id":"public/2020/08/30/docker pull更换源/index.html","hash":"1ad8a3c8f7ca793eb4b7fab7394d271829985e46","modified":1690856095422},{"_id":"public/2020/05/31/树莓派frp内网穿透/index.html","hash":"d65050eb06567b4787ebfc15a5c9c795f7b5000f","modified":1690856095422},{"_id":"public/2020/09/05/树莓派ubuntu 20 网络设置/index.html","hash":"eb8a91b7f51c2969e0d5752511109bed2a91d4a3","modified":1690856095422},{"_id":"public/2020/05/30/树莓派固定ip设置/index.html","hash":"240285c8a7d8bdbee9494109da489563a2b18e24","modified":1690856095422},{"_id":"public/2020/09/05/树莓派4b ubuntu 20 设置阿里源/index.html","hash":"653668f353c3bfe29a9097ed86bc18bf7501440d","modified":1690856095422},{"_id":"public/2020/05/07/pathlib模块用法/index.html","hash":"2a2f2ff3274cebba128e98d67221ca4357c7b015","modified":1679670618388},{"_id":"public/2020/05/02/Github搜索开源项目方式/index.html","hash":"b7603d363a62355c69577a41b86066fec58ff9b6","modified":1690856095422},{"_id":"public/2020/05/05/windows终端命令行下使用网络代理/index.html","hash":"815911bfc57ce1e38ea87693468decc6ac9c94e1","modified":1690856095422},{"_id":"public/2020/05/09/Git 更新fork代码的内容/index.html","hash":"075f03f7ccac117ce98e5fe0dc0666ff54fe849c","modified":1679670618388},{"_id":"public/2020/04/27/plan/index.html","hash":"9d4887c1f389ec462b2abc1ed60df44e0f491dec","modified":1679670618388},{"_id":"public/2020/04/02/《大秦帝国》终于到了/index.html","hash":"ce89ac8cad1a8cf8fb624f5e75ef65463f7f80e0","modified":1690856095422},{"_id":"public/2020/03/31/Git设置代理/index.html","hash":"8376210d34a2bacf8a953216560f313fa3b055dc","modified":1690856095422},{"_id":"public/2020/03/28/apscheduler/index.html","hash":"a2807349d708a684ceab2295809817d1fa4d12e3","modified":1679670618388},{"_id":"public/2020/03/28/数据库定时备份任务/index.html","hash":"d9fdb3fb0b80bb0659142c6eec360cd05d87ef7a","modified":1686737748609},{"_id":"public/2020/03/27/仿佛重生/index.html","hash":"e21bfba918a33f7b571f417b5904ebefb3d53051","modified":1679107174037},{"_id":"public/2020/02/19/Django ORM 机制/index.html","hash":"cffa8fcdb1408946882d6bd304a98ccaae5cf135","modified":1686737748609},{"_id":"public/2020/02/21/Linux 文件隐藏属性/index.html","hash":"aa36dd6445155c5902f6678ba6e97e8dd9db3d4a","modified":1686737748609},{"_id":"public/2020/02/12/drf 一次错误排查/index.html","hash":"4bbc1e6789f7786d00bf6abdaea579fc3579b520","modified":1690856095422},{"_id":"public/2019/12/28/2019和2020/index.html","hash":"0ceb2a81bee3e97c75c6e34df478b713744adfd9","modified":1690856095422},{"_id":"public/2019/12/28/Elasticsearch基本查询/index.html","hash":"2e14c5cbf1af081a88dae418c2b0d72354f50483","modified":1690856095422},{"_id":"public/2019/12/28/Elasticsearch组合查询/index.html","hash":"926862e740c12478da4f66f64c171bf8041efca0","modified":1690856095422},{"_id":"public/2020/02/13/DRF JWT 配置/index.html","hash":"594c8448619228808eb322baa3cf2c20c1a30ca9","modified":1679670618388},{"_id":"public/2020/02/18/Linux文件属性/index.html","hash":"9e28a8f46a94da933024d60aa59ee3f0aa1efa86","modified":1686737748609},{"_id":"public/2019/12/28/Elasticsearch操作/index.html","hash":"e954fa3926a73fbd9b20547dc4b9497710505bf3","modified":1690856095422},{"_id":"public/2019/12/28/Elasticsearch配置/index.html","hash":"328bda81fe6889bd0463921773a207f454550f13","modified":1690856095422},{"_id":"public/2019/12/20/Python 线程池 ThreadPoolExecutor/index.html","hash":"b76aef6bb24101e3542793b74bcd157390619adc","modified":1679670618388},{"_id":"public/2019/12/20/Docker 指令2/index.html","hash":"095fbe2836728a8059ac620a4bd3ad301b7d960c","modified":1690856095422},{"_id":"public/2019/12/20/镜像发布/index.html","hash":"662fc418e951dfdd3524a58ce8ba6c32d1fc5d98","modified":1679107174037},{"_id":"public/2019/12/20/Docker 指令/index.html","hash":"e25448f684c47d0827057123d9b2fd01c56ec692","modified":1690856095422},{"_id":"public/2019/12/16/来到深圳/index.html","hash":"66efee011645c3050e9a195b9b4dd02b3f87e273","modified":1686737748609},{"_id":"public/2019/12/04/django3 choices 新特性/index.html","hash":"f002e884f9486b6d587e98201fc064cb5de82a79","modified":1686737748609},{"_id":"public/2019/12/03/win10 osg.js 使用/index.html","hash":"fc6a4ad23609c38e98c2ee4d9b89a7d583180c94","modified":1686737748609},{"_id":"public/2019/11/28/django-allauth 阿里云发送邮件出现nginx 504解决方法/index.html","hash":"064af78de702d8835a277ea81b51a9d3b67561e7","modified":1686737748609},{"_id":"public/2019/11/27/ubuntu 部署 django2.0 + uwsgi + nginx/index.html","hash":"733aa61536a53403306af8c8e3249f7525203804","modified":1686737748609},{"_id":"public/2019/11/27/ubuntu python3.7 安装uwsgi 常见错误/index.html","hash":"07bb8fe7b0628e09e8a4dea4182e507c476ec247","modified":1686737748609},{"_id":"public/2019/11/27/django Signals/index.html","hash":"3bc800be1e7de1bb4864536fcf13b785ae7e19a9","modified":1686737748609},{"_id":"public/2019/11/27/Django 使用 logging 模块的一次记录/index.html","hash":"188844064a67c759e38cf74314f1c83cfa1137b3","modified":1686737748609},{"_id":"public/2019/11/27/django 图片储存七牛云/index.html","hash":"b3b8be3c348ea7b281bee370d34c34ce16e28109","modified":1686737748609},{"_id":"public/2019/11/27/Django2.0 重写用户模型/index.html","hash":"31e4381c3d87feba6c62c7aadba8f89337a601ad","modified":1686737748609},{"_id":"public/2019/11/27/Ubuntu系统安装redis/index.html","hash":"f3e2b4e418ed025223cf6eb4f3081e2879fab572","modified":1686737748609},{"_id":"public/2019/11/27/Redis 数据保留/index.html","hash":"3764e8d040eabc5f0d9c5af03eac54e99ab9b5be","modified":1679670618388},{"_id":"public/2019/12/21/删除排序数组中的重复项/index.html","hash":"b6e17656995e53259d3fed2c72a28cff87e22c1c","modified":1686737748609},{"_id":"public/2019/11/27/pipenv 使用/index.html","hash":"5091cc2866ed3be841d5406ca545d593bacca203","modified":1679670618388},{"_id":"public/2019/11/23/Class-based views/index.html","hash":"90da8d1557917fced8ede3e571c7cdbb1230c60e","modified":1686737748609},{"_id":"public/2019/11/20/supervisor + pipenv + uwsgi/index.html","hash":"64dd4c23d21b7af494ce854f60baf3af20872b90","modified":1686737748609},{"_id":"public/categories/生活/index.html","hash":"fd3d9e042372554b4ec8309bbeec46bdb19f5f0d","modified":1690856095422},{"_id":"public/categories/python/index.html","hash":"af4d099fe483b1558cab57286b8cc392bddeb4fe","modified":1686737748609},{"_id":"public/categories/python/page/2/index.html","hash":"d4eb295c77477c0838274026e81e50612caa89a0","modified":1679670618388},{"_id":"public/categories/Django/page/2/index.html","hash":"c8cee1074bb2693365a5fba549b7a87a24a5646f","modified":1686737748609},{"_id":"public/categories/数据库/index.html","hash":"d45c846fe7a4b7e2a16f0f5ee72e6f5d97cd4c68","modified":1690856095422},{"_id":"public/categories/数据库/page/2/index.html","hash":"ace9a1ffea4ab1d027e7ec7b93f82c0bfeb5a80a","modified":1679670618388},{"_id":"public/categories/docker/index.html","hash":"1d59c57717de01088bcbeb43f082ac70fc7484bf","modified":1690856095422},{"_id":"public/categories/Django/index.html","hash":"621fd23b18c65afd9188924658b727ddc9c68957","modified":1690856095422},{"_id":"public/categories/生活/page/2/index.html","hash":"08c45afc774eee2eff004d48d0e22213aeb62da7","modified":1690856095422},{"_id":"public/categories/Git-Github/index.html","hash":"bcd98ab647d5d865be8810709f5b3939b792ff98","modified":1690856095422},{"_id":"public/categories/其他/index.html","hash":"4d4da026ed234f83fd170c59847a696406aef7cc","modified":1690856095422},{"_id":"public/categories/其他/page/2/index.html","hash":"df844b319b6cdb5cc9ea31c1ff33ea9d9f805d18","modified":1686737748609},{"_id":"public/categories/Linux/index.html","hash":"6602556a52b79b3606bd6eecce97f90632871500","modified":1686737748609},{"_id":"public/categories/Markdown/index.html","hash":"2f957893592ff8d45c3c9dc18aac6625a8ed4343","modified":1690856095422},{"_id":"public/categories/充电/index.html","hash":"96721dbe1b5f87921dfd8e24dc99323a33c50d61","modified":1679670618388},{"_id":"public/categories/算法/index.html","hash":"63987b7de06056f2b7d9181d89690620434279b2","modified":1686737748609},{"_id":"public/categories/阅读/index.html","hash":"86bbf996b9d4fae4b2fe226af62d6e913454875e","modified":1690856095422},{"_id":"public/categories/树莓派/index.html","hash":"fe406e8204eb980790ff5b87f3f16a274d0a6525","modified":1690856095422},{"_id":"public/index.html","hash":"d7e50967c99e84fc94b11aec4c8b9945e1cf0d83","modified":1690856184406},{"_id":"public/page/3/index.html","hash":"56771cef527dfae68d7581c2fe9f7a357394ef39","modified":1690856095422},{"_id":"public/page/4/index.html","hash":"81106f808d6e9ed148019496d642e571c81fe9b2","modified":1690856095422},{"_id":"public/page/2/index.html","hash":"d101b11606f30670f813a1f71c4ad77298975874","modified":1690856095422},{"_id":"public/page/5/index.html","hash":"7df02b6ed9f64c303e63e4668fb589408199435a","modified":1690856095422},{"_id":"public/page/6/index.html","hash":"deb76ef0f75e2457c488ddb74438922bdfe912aa","modified":1690856095422},{"_id":"public/tags/python/page/2/index.html","hash":"5b4ec002ad8c25bfa189f6014ba686f2fe195330","modified":1679670618388},{"_id":"public/tags/python/index.html","hash":"d03bc8825c9342c2bfc04249fb077086fb95427e","modified":1686737748609},{"_id":"public/tags/Django/index.html","hash":"039c94bc6e1de6f76444d87984f30488d12bdb8a","modified":1686737748609},{"_id":"public/tags/Django/page/2/index.html","hash":"a31eaa0dbd3402b1698197e6c4ea37cfac8d011d","modified":1686737748609},{"_id":"public/tags/多线程/index.html","hash":"4ae757607e4ba61bebe1d7d4ca9c879392631ede","modified":1679670618388},{"_id":"public/tags/redis/index.html","hash":"e99ee9baaf6eb63678f16d76570e46437b7d5d4d","modified":1686737748609},{"_id":"public/tags/docker/index.html","hash":"84aa7cb421786104bcece269823aa93a7596fa2b","modified":1690856095422},{"_id":"public/tags/windows/index.html","hash":"0b68f2fa983583cd72f2847049a27c9895ce93ab","modified":1690856095422},{"_id":"public/tags/k8s/index.html","hash":"438104dd27641a5d82e39e2dcac663a7d78f4c2d","modified":1690856095422},{"_id":"public/tags/django3/index.html","hash":"b312e82569d3ee5b5ec308e0b6beb164f4f26d1c","modified":1686737748609},{"_id":"public/tags/邮件/index.html","hash":"855b48a89965dda5dae73fe22cc0cc6fb2c48e61","modified":1686737748609},{"_id":"public/tags/Typora/index.html","hash":"1df1305abcf2e4d6e82c95d19bb2dff71e93bf57","modified":1690856095422},{"_id":"public/tags/Markdown/index.html","hash":"5780471fdf2a5df65a74a86ec31433f1e6d8215f","modified":1690856095422},{"_id":"public/tags/FastAPI/index.html","hash":"1c6e109f8df6159bf0e588f2848112887a3a0a1f","modified":1679670618388},{"_id":"public/tags/生活/index.html","hash":"5b63a511bee7eb81fee8849c32678b19a5f64dee","modified":1690856095422},{"_id":"public/tags/Vue/index.html","hash":"1384b210dd4236a117bcfcfddf4b378de8f9661e","modified":1679670618388},{"_id":"public/tags/自动化/index.html","hash":"dc417fc9505f40cdfa864ee15388dd92bfb3c205","modified":1686737748609},{"_id":"public/tags/WSL2/index.html","hash":"6a15bbbcf8dd9ef27cbb29b3a360f9df58862f5e","modified":1690856095422},{"_id":"public/tags/树莓派/index.html","hash":"0bea718bbc850ad84d4b8df4adc08f583044664d","modified":1690856095422},{"_id":"public/tags/uwsgi/index.html","hash":"d612bdfc782378b6953be5aa0eed329347a477d1","modified":1686737748609},{"_id":"public/archives/index.html","hash":"b42fa6c89b532ab70910abfa5cd5d985192931f2","modified":1690856095422},{"_id":"public/tags/历史相关/index.html","hash":"3f475e49e16632c3d35a5559c8e5cfe9dcbc32c8","modified":1690856095422},{"_id":"public/archives/page/3/index.html","hash":"ec035b615d9eda52bb3ad0a0ef78e09ba8ceadf0","modified":1690856095422},{"_id":"public/archives/page/2/index.html","hash":"72cac4966a096ed2cedbd1240e7bc6173b4f0397","modified":1690856095422},{"_id":"public/archives/page/5/index.html","hash":"e270b7f10e56b8266244acb2286a31c19a8eec6c","modified":1690856095422},{"_id":"public/archives/page/7/index.html","hash":"2e8a421a30dd36415ef731b8343b05f26520cbbd","modified":1690856095422},{"_id":"public/archives/page/4/index.html","hash":"42c5745c87bb4572a1f0c192b119a5dacbbf249f","modified":1690856095422},{"_id":"public/archives/page/6/index.html","hash":"01a987421707d96b846cf1f9216dc2e71a7348f7","modified":1690856095422},{"_id":"public/archives/page/8/index.html","hash":"09f14fd98c21ff3996562642bf12b0abb52206e1","modified":1690856095422},{"_id":"public/archives/page/9/index.html","hash":"a138c2218ae9c4bf06f44148e7a9985872179924","modified":1690856095422},{"_id":"public/archives/page/10/index.html","hash":"e4667628fb5fbc0b79127828a7d3bc66e7bf8004","modified":1690856095422},{"_id":"public/archives/2019/index.html","hash":"d61dc8172ea6903a9051ad037257f5297c48775d","modified":1690856095422},{"_id":"public/archives/2019/page/2/index.html","hash":"510e5924519327de0cfdce5a26baf503812c8abf","modified":1690856095422},{"_id":"public/archives/2019/page/3/index.html","hash":"a037cebb9ae02fbe090bf24f88669960730a9281","modified":1686737748609},{"_id":"public/archives/2019/page/4/index.html","hash":"b08db456dcf6a9f0d9474edeceebdabac44d1c3c","modified":1686737748609},{"_id":"public/archives/2019/page/5/index.html","hash":"7a9374c7479c2e55cff9c0ab5beed37601869acf","modified":1679107174037},{"_id":"public/archives/2019/11/index.html","hash":"f22d1aa066d4e0f99c92d752168b5adf15ed54da","modified":1686737748609},{"_id":"public/archives/2019/11/page/2/index.html","hash":"1956f1d66db755384e46d4262adb3d529a338486","modified":1686737748609},{"_id":"public/archives/2019/12/index.html","hash":"5fbec9603b63588072303566696c7ed0748968cb","modified":1690856095422},{"_id":"public/archives/2019/12/page/2/index.html","hash":"faf29912d2beff5a2e723aa01619564ba1bcc905","modified":1690856095422},{"_id":"public/archives/2020/index.html","hash":"1c601cf3fe40366e7c0afaa015276e3370468ac8","modified":1690856095422},{"_id":"public/archives/2020/page/2/index.html","hash":"7dfae3ad52e067bb3f5ef991ab989e648a19e98c","modified":1690856095422},{"_id":"public/archives/2019/12/page/3/index.html","hash":"c56050415de2987d1f91ce2456bec3ae10111e71","modified":1679107174037},{"_id":"public/archives/2020/page/3/index.html","hash":"a639f9962cffa673dbfd02cc9c8012e00bac829f","modified":1686737748609},{"_id":"public/archives/2020/02/index.html","hash":"beba4ceb3a276fcd8254c9dce46eb5601403c59c","modified":1690856095422},{"_id":"public/archives/2020/page/4/index.html","hash":"27550815a772dd912b7cf16924373354b0bcdea8","modified":1679670618388},{"_id":"public/archives/2020/03/index.html","hash":"3c63246878131b38de2fe224ec2f042de4f02b43","modified":1690856095422},{"_id":"public/archives/2020/04/index.html","hash":"5b40b4e313e6cb5b87f40176ea03015da3af83f0","modified":1690856095422},{"_id":"public/archives/2020/05/index.html","hash":"683ce332be3065af17d93c4870c6664975b6ea52","modified":1690856095422},{"_id":"public/archives/2020/08/index.html","hash":"d2de32d4491a420ba0f9ebe5ce9faa7322309a30","modified":1690856095422},{"_id":"public/archives/2020/09/index.html","hash":"9b2d405b45e5e32a075302ec2117d17dd46a648d","modified":1690856095422},{"_id":"public/archives/2020/11/index.html","hash":"a6cd915cdc360dc2c0fa1c8557442265313f9d0d","modified":1690856095422},{"_id":"public/archives/2021/index.html","hash":"efe0dc78e0704d49d796ad956e46b8c3a897923c","modified":1690856095422},{"_id":"public/archives/2021/02/index.html","hash":"ef6a48ce5a1d4e87617c7e0f839b57cc6c2a816a","modified":1690856095422},{"_id":"public/archives/2021/07/index.html","hash":"00f4991cfe70a7641b3eb016c996d0cd6ef444ba","modified":1690856095422},{"_id":"public/archives/2022/index.html","hash":"c5fe3e4e275a9af8cddae24b6318b478eccbae2c","modified":1690856095422},{"_id":"public/archives/2021/10/index.html","hash":"6ee129b74982ac820b826da152c8564e980a22e7","modified":1690856095422},{"_id":"public/archives/2022/01/index.html","hash":"78669220b62ab9d907475dcfd6cbd7b2ba4d2aea","modified":1690856095422},{"_id":"public/archives/2022/05/index.html","hash":"49a4737a7a4005f0d19822b3a2ab7a472185574a","modified":1690856095422},{"_id":"public/archives/2021/page/2/index.html","hash":"0b58a3f7f845abb2e34d950c963a6bfd45bc030a","modified":1679107174037},{"_id":"public/archives/2022/07/index.html","hash":"65f38315802dcb55af6515eb9beb576a4490b965","modified":1690856095422},{"_id":"public/archives/2022/08/index.html","hash":"6d126d9f4c2921380ae54f1b71c0a5eeaa11d862","modified":1690856095422},{"_id":"public/categories/index.html","hash":"3000428202e7617f3d03768b8b78b1a5850bc75a","modified":1690856095422},{"_id":"public/tags/index.html","hash":"58b99d09770f851b362dd0bcc3fdd25da36d8827","modified":1690856095422},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1678617220974},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1678617220974},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1678617220974},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1678617220974},{"_id":"source/game/index.md","hash":"af530977ff5b370133f278448db3972f89ce9bf0","modified":1660232896023},{"_id":"source/weelly/index.md","hash":"5dc36b30853cf227980d615955a9ad8c7e6d3383","modified":1660232985835},{"_id":"source/weekly/index.md","hash":"cc4139f859ca352a3f6770957fd4b6b98435037d","modified":1674386937509},{"_id":"public/weekly/index.html","hash":"f62a708dac41cd3d60b9ea4c87cb7d9b8598c16e","modified":1690856095422},{"_id":"source/_posts/My-Gallery.md","hash":"56cf881cce47bfe145d39488701bd5f27debbd06","modified":1660443902558},{"_id":"public/2022/08/14/My-Gallery/index.html","hash":"a0d4902d37c7aef2afa2fb890dbaf99a77355b87","modified":1660443928685},{"_id":"source/weekly/202207W3.md","hash":"9b8ee0cbe85dccf36ffb692ecaade5b5cd41d377","modified":1660483395054},{"_id":"source/weekly/202208W1.md","hash":"a057a80ab4d9bf440be0c4a4d4229051918df654","modified":1660483449969},{"_id":"public/weekly/202207W3.html","hash":"8dc57474a304528088420b10f49730a29f8a967e","modified":1673496577313},{"_id":"public/weekly/202208W1.html","hash":"10e1dffa56e835b9e34c61aa93aebca3ecc140e9","modified":1673496577313},{"_id":"public/atom.xml","hash":"3916a19e4c58b3c76c1c78a9c1d181b51704a587","modified":1690856184406},{"_id":"themes/icarus/source/img/chess.jpeg","hash":"d2cc585b6e37bd214d084f4459c9096d99c8ad33","modified":1660459855915},{"_id":"public/img/chess.jpeg","hash":"d2cc585b6e37bd214d084f4459c9096d99c8ad33","modified":1678617220974},{"_id":"source/weekly/202208W2.md","hash":"3327f1507cae8d735b652c810949dcde5224a966","modified":1660483651401},{"_id":"public/weekly/202208W2.html","hash":"b27a02158e13804eca35f56a4ff062d99f6b1ecf","modified":1673496577313},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1678617220974},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1678617220974},{"_id":"public/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1678617220974},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1678617220974},{"_id":"public/CNAME","hash":"819ed02f3d41355b55b1158164e291ad5f476513","modified":1678617220974},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1678617220974},{"_id":"public/img/avatar.jpg","hash":"a9f5fd4324a38f366f0417374b4fe98693743bc9","modified":1678617220974},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1678617220974},{"_id":"public/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1678617220974},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1678617220974},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1678617220974},{"_id":"public/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1678617220974},{"_id":"public/css/style.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1678617220974},{"_id":"public/css/default.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1678617220974},{"_id":"public/css/cyberpunk.css","hash":"b462177bee11f76e84e649f8192d5a68cb4b1402","modified":1678617220974},{"_id":"source/_posts/时生.md","hash":"85f34589228db5a7bca7a0c72e820878f1590162","modified":1662384919507},{"_id":"source/weekly/202208W4.md","hash":"1ae96d0be9d8736fa452358156cf35e2a4c9a753","modified":1662384919512},{"_id":"source/weekly/202208W3.md","hash":"d58dfae66ac755aebc7837cd39b4b04e74c56c89","modified":1662384919512},{"_id":"source/weekly/202209W1.md","hash":"d567c468559cf7b6a88ffd798f3d6c158e864da9","modified":1662450781006},{"_id":"source/weekly/202210W4.md","hash":"7aef3f68b629559112036115d71ab3992efb292b","modified":1667192362155},{"_id":"source/weekly/202211W2.md","hash":"de0fceb0da4a669061f489391cfdd163b8b722ea","modified":1668478002425},{"_id":"source/weekly/202210W1.md","hash":"ad218aa94eac72dca2de3eb806c6a8277c11ed37","modified":1665497581039},{"_id":"source/weekly/202211W1.md","hash":"a65f5837871ac2b42307434091d49f1f4bf26029","modified":1667837556427},{"_id":"source/_posts/202211W2.md","hash":"440243070339093b3f9fac9f8b4c815388846adf","modified":1676792160141},{"_id":"source/weekly/202209W2.md","hash":"6542e2c62ae4ca3fb178f369435daa69dc1aae75","modified":1663034255749},{"_id":"source/weekly/202209W3.md","hash":"45abc5f656db25bbc7eac5e42d548ea249318534","modified":1663603024962},{"_id":"source/weekly/202210W2.md","hash":"59ce86cbf54462b59a95fac16a80931f30589fd2","modified":1665499629652},{"_id":"source/weekly/202209W4.md","hash":"27480d4c60de8ea13011953907d2b9f5ee825457","modified":1664293200937},{"_id":"public/weekly/202208W4.html","hash":"5f58ac7eb7beb6911c7b3e0d9fbc3a2d71001cfb","modified":1673496577313},{"_id":"public/weekly/202208W3.html","hash":"db5a89f66bc6962040b24a0a52e4e7ecfa725d0a","modified":1673496577313},{"_id":"public/weekly/202209W3.html","hash":"ed764eb7c65a50b5798815dd5ddf9c1cd407e38c","modified":1673496577313},{"_id":"public/weekly/202209W2.html","hash":"a2d414358465b9dd04cd85e5a39d418ddba173d2","modified":1673496577313},{"_id":"public/weekly/202209W1.html","hash":"34be8503e681d47c2af8a47e8e1a59a1e6d745d4","modified":1673496577313},{"_id":"public/weekly/202210W4.html","hash":"a62614a1b77af2e894784ea7a223a717a860a377","modified":1673496577313},{"_id":"public/weekly/202211W1.html","hash":"8ff3ee73c91535cbf6bf0ac0bae24f2ced885ae9","modified":1673496577313},{"_id":"public/weekly/202210W1.html","hash":"50d4e324ce7f510430b76ff0dd97f535b7e221a1","modified":1673496577313},{"_id":"public/weekly/202209W4.html","hash":"b7bc5ab1026471c9b476b345db59da3d90cf86d4","modified":1673496577313},{"_id":"public/weekly/202210W2.html","hash":"0e4d5983b3bc0c73bd881910c5d33dcf5d817895","modified":1673496577313},{"_id":"public/2022/08/23/时生/index.html","hash":"a99bcb8c79cf6d661cb34fea0f00380a38d21126","modified":1690856095422},{"_id":"public/weekly/202211W2.html","hash":"c4f060b45f9ace8129e5159b7c3f9a45b625cd58","modified":1673496577313},{"_id":"public/2022/11/15/202211W2/index.html","hash":"abcab3889beb3104cd31fddaa83192109ec4e67d","modified":1690856095422},{"_id":"public/archives/2022/11/index.html","hash":"3d55f0cfd65094e94dd28b3484dd61b9d93ed72f","modified":1690856095422},{"_id":"public/tags/小说/index.html","hash":"7c60cdb9716aa3ca0c1bb69fd2bfb524906aa372","modified":1690856095422},{"_id":"public/tags/东野圭吾/index.html","hash":"7903d6150c3194d3bb02c088907e5f1c641436d1","modified":1690856095422},{"_id":"source/_posts/Fabric实践.md","hash":"c38292561102187692dc0991db8229c30a8a25e9","modified":1668748638790},{"_id":"public/2022/11/15/Fabric实践/index.html","hash":"1196b9b1cc36837dc007a00b21467d5d2bd8a20d","modified":1690856095422},{"_id":"public/categories/区块链/index.html","hash":"3c0119b9fbef4cb33c7812395770a90404a717ee","modified":1690856095422},{"_id":"public/tags/Hyperledger/index.html","hash":"87c7e44319efe00796ce17867e924a860208b3ed","modified":1690856095422},{"_id":"public/tags/Fabric/index.html","hash":"b93d515597795e981ad23c440ab8dc16399479f1","modified":1690856095422},{"_id":"source/_posts/Fabric深入源码.md","hash":"f87bf5cd8559adeb43a6b614095cf32816a7bdfd","modified":1668749072757},{"_id":"source/_posts/Fabric架构.md","hash":"f6c647329058b44be9ce7c14702d6a4f3e824950","modified":1668748711348},{"_id":"public/2022/11/18/Fabric架构/index.html","hash":"6a3e4b12bfcdd138ff09b9e6b0d0951c72439517","modified":1671417090244},{"_id":"public/2022/11/18/Fabric深入源码/index.html","hash":"ed0f25d183d40fe0562509bf3fc247f4b790e512","modified":1671417090244},{"_id":"public/categories/区块链/Fabric/index.html","hash":"aebd376473cef263e39c4ce179efc41bde0adc51","modified":1690856095422},{"_id":"public/categories/区块链/Fabric/低层/index.html","hash":"0e0c15a0dfe07f11970abc05768a8c4896497405","modified":1671417090244},{"_id":"source/_posts/你要不要读博.md","hash":"722196be25c283442d6f48947edd745e169fbd92","modified":1668997184213},{"_id":"source/weekly/202211W3.md","hash":"bffbc64d461b0b22ca62c0c76db19cde10292993","modified":1668953746420},{"_id":"public/weekly/202211W3.html","hash":"7f364d41951fecac08b971b83c02a55414794fc7","modified":1673496577313},{"_id":"public/2022/11/20/你要不要读博/index.html","hash":"2aeba9830e76f2c134889c174e796e5d1f0dd7c1","modified":1679107174037},{"_id":"public/page/7/index.html","hash":"715f0659eb6fe95524392098cc6fd68c61350720","modified":1690856095422},{"_id":"public/archives/page/11/index.html","hash":"c2b1551eb4ab142ca416533c6bab2682e9471e7f","modified":1690856095422},{"_id":"public/archives/2022/page/2/index.html","hash":"6f1a90d368964b57d84377e2b20f6d963ff16c79","modified":1690856095422},{"_id":"public/tags/随笔/index.html","hash":"aaf1c22120de599b8dee7541222854170e28df85","modified":1690856095422},{"_id":"source/weekly/202212W1.md","hash":"232c570424dbc3c7e6bf940c6cb676b6ca18902a","modified":1671417212518},{"_id":"source/_posts/个人工具.md","hash":"e5d1e172d6587ba8473291e05f9aae1d93a2c2e5","modified":1686755168710},{"_id":"source/weekly/202211W4.md","hash":"a182636a2eb43b29446bb46464e70fde14aa34dc","modified":1669736774911},{"_id":"source/_posts/一起聊聊团队协同.md","hash":"9fc7926eb242b26fad9e432578709a8a70ac8789","modified":1669189498635},{"_id":"source/_posts/202212W1.md","hash":"295dd9c32c8cd771a9d056bde5fbdcd11196a693","modified":1676792160141},{"_id":"public/weekly/202212W1.html","hash":"31139cd7dd608f4f6000d3130dc68e0290072c00","modified":1673496577313},{"_id":"public/weekly/202211W4.html","hash":"6140fbc09ba0a98db90c60d0ee43787197e0b7ec","modified":1673496577313},{"_id":"public/2022/12/19/202212W1/index.html","hash":"7eb874ffef5b4af0a79a73aa41b5c4f1dd35f89b","modified":1671417090244},{"_id":"public/2022/11/22/一起聊聊团队协同/index.html","hash":"34ab3ecd94bd5e9c569c1b627dbf2dc82c77e75d","modified":1690856095422},{"_id":"public/2022/11/23/个人工具/index.html","hash":"50266408eb7bd9838798ff272b47f0b3bb8bf248","modified":1690856095422},{"_id":"public/categories/博客/index.html","hash":"e0258fd6d603349c91ae5fa4e989eda9a905fb82","modified":1690856095422},{"_id":"public/archives/2022/12/index.html","hash":"a750ead57040b58dc3e55b442cb4ff9927164376","modified":1690856095422},{"_id":"public/tags/科技双眼啤/index.html","hash":"7461b99dc7b7ddc449ad3d980873ccc5e92d5b5b","modified":1690856095422},{"_id":"source/_posts/2022年总结.md","hash":"8b200dab1d8ec14c6bf62f3bfe59da549106654e","modified":1673496063872},{"_id":"source/weekly/202301W1.md","hash":"d2cd441effe8652de2204031afbeb3a7f3baaee8","modified":1673281283531},{"_id":"source/weekly/202212W4.md","hash":"1465ad5dc1bd5661d25346353717652066906643","modified":1672031386695},{"_id":"public/weekly/202212W4.html","hash":"4e138f719e5058199c411f009c47c5c48af2109a","modified":1673496577313},{"_id":"public/weekly/202301W1.html","hash":"ad63da8bc7c52d621fcaa75c30707a568df350b1","modified":1690856095422},{"_id":"public/2023/01/03/2022年总结/index.html","hash":"8db6c6377dcddcf85c1f92c6316eca0919ebb7c5","modified":1690856095422},{"_id":"public/archives/2023/01/index.html","hash":"e9e3d960f41e16d811d943cc6cdfe1a1e64521fb","modified":1690856095422},{"_id":"public/archives/2023/index.html","hash":"1c782c604be537c7ce1ba0382512fd4815ce633e","modified":1690856095422},{"_id":"public/tags/年终总结/index.html","hash":"b19b6faad087261c2caae3b64c0ea273641c3a68","modified":1690856095422},{"_id":"source/.DS_Store","hash":"e7ba4808607cfbb01d36e949ffc0f10faef74bb0","modified":1675042682472},{"_id":"source/index.md","hash":"766b4000c4cc52f301e8b618b75ba4b901fa7c99","modified":1673500902489},{"_id":"source/weekly/2022/202208W1.md","hash":"a057a80ab4d9bf440be0c4a4d4229051918df654","modified":1660483449969},{"_id":"source/weekly/2022/202208W3.md","hash":"d58dfae66ac755aebc7837cd39b4b04e74c56c89","modified":1661186184487},{"_id":"source/weekly/2022/202207W3.md","hash":"9b8ee0cbe85dccf36ffb692ecaade5b5cd41d377","modified":1660483395054},{"_id":"source/weekly/2022/202209W2.md","hash":"6542e2c62ae4ca3fb178f369435daa69dc1aae75","modified":1663034255749},{"_id":"source/weekly/2022/202210W1.md","hash":"ad218aa94eac72dca2de3eb806c6a8277c11ed37","modified":1665497581039},{"_id":"source/weekly/2022/202209W3.md","hash":"45abc5f656db25bbc7eac5e42d548ea249318534","modified":1663603024962},{"_id":"source/weekly/2022/202208W2.md","hash":"3327f1507cae8d735b652c810949dcde5224a966","modified":1660483651401},{"_id":"source/weekly/2022/202211W2.md","hash":"de0fceb0da4a669061f489391cfdd163b8b722ea","modified":1668478002425},{"_id":"source/weekly/2022/202210W2.md","hash":"59ce86cbf54462b59a95fac16a80931f30589fd2","modified":1665499629652},{"_id":"source/weekly/2022/202211W4.md","hash":"a182636a2eb43b29446bb46464e70fde14aa34dc","modified":1669736774911},{"_id":"source/weekly/2022/202209W4.md","hash":"27480d4c60de8ea13011953907d2b9f5ee825457","modified":1664293200937},{"_id":"source/weekly/2022/202209W1.md","hash":"d567c468559cf7b6a88ffd798f3d6c158e864da9","modified":1662450781006},{"_id":"source/weekly/2022/202208W4.md","hash":"1ae96d0be9d8736fa452358156cf35e2a4c9a753","modified":1661706332359},{"_id":"source/weekly/2022/202211W1.md","hash":"a65f5837871ac2b42307434091d49f1f4bf26029","modified":1667837556427},{"_id":"source/weekly/2022/202211W3.md","hash":"bffbc64d461b0b22ca62c0c76db19cde10292993","modified":1668953746420},{"_id":"source/weekly/2022/index.md","hash":"a4cad0cef9be61519b938e9da46e99366b49b8eb","modified":1673501288963},{"_id":"source/weekly/2022/202210W4.md","hash":"7aef3f68b629559112036115d71ab3992efb292b","modified":1667192362155},{"_id":"source/weekly/2022/202301W1.md","hash":"d2cd441effe8652de2204031afbeb3a7f3baaee8","modified":1673281283531},{"_id":"source/weekly/2022/202212W1.md","hash":"232c570424dbc3c7e6bf940c6cb676b6ca18902a","modified":1671417212518},{"_id":"source/weekly/2022/202212W4.md","hash":"1465ad5dc1bd5661d25346353717652066906643","modified":1672031386695},{"_id":"public/weekly/2022/202208W1.html","hash":"75dd5a6bd64d696ff89ce4779b06f040c2c06a7f","modified":1690856095422},{"_id":"public/weekly/2022/202208W2.html","hash":"72057a0159ce669bcfde81fa9cf979fe40c3c923","modified":1690856095422},{"_id":"public/weekly/2022/202208W3.html","hash":"2b002442f731f8e322d43ba2639aaf441576b8c6","modified":1690856095422},{"_id":"public/weekly/2022/202209W2.html","hash":"f9f4d485f93b9edec13dc1a487acf6298e5e56c7","modified":1690856095422},{"_id":"public/weekly/2022/202209W1.html","hash":"7aa2064206d381fa84b97cdc624ea77af7f75f59","modified":1690856095422},{"_id":"public/weekly/2022/202208W4.html","hash":"08f97c2bd75d55e28524347f9f5c32b908daff63","modified":1690856095422},{"_id":"public/weekly/2022/202210W1.html","hash":"eafa8a442cc979d071d96cee244aa177715e7795","modified":1690856095422},{"_id":"public/weekly/2022/202209W4.html","hash":"36bf62447383750afa7731473b9c21b7f974ca4c","modified":1690856095422},{"_id":"public/weekly/2022/202209W3.html","hash":"555cbbd25846dd4a067394b597bd66113815a83a","modified":1690856095422},{"_id":"public/weekly/2022/202210W4.html","hash":"1477f0f33bd1ceaa7125991616bc241c7d43d2d9","modified":1690856095422},{"_id":"public/weekly/2022/202211W1.html","hash":"2ea97f8ca920b00fa3b567fa916ab0d514815558","modified":1690856095422},{"_id":"public/weekly/2022/202210W2.html","hash":"83e6e533515d0c3a0956dff395a466af767f4599","modified":1690856095422},{"_id":"public/weekly/2022/202211W4.html","hash":"7e49436d7e4068bd30b900f4286b722fdd11cad3","modified":1690856095422},{"_id":"public/weekly/2022/202211W3.html","hash":"07b977d87def06ccf804e7820e96b8b7ac3b26b6","modified":1690856095422},{"_id":"public/weekly/2022/202211W2.html","hash":"e4fdf27b4b0c96458170ed479350712eb126f817","modified":1690856095422},{"_id":"public/weekly/2022/202212W1.html","hash":"bd78dd10923e92711c4827ff4be87a42e4299cac","modified":1690856095422},{"_id":"public/weekly/2022/202301W1.html","hash":"2c2ef1f2db19ef734324f96c7a762b684df7c5c4","modified":1673501661424},{"_id":"public/weekly/2022/index.html","hash":"f7e440c1afdf81612f046752a8375be87639a1a7","modified":1690856095422},{"_id":"public/weekly/2022/202212W4.html","hash":"a1c12b3d353824627a2f109a8237f1c82f76f0ec","modified":1690856095422},{"_id":"public/weekly/2022/202207W3.html","hash":"8cf74f5b6cbe5200887160b4414d34511e83e454","modified":1690856095422},{"_id":"public/weekly/index copy.html","hash":"c9ac4be749fad1b9de8647280e35f98c85ffa20a","modified":1690856095422},{"_id":"public/2023/01/03/2019和2020/index.html","hash":"82161aeae2cd2abeaff443117dcfdfae5df4eac3","modified":1673501661424},{"_id":"source/_posts/grpc.md","hash":"feab811deb9bd99a66b6cb452cd94149ec47ce29","modified":1675180197148},{"_id":"source/weekly/202301W3.md","hash":"c785aafd6a95b60d3bae55c335ae7c12c7d632fd","modified":1674386036632},{"_id":"public/weekly/202301W3.html","hash":"a47a19effb76bacab34c051aa48b17d81c434655","modified":1690856095422},{"_id":"public/2023/01/26/grpc/index.html","hash":"b59f1ef7fa22afbb56fe99255b5db41b0755907e","modified":1690856095422},{"_id":"public/categories/协议/index.html","hash":"1935323b8118854bc1f5ddef4dbc21d3d4233839","modified":1690856095422},{"_id":"public/tags/grpc/index.html","hash":"04ec484f51981ffe148ccd6135d53901f4ec36cf","modified":1675180117099},{"_id":"public/tags/go/index.html","hash":"563fd2224eda4db120ea064934b1039420f3a11f","modified":1690856095422},{"_id":"source/_posts/202209W1.md","hash":"d567c468559cf7b6a88ffd798f3d6c158e864da9","modified":1675667237565},{"_id":"source/_posts/202209W3.md","hash":"45abc5f656db25bbc7eac5e42d548ea249318534","modified":1675667237592},{"_id":"source/_posts/202208W4.md","hash":"1ae96d0be9d8736fa452358156cf35e2a4c9a753","modified":1675667237551},{"_id":"source/_posts/202208W2.md","hash":"3327f1507cae8d735b652c810949dcde5224a966","modified":1675667237523},{"_id":"source/_posts/202209W2.md","hash":"6542e2c62ae4ca3fb178f369435daa69dc1aae75","modified":1675667237578},{"_id":"source/_posts/202208W3.md","hash":"d58dfae66ac755aebc7837cd39b4b04e74c56c89","modified":1675667237537},{"_id":"source/_posts/202210W1.md","hash":"ad218aa94eac72dca2de3eb806c6a8277c11ed37","modified":1675667237641},{"_id":"source/_posts/202209W4.md","hash":"27480d4c60de8ea13011953907d2b9f5ee825457","modified":1675667237610},{"_id":"source/_posts/202211W3.md","hash":"f1e21c19d5b5dccdfa23e6eb7ceb6e965b70afa5","modified":1676792160141},{"_id":"source/_posts/202210W4.md","hash":"7aef3f68b629559112036115d71ab3992efb292b","modified":1675667237671},{"_id":"source/_posts/202301W1.md","hash":"aca997985843cd1d631d63098d2c0239b74e36c4","modified":1676792160141},{"_id":"source/_posts/202211W1.md","hash":"a65f5837871ac2b42307434091d49f1f4bf26029","modified":1675667237682},{"_id":"source/_posts/202302W1.md","hash":"6c2297e1ef941da04de84d3c388de65c0bc6e6f3","modified":1675609827658},{"_id":"source/_posts/202210W2.md","hash":"59ce86cbf54462b59a95fac16a80931f30589fd2","modified":1675667237655},{"_id":"source/_posts/202212W4.md","hash":"77d6deb54377aac5dce341391d44f671073f3728","modified":1676792160141},{"_id":"source/_posts/202211W4.md","hash":"995ff94f89832aeba6d7d4ff68e1c895c3dd81c7","modified":1676792160141},{"_id":"public/2023/02/05/202302W1/index.html","hash":"ad2fa2b415e1854fb0d7da2c83e36de07171f17d","modified":1690856095422},{"_id":"public/2023/01/09/202301W1/index.html","hash":"79de071ab22402be33ad7eac17585fd4fbaface7","modified":1690856095422},{"_id":"public/2022/12/26/202212W4/index.html","hash":"1ab70343078e02a55ca96a0b7164d6d9f297ce0b","modified":1690856095422},{"_id":"public/2022/11/29/202211W4/index.html","hash":"c8a22c5c8839cd8793dc90e10d41c6eb0765b851","modified":1690856095422},{"_id":"public/2022/12/07/202212W1/index.html","hash":"3c552708f0c74afac6330fd1c4eb3ecf6064fe86","modified":1690856095422},{"_id":"public/2022/11/20/202211W3/index.html","hash":"c84895a3bd2e55903918576d47be5741c4fdf124","modified":1690856095422},{"_id":"public/2022/11/07/202211W1/index.html","hash":"89eebf5ded2b092eaddfd124c57841f25c4edd0e","modified":1690856095422},{"_id":"public/2022/10/11/202210W2/index.html","hash":"ef9d7700eabd07af689812469ea0f6f9d2bb046b","modified":1690856095422},{"_id":"public/2022/10/31/202210W4/index.html","hash":"16fbcbc9fc728849dedb171f5b9fb61dff075e80","modified":1690856095422},{"_id":"public/2022/10/05/202210W1/index.html","hash":"d00766a8f41bc73c318444ed40114ac3b24f70e2","modified":1690856095422},{"_id":"public/2022/09/27/202209W4/index.html","hash":"c4fa7f5e26b3398a4b2724be0128f6179e1bf227","modified":1690856095422},{"_id":"public/2022/09/19/202209W3/index.html","hash":"c82a33be3f55b2aec8554872d6d49f70df00dab9","modified":1690856095422},{"_id":"public/2022/09/13/202209W2/index.html","hash":"38195f150cc2f319846cc63cf6c398ba02f302fd","modified":1690856095422},{"_id":"public/2022/09/05/202209W1/index.html","hash":"5f9e9b074a9f68cfa5f604d0686662e23c5d7abd","modified":1690856095422},{"_id":"public/2022/08/29/202208W4/index.html","hash":"132d43aeba578064fad62189d86555b52a7e09d8","modified":1690856095422},{"_id":"public/2022/08/23/202208W3/index.html","hash":"452fc5f197c6a1add742e1f8135e01d18cc4296c","modified":1690856095422},{"_id":"public/2022/08/14/202208W2/index.html","hash":"94211ed0ea652f24790cab3be4b9a998a0279d6a","modified":1690856095422},{"_id":"public/archives/page/12/index.html","hash":"908d3a5197e9b973d327a15a8353bc315fcce2d2","modified":1686737748609},{"_id":"public/archives/page/13/index.html","hash":"86efb0eef645c3240a968fe5fea379b4fbf79b0c","modified":1686737748609},{"_id":"public/archives/page/14/index.html","hash":"5c12b8b3914f569df1cc04597c047328f6636fdd","modified":1686737748609},{"_id":"public/archives/2022/page/3/index.html","hash":"fe0a14ed9112607bc53585ca4d8d02a89f3e1f88","modified":1690856095422},{"_id":"public/archives/2022/page/4/index.html","hash":"817d8d47a14bc0186906b64c82f234966d8b19b6","modified":1690856095422},{"_id":"public/archives/2022/page/5/index.html","hash":"f1672d48849862169273ece7e24a0a4e7d0b51d6","modified":1690856095422},{"_id":"public/archives/2022/09/index.html","hash":"80f6169983c2cd071563f16aec9ce53fdbdcfe21","modified":1690856095422},{"_id":"public/archives/2022/10/index.html","hash":"59b5c54d41e209c5d98aa3d6d6f2bf32d1ecf59d","modified":1690856095422},{"_id":"public/archives/2022/11/page/2/index.html","hash":"f4f5c7c7add81bebde115e14873dff3e3c4ca941","modified":1690856095422},{"_id":"public/archives/2023/02/index.html","hash":"c99c730230b5fe9b236c4ac5a140c924463fbe4f","modified":1690856095422},{"_id":"public/categories/生活/page/3/index.html","hash":"99da64fe2bf24a0d63409075a2c0969c0820fb80","modified":1690856095422},{"_id":"public/categories/生活/page/4/index.html","hash":"f0e5492a5ba58f7748fd5719d5e1c611fd2ca1a3","modified":1690856095422},{"_id":"public/categories/生活/page/5/index.html","hash":"abc9374ce07e93d44cd001e0dd622085fb3311af","modified":1690856095422},{"_id":"public/page/8/index.html","hash":"e15ea2ccaf93b5b208362437a3f876d3c47edad8","modified":1686737748609},{"_id":"public/page/9/index.html","hash":"87613fedd503a643e6520b04ce90b12d69a25f0d","modified":1686737748609},{"_id":"public/tags/gRPC/index.html","hash":"79447cb00e21be82ce537f70a2be1c9f87fe6bf9","modified":1690856184406},{"_id":"public/tags/周报/page/2/index.html","hash":"888758cbabf5c9c9331119b6b8db0b76860a6a28","modified":1690856095422},{"_id":"public/tags/周报/index.html","hash":"2de657fa8b88776d285f604e0095f0a3fb4a06e5","modified":1690856095422},{"_id":"public/tags/周报/page/3/index.html","hash":"b2fa1507ce150516d85a6cf8fdd19550e7bc12a5","modified":1690856095422},{"_id":"public/tags/周报/page/4/index.html","hash":"1d8b0d2775b1bb88d25dbbf95249a2149fe09873","modified":1690856095422},{"_id":"source/_posts/202301W3.md","hash":"8fb4acc158c952b6cf99d04a661e902de3737bb1","modified":1676792160141},{"_id":"source/_posts/202302W3.md","hash":"ab8eba16984ddd0097482c57aedf203879d80843","modified":1677332789043},{"_id":"source/_posts/202302W4.md","hash":"1b53bb8ffe27a4d2b446d33e2d5643c9b92c35b0","modified":1677416208338},{"_id":"source/_posts/202303W2.md","hash":"aaf0e7f53dd7ddcb46c865400ded4fb1d53ea541","modified":1678616536274},{"_id":"public/2023/03/12/202303W2/index.html","hash":"0ca6c2c6c293e91a8b6f44fc34b18e98f6a7f772","modified":1690856095422},{"_id":"public/2023/02/25/202302W4/index.html","hash":"9649951357d4f352e5d30f70fee4563bbd66a3a4","modified":1690856095422},{"_id":"public/2023/02/19/202302W3/index.html","hash":"620a5272bd52f257666cce6e39cbadb73eacb37e","modified":1690856095422},{"_id":"public/2023/01/22/202301W3/index.html","hash":"288f73858365d75dc608375b35264a7a0771020e","modified":1690856095422},{"_id":"public/archives/page/15/index.html","hash":"92133e083189f2398aed4a6dedf538f2bf4aa720","modified":1679670618388},{"_id":"public/archives/2023/page/2/index.html","hash":"55b4558ac812bdf0ccb8f4504da3db65c630a5e7","modified":1690856095422},{"_id":"public/archives/2023/03/index.html","hash":"35bbbb95d1f247c6476fe5a87445cd6fa675097d","modified":1690856095422},{"_id":"public/categories/生活/page/6/index.html","hash":"d2368d8c2144aadb866b674cfee105e72dd14e13","modified":1690856095422},{"_id":"source/_posts/202303W3.md","hash":"5327bee6d73c05e8873190a63f388878225c0743","modified":1679227269064},{"_id":"public/2023/03/18/202303W3/index.html","hash":"bf83ea259d94fb95faa38bc8fc8559557a2bec1b","modified":1690856095422},{"_id":"public/tags/周报/page/5/index.html","hash":"5b9e29f4895feeb0be7640713953acdc2b067218","modified":1690856095422},{"_id":"source/_posts/1025.md","hash":"1065e84993aafc73003f5207de20509bb636c54d","modified":1690856171530},{"_id":"source/_posts/1024.md","hash":"4015f4292943c0d46b735ce740fdd2473df0714e","modified":1676792160139},{"_id":"source/_posts/GMP.md","hash":"5e6ecab0e342955cc9f790d9f485437953f8237b","modified":1679912381247},{"_id":"source/_posts/正版软件.md","hash":"aa215e34da9d6fd1c29721a13f941eb702e183be","modified":1679226733449},{"_id":"public/2023/03/22/GMP/index.html","hash":"8870be4c1564769b1ca022968625b14a4d021584","modified":1690856095422},{"_id":"public/2022/11/20/正版软件/index.html","hash":"ffd804540631c7f0e60e62d9efdfdeaecce35a0a","modified":1690856095422},{"_id":"public/2022/01/01/1024/index.html","hash":"ce82f74334c23e1ed1022085d9efa0b67018206d","modified":1690856095422},{"_id":"public/categories/Golang/index.html","hash":"ac82c037e35988b549a22d39395a4d6fd538c7e6","modified":1690856095422},{"_id":"public/tags/goroutine/index.html","hash":"e2db156bba85de2078b7290db2cc1e585f80003c","modified":1690856095422},{"_id":"public/2023/03/24/1025/index.html","hash":"31bdfa88fa5488b36fda3f46ab7e9fafc90a4e5f","modified":1690856184406},{"_id":"public/categories/kubernetes/index.html","hash":"e41e15ef1a62f925f5ee243bd6e2fd63472b5176","modified":1690856184406},{"_id":"public/tags/源码阅读/index.html","hash":"269e1e16034ca4b3765d75e6525c40d7ad9038c0","modified":1679671009439},{"_id":"source/_posts/1027.md","hash":"f0229c17fd0516c7d6f6bb032b0f500eff23bfd0","modified":1682613966027},{"_id":"source/_posts/1029.md","hash":"bcdb3043f9f36dbb743831f591941be5201dba55","modified":1686736091349},{"_id":"source/_posts/1028.md","hash":"5cff55e457509a3b25d099d5839bfe8e6415c66c","modified":1684852263370},{"_id":"source/_posts/1026.md","hash":"cca7e789aac10adce0b1e77be98a74ce1942bacc","modified":1680766287781},{"_id":"public/2023/06/11/1029/index.html","hash":"d2746e7e5e024cd0a98ab3b70c247aa70617bb1f","modified":1690856095422},{"_id":"public/2023/05/23/1028/index.html","hash":"18eb77ca4d1efc676377155722f6bda27049cba8","modified":1690856095422},{"_id":"public/2023/04/28/1027/index.html","hash":"421559608688ce2891c631ad1dd5a465462100f9","modified":1690856095422},{"_id":"public/2023/04/02/1026/index.html","hash":"7ded1c30fd13185b88bd1292a24cac78d6c522a7","modified":1690856095422},{"_id":"public/archives/2023/page/3/index.html","hash":"3b66d60a37cd0ed753ebff79ce48011fc6b0c928","modified":1690856095422},{"_id":"public/archives/2023/04/index.html","hash":"fb2a854ee5f589ba27222b12e691bda6066e3eab","modified":1690856095422},{"_id":"public/archives/2023/05/index.html","hash":"9ca9cb5dedd7bde6c72335e7a1db0c0676d671f5","modified":1690856095422},{"_id":"public/archives/2023/06/index.html","hash":"ba291407c4cb0387e8dc690f426876bf1c35f2d4","modified":1690856095422},{"_id":"public/tags/云原生/index.html","hash":"f5ce425510e1fe7922de150540a38f0c09e2089f","modified":1690856184406},{"_id":"source/_posts/1032.md","hash":"cbdc04d765b399c42870c6dcfb545a319ec1fc59","modified":1690682060615},{"_id":"source/_posts/1030.md","hash":"ccd82ab5447c9ee31b86b09504f1accbe882dc90","modified":1687085125448},{"_id":"public/2023/07/30/1032/index.html","hash":"4586e80352ebe05c4157fa7d92b77ea35c5b25fe","modified":1690856095422},{"_id":"public/2023/06/18/1030/index.html","hash":"252a294604daf5193a0359021f19a57bd397ac24","modified":1690856095422},{"_id":"public/archives/2023/07/index.html","hash":"ab7b943c091ef77d8a1a8efbc362627ced656e20","modified":1690856095422}],"Category":[{"name":"生活","_id":"cl6p6180p0004tksc9juhb5ao"},{"name":"python","_id":"cl6p6180u000mtkscfysr3n16"},{"name":"Django","_id":"cl6p6180v000ttkscfv5c9nak"},{"name":"数据库","_id":"cl6p6180w0014tksc5s8328ix"},{"name":"docker","_id":"cl6p6180y001mtkscc7v2f2p6"},{"name":"Git/Github","_id":"cl6p61811002ctksc6993a7lb"},{"name":"其他","_id":"cl6p61812002stksca015086b"},{"name":"Linux","_id":"cl6p61813002ytksc4ir01nc0"},{"name":"Markdown","_id":"cl6p61815003ntkscf9t0ej40"},{"name":"充电","_id":"cl6p61816003xtksca1o360g7"},{"name":"阅读","_id":"cl6p618190048tkscfb8q9mai"},{"name":"算法","_id":"cl6p6181a004jtksc426mgsf2"},{"name":"树莓派","_id":"cl6p6181b004ytksc99btd20d"},{"name":"区块链","_id":"clahulh2z00012vscht1n3siu"},{"name":"Fabric","parent":"clahulh2z00012vscht1n3siu","_id":"clam1si3u0006b6sc3hsa0gda"},{"name":"低层","parent":"clam1si3u0006b6sc3hsa0gda","_id":"clam1si400008b6scbd3s4vvr"},{"name":"区块链 - [区块链, Fabric, 低层]","_id":"clam1thj50000cgscbk352pcb"},{"name":"应用","parent":"clam1si3u0006b6sc3hsa0gda","_id":"clam1tvdx0004cgscev31h44b"},{"name":"博客","_id":"clbu6cb5k00044lscfsnqagu6"},{"name":"协议","_id":"cldket1k7000295scdxbyahhx"},{"name":"Golang","_id":"clfmnsxug0005v85e3eke2prk"},{"name":"kubernetes","_id":"clfmnvhbu00012b5e4p0z1vm6"}],"Data":[{"_id":"friends","data":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}],"Page":[{"title":"404","date":"2021-07-05T15:30:11.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-07-05 23:30:11\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2022-08-11T12:49:48.119Z","path":"404/index.html","comments":1,"_id":"cl6p6180l0000tksc0tr6fx5q","content":"","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":""},{"_content":"### 什么样的存在\n极简主义，中二晚期.\n\n| Key      | Value |\n| ----------- | ----------- |\n| 所在      | 深圳       |\n|如何联系| email: Nzc1NjUwMTE3QHFxLmNvbQo=|\n|媒体平台|[twitter](https://twitter.com/Ginta80759168)、[Instagram](https://www.instagram.com/ginta_xx/)|\n| 户外   | 爬山，滑雪        |\n| 乐器   | 一把偶尔响一下的吉他       |\n| 常用语言      | Go,Python,Solidity       |\n| 平时喜欢看      | 宇宙记录片，旅游Vlog，红警HBK08       |\n\n\n### 一些清单\n- [阅读清单](https://atlantic-gull-726.notion.site/658a3e55b3bd4ca3b212beb7438a5c5e)\n- [跑步清单](https://running.ginta.top/)\n- [音乐清单](https://music.163.com/playlist?id=7502042039&userid=1419114645)\n- [观影清单](https://atlantic-gull-726.notion.site/e9cd9af522c64c54848bb6a5f0c1a91a)\n\n### 乱七八糟\n平时用的工具什么的会 {% post_link 个人工具 记录在这里  %}\n\n\n\n### F\n{% blockquote Ricardo M. Lu, 《龙族》 %}\n我是一个偶尔会发疯的人呐。\n{% endblockquote %}\n\n\n","source":"about/index.md","raw":"### 什么样的存在\n极简主义，中二晚期.\n\n| Key      | Value |\n| ----------- | ----------- |\n| 所在      | 深圳       |\n|如何联系| email: Nzc1NjUwMTE3QHFxLmNvbQo=|\n|媒体平台|[twitter](https://twitter.com/Ginta80759168)、[Instagram](https://www.instagram.com/ginta_xx/)|\n| 户外   | 爬山，滑雪        |\n| 乐器   | 一把偶尔响一下的吉他       |\n| 常用语言      | Go,Python,Solidity       |\n| 平时喜欢看      | 宇宙记录片，旅游Vlog，红警HBK08       |\n\n\n### 一些清单\n- [阅读清单](https://atlantic-gull-726.notion.site/658a3e55b3bd4ca3b212beb7438a5c5e)\n- [跑步清单](https://running.ginta.top/)\n- [音乐清单](https://music.163.com/playlist?id=7502042039&userid=1419114645)\n- [观影清单](https://atlantic-gull-726.notion.site/e9cd9af522c64c54848bb6a5f0c1a91a)\n\n### 乱七八糟\n平时用的工具什么的会 {% post_link 个人工具 记录在这里  %}\n\n\n\n### F\n{% blockquote Ricardo M. Lu, 《龙族》 %}\n我是一个偶尔会发疯的人呐。\n{% endblockquote %}\n\n\n","date":"2023-02-01T08:32:52.622Z","updated":"2023-02-01T08:32:52.622Z","path":"about/index.html","_id":"cl6p6180o0002tkscbb39cknv","title":"","comments":1,"layout":"page","content":"<h3 id=\"什么样的存在\"><a href=\"#什么样的存在\" class=\"headerlink\" title=\"什么样的存在\"></a>什么样的存在</h3><p>极简主义，中二晚期.</p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所在</td>\n<td>深圳</td>\n</tr>\n<tr>\n<td>如何联系</td>\n<td>email: Nzc1NjUwMTE3QHFxLmNvbQo&#x3D;</td>\n</tr>\n<tr>\n<td>媒体平台</td>\n<td><a href=\"https://twitter.com/Ginta80759168\">twitter</a>、<a href=\"https://www.instagram.com/ginta_xx/\">Instagram</a></td>\n</tr>\n<tr>\n<td>户外</td>\n<td>爬山，滑雪</td>\n</tr>\n<tr>\n<td>乐器</td>\n<td>一把偶尔响一下的吉他</td>\n</tr>\n<tr>\n<td>常用语言</td>\n<td>Go,Python,Solidity</td>\n</tr>\n<tr>\n<td>平时喜欢看</td>\n<td>宇宙记录片，旅游Vlog，红警HBK08</td>\n</tr>\n</tbody></table>\n<h3 id=\"一些清单\"><a href=\"#一些清单\" class=\"headerlink\" title=\"一些清单\"></a>一些清单</h3><ul>\n<li><a href=\"https://atlantic-gull-726.notion.site/658a3e55b3bd4ca3b212beb7438a5c5e\">阅读清单</a></li>\n<li><a href=\"https://running.ginta.top/\">跑步清单</a></li>\n<li><a href=\"https://music.163.com/playlist?id=7502042039&userid=1419114645\">音乐清单</a></li>\n<li><a href=\"https://atlantic-gull-726.notion.site/e9cd9af522c64c54848bb6a5f0c1a91a\">观影清单</a></li>\n</ul>\n<h3 id=\"乱七八糟\"><a href=\"#乱七八糟\" class=\"headerlink\" title=\"乱七八糟\"></a>乱七八糟</h3><p>平时用的工具什么的会 <a href=\"/2022/11/23/%E4%B8%AA%E4%BA%BA%E5%B7%A5%E5%85%B7/\" title=\"记录在这里\">记录在这里</a></p>\n<h3 id=\"F\"><a href=\"#F\" class=\"headerlink\" title=\"F\"></a>F</h3><blockquote><p>我是一个偶尔会发疯的人呐。</p>\n<footer><strong>Ricardo M. Lu</strong><cite>《龙族》</cite></footer></blockquote>\n\n\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"什么样的存在\"><a href=\"#什么样的存在\" class=\"headerlink\" title=\"什么样的存在\"></a>什么样的存在</h3><p>极简主义，中二晚期.</p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所在</td>\n<td>深圳</td>\n</tr>\n<tr>\n<td>如何联系</td>\n<td>email: Nzc1NjUwMTE3QHFxLmNvbQo&#x3D;</td>\n</tr>\n<tr>\n<td>媒体平台</td>\n<td><a href=\"https://twitter.com/Ginta80759168\">twitter</a>、<a href=\"https://www.instagram.com/ginta_xx/\">Instagram</a></td>\n</tr>\n<tr>\n<td>户外</td>\n<td>爬山，滑雪</td>\n</tr>\n<tr>\n<td>乐器</td>\n<td>一把偶尔响一下的吉他</td>\n</tr>\n<tr>\n<td>常用语言</td>\n<td>Go,Python,Solidity</td>\n</tr>\n<tr>\n<td>平时喜欢看</td>\n<td>宇宙记录片，旅游Vlog，红警HBK08</td>\n</tr>\n</tbody></table>\n<h3 id=\"一些清单\"><a href=\"#一些清单\" class=\"headerlink\" title=\"一些清单\"></a>一些清单</h3><ul>\n<li><a href=\"https://atlantic-gull-726.notion.site/658a3e55b3bd4ca3b212beb7438a5c5e\">阅读清单</a></li>\n<li><a href=\"https://running.ginta.top/\">跑步清单</a></li>\n<li><a href=\"https://music.163.com/playlist?id=7502042039&userid=1419114645\">音乐清单</a></li>\n<li><a href=\"https://atlantic-gull-726.notion.site/e9cd9af522c64c54848bb6a5f0c1a91a\">观影清单</a></li>\n</ul>\n<h3 id=\"乱七八糟\"><a href=\"#乱七八糟\" class=\"headerlink\" title=\"乱七八糟\"></a>乱七八糟</h3><p>平时用的工具什么的会 <a href=\"/2022/11/23/%E4%B8%AA%E4%BA%BA%E5%B7%A5%E5%85%B7/\" title=\"记录在这里\">记录在这里</a></p>\n<h3 id=\"F\"><a href=\"#F\" class=\"headerlink\" title=\"F\"></a>F</h3><blockquote><p>我是一个偶尔会发疯的人呐。</p>\n<footer><strong>Ricardo M. Lu</strong><cite>《龙族》</cite></footer></blockquote>\n\n\n"},{"title":"202208W1","date":"2022-08-08T15:20:47.000Z","author":"Ginta","cover":"https://img.ginta.top/post%2Fchuandi.jpg","tags":["周报"],"categories":"生活","_content":"\n### 生活\n\n乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。\n\n### 技术\n重读了一下[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。\n\n### 读书\n\n本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。","source":"weekly/2022/202208W1.md","raw":"---\ntitle: 202208W1\ndate: 2022-08-08 23:20:47\nauthor: Ginta\ncover: https://img.ginta.top/post%2Fchuandi.jpg\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n\n乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。\n\n### 技术\n重读了一下[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。\n\n### 读书\n\n本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。","updated":"2022-08-14T13:24:09.969Z","path":"weekly/2022/202208W1.html","_id":"clcsl4dne0000rjsce1er9pep","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>重读了一下<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>重读了一下<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。</p>\n"},{"title":"202208W2","author":"Ginta","date":"2022-08-14T12:32:08.000Z","tags":["周报"],"categories":"生活","_content":"\n### 生活\n如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~\n\n### 技术\n速刷了 *Solidity* 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。\n博客主题换成了[icarus](https://github.com/ppoffice/hexo-theme-icarus)，原因在[7月第三周周报](/weekly/202207W3.html)有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。\n### 读书\n- 《读者》\n- 《重构》\n虽然量不大，毕竟相比上周好多了。\n\n### 还有\n本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。\n{% twitter https://twitter.com/renbaoshuo/status/1558461539677765632 %}","source":"weekly/2022/202208W2.md","raw":"---\ntitle: 202208W2\nauthor: Ginta\ndate: 2022-08-14 20:32:08\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~\n\n### 技术\n速刷了 *Solidity* 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。\n博客主题换成了[icarus](https://github.com/ppoffice/hexo-theme-icarus)，原因在[7月第三周周报](/weekly/202207W3.html)有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。\n### 读书\n- 《读者》\n- 《重构》\n虽然量不大，毕竟相比上周好多了。\n\n### 还有\n本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。\n{% twitter https://twitter.com/renbaoshuo/status/1558461539677765632 %}","updated":"2022-08-14T13:27:31.401Z","path":"weekly/2022/202208W2.html","_id":"clcsl4dng0001rjsc75zo892x","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>速刷了 <em>Solidity</em> 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。<br>博客主题换成了<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>，原因在<a href=\"/weekly/202207W3.html\">7月第三周周报</a>有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《读者》</li>\n<li>《重构》<br>虽然量不大，毕竟相比上周好多了。</li>\n</ul>\n<h3 id=\"还有\"><a href=\"#还有\" class=\"headerlink\" title=\"还有\"></a>还有</h3><p>本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。</p>\n<div class=\"twitter-wrapper\"><blockquote class=\"twitter-tweet\"><a href=\"https://twitter.com/renbaoshuo/status/1558461539677765632\"></a></blockquote></div><script async defer src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>速刷了 <em>Solidity</em> 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。<br>博客主题换成了<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>，原因在<a href=\"/weekly/202207W3.html\">7月第三周周报</a>有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《读者》</li>\n<li>《重构》<br>虽然量不大，毕竟相比上周好多了。</li>\n</ul>\n<h3 id=\"还有\"><a href=\"#还有\" class=\"headerlink\" title=\"还有\"></a>还有</h3><p>本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。</p>\n<div class=\"twitter-wrapper\"><blockquote class=\"twitter-tweet\"><a href=\"https://twitter.com/renbaoshuo/status/1558461539677765632\"></a></blockquote></div><script async defer src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>"},{"title":"202208W3","author":"Ginta","date":"2022-08-22T16:10:46.000Z","tags":["周报"],"categories":"生活","_content":"\n## 生活\n周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。\n吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。\n\n## 技术\n这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。\n\n## 读书\n东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。","source":"weekly/2022/202208W3.md","raw":"---\ntitle: 202208W3\nauthor: Ginta\ndate: 2022-08-23 00:10:46\ntags:\n    - 周报\ncategories: 生活\n---\n\n## 生活\n周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。\n吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。\n\n## 技术\n这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。\n\n## 读书\n东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。","updated":"2022-08-22T16:36:24.487Z","path":"weekly/2022/202208W3.html","_id":"clcsl4doz0002rjsc0kkw6x8i","comments":1,"layout":"page","content":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。<br>吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。<br>吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。</p>\n"},{"title":"202209W1","author":"Ginta","date":"2022-09-05T13:43:50.000Z","tags":["周报"],"categories":"生活","_content":"### 生活\n本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1/4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。\n### 技术\n学习了超级账本 **hyperledger**的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 **fabric**，感觉找到了新玩具！\n\n### 读书\n《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。","source":"weekly/2022/202209W1.md","raw":"---\ntitle: 202209W1\nauthor: Ginta\ndate: 2022-09-05 21:43:50\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1/4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。\n### 技术\n学习了超级账本 **hyperledger**的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 **fabric**，感觉找到了新玩具！\n\n### 读书\n《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。","updated":"2022-09-06T07:53:01.006Z","path":"weekly/2022/202209W1.html","_id":"clcsl4dq30003rjscgjdf1yg7","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1&#x2F;4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了超级账本 <strong>hyperledger</strong>的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 <strong>fabric</strong>，感觉找到了新玩具！</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1&#x2F;4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了超级账本 <strong>hyperledger</strong>的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 <strong>fabric</strong>，感觉找到了新玩具！</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。</p>\n"},{"title":"202209W2","author":"Ginta","date":"2022-09-13T01:27:32.000Z","tags":["周报"],"categories":"生活","_content":"### 生活\n中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。![跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png)好久没看 *doinb* 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。\n\n### 技术\n内网起了一个 *go-ethereum的* 本地环境，尝试用 *go-ethereum* 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 *solidity* 无脑写合约来得更清楚。\n\n### 读书\n《大秦帝国三上》100%\n战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。\n\n","source":"weekly/2022/202209W2.md","raw":"---\ntitle: 202209W2\nauthor: Ginta\ndate: 2022-09-13 09:27:32\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。![跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png)好久没看 *doinb* 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。\n\n### 技术\n内网起了一个 *go-ethereum的* 本地环境，尝试用 *go-ethereum* 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 *solidity* 无脑写合约来得更清楚。\n\n### 读书\n《大秦帝国三上》100%\n战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。\n\n","updated":"2022-09-13T01:57:35.749Z","path":"weekly/2022/202209W2.html","_id":"clcsl4dq30004rjsc6o9q2wi9","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。<img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png\" alt=\"跑步记录\">好久没看 <em>doinb</em> 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>内网起了一个 <em>go-ethereum的</em> 本地环境，尝试用 <em>go-ethereum</em> 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 <em>solidity</em> 无脑写合约来得更清楚。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三上》100%<br>战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。<img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png\" alt=\"跑步记录\">好久没看 <em>doinb</em> 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>内网起了一个 <em>go-ethereum的</em> 本地环境，尝试用 <em>go-ethereum</em> 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 <em>solidity</em> 无脑写合约来得更清楚。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三上》100%<br>战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。</p>\n"},{"title":"202208W4","author":"Ginta","date":"2022-08-28T16:15:14.000Z","tags":["周报"],"categories":"生活","_content":"\n### 生活\n周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 *react* ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。\n\n### 技术\n这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，希望重构后可以做到任何一位新人都可以快速上手。\n\n### 读书\n- 《时生》100%\n- 《人间失格》100%\n积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。","source":"weekly/2022/202208W4.md","raw":"---\ntitle: 202208W4\nauthor: Ginta\ndate: 2022-08-29 00:15:14\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 *react* ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。\n\n### 技术\n这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，希望重构后可以做到任何一位新人都可以快速上手。\n\n### 读书\n- 《时生》100%\n- 《人间失格》100%\n积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。","updated":"2022-08-28T17:05:32.359Z","path":"weekly/2022/202208W4.html","_id":"clcsl4dq50005rjsc0pq18cet","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 <em>react</em> ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，希望重构后可以做到任何一位新人都可以快速上手。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《时生》100%</li>\n<li>《人间失格》100%<br>积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 <em>react</em> ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，希望重构后可以做到任何一位新人都可以快速上手。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《时生》100%</li>\n<li>《人间失格》100%<br>积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。</li>\n</ul>\n"},{"title":"202210W1","date":"2022-10-05T12:17:25.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"### 生活\n回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。\n\n### 技术\n国庆优先，其他滞后～\n\n### 读书\n《大秦帝国三下》 100%\n看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。","source":"weekly/2022/202210W1.md","raw":"---\ntitle: 202210W1\ndate: 2022-10-05 20:17:25\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。\n\n### 技术\n国庆优先，其他滞后～\n\n### 读书\n《大秦帝国三下》 100%\n看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。","updated":"2022-10-11T14:13:01.039Z","path":"weekly/2022/202210W1.html","_id":"clcsl4dsv0006rjsch51m9ur8","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>国庆优先，其他滞后～</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三下》 100%<br>看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>国庆优先，其他滞后～</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三下》 100%<br>看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。</p>\n"},{"title":"202209W4","author":"Ginta","date":"2022-09-27T14:44:31.000Z","tags":["周报"],"categories":"生活","_content":"### 生活\n换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。\n抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：\n>>>有些人二十岁就死了，等到八十岁才被埋葬\n\n诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。\n\n### 技术\n**Github** 看到一个 **issue** 被link到了自己提的一个 *[PR](https://github.com/foamzou/media-get/pull/8)*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。\n![20220927233055](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png)\n作者希望这个 *PR* 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。\n\n### 读书\n原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。","source":"weekly/2022/202209W4.md","raw":"---\ntitle: 202209W4\nauthor: Ginta\ndate: 2022-09-27 22:44:31\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。\n抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：\n>>>有些人二十岁就死了，等到八十岁才被埋葬\n\n诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。\n\n### 技术\n**Github** 看到一个 **issue** 被link到了自己提的一个 *[PR](https://github.com/foamzou/media-get/pull/8)*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。\n![20220927233055](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png)\n作者希望这个 *PR* 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。\n\n### 读书\n原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。","updated":"2022-09-27T15:40:00.937Z","path":"weekly/2022/202209W4.html","_id":"clcsl4dsw0007rjscakyqameb","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。<br>抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>有些人二十岁就死了，等到八十岁才被埋葬</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Github</strong> 看到一个 <strong>issue</strong> 被link到了自己提的一个 *<a href=\"https://github.com/foamzou/media-get/pull/8\">PR</a>*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png\" alt=\"20220927233055\"><br>作者希望这个 <em>PR</em> 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。<br>抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>有些人二十岁就死了，等到八十岁才被埋葬</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Github</strong> 看到一个 <strong>issue</strong> 被link到了自己提的一个 *<a href=\"https://github.com/foamzou/media-get/pull/8\">PR</a>*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png\" alt=\"20220927233055\"><br>作者希望这个 <em>PR</em> 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。</p>\n"},{"title":"202209W3","author":"Ginta","date":"2022-09-19T15:35:50.000Z","tags":["周报"],"categories":"生活","_content":"### 生活\n周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。\n\n### 技术\n在家里的电脑搭了一个 *istio*，实操一下，公司的 *istio* 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。\n\n### 读书\n《被拒绝的勇气》 100%\n书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。","source":"weekly/2022/202209W3.md","raw":"---\ntitle: 202209W3\nauthor: Ginta\ndate: 2022-09-19 23:35:50\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。\n\n### 技术\n在家里的电脑搭了一个 *istio*，实操一下，公司的 *istio* 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。\n\n### 读书\n《被拒绝的勇气》 100%\n书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。","updated":"2022-09-19T15:57:04.962Z","path":"weekly/2022/202209W3.html","_id":"clcsl4dsw0008rjschwqn4gf1","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>在家里的电脑搭了一个 <em>istio</em>，实操一下，公司的 <em>istio</em> 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《被拒绝的勇气》 100%<br>书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>在家里的电脑搭了一个 <em>istio</em>，实操一下，公司的 <em>istio</em> 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《被拒绝的勇气》 100%<br>书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。</p>\n"},{"title":"202210W4","date":"2022-10-31T04:43:29.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"\n### 生活\n上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步.......主持当天麦克风声音还很小。\n\n### 技术\n因为在准备开源年会，所以基本什么都没做\n\n### 读书\n《大秦帝国四上》 100%\n终于读完了\n\n### 其他\n之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。","source":"weekly/2022/202210W4.md","raw":"---\ntitle: 202210W4\ndate: 2022-10-31 12:43:29\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步.......主持当天麦克风声音还很小。\n\n### 技术\n因为在准备开源年会，所以基本什么都没做\n\n### 读书\n《大秦帝国四上》 100%\n终于读完了\n\n### 其他\n之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。","updated":"2022-10-31T04:59:22.155Z","path":"weekly/2022/202210W4.html","_id":"clcsl4dvg0009rjscdstp17df","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步…….主持当天麦克风声音还很小。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>因为在准备开源年会，所以基本什么都没做</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 100%<br>终于读完了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步…….主持当天麦克风声音还很小。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>因为在准备开源年会，所以基本什么都没做</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 100%<br>终于读完了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。</p>\n"},{"title":"202211W1","date":"2022-11-07T04:51:48.000Z","tags":["周报"],"categories":"生活","_content":"### 生活\n计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。\n\n### 技术\n学习了一下go的template用法。\n了解了一下 *consensys* 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。\n\n### 其他\n国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。\n","source":"weekly/2022/202211W1.md","raw":"---\ntitle: 202211W1\ndate: 2022-11-07 12:51:48\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。\n\n### 技术\n学习了一下go的template用法。\n了解了一下 *consensys* 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。\n\n### 其他\n国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。\n","updated":"2022-11-07T16:12:36.427Z","path":"weekly/2022/202211W1.html","_id":"clcsl4dvg000arjsc78xcg7de","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了一下go的template用法。<br>了解了一下 <em>consensys</em> 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了一下go的template用法。<br>了解了一下 <em>consensys</em> 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。</p>\n"},{"title":"202210W2","date":"2022-10-11T14:12:38.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"### 国庆结束\n说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。\n\n### 技术\n看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去\n\n### 读书\n《大秦帝国四上》 40%\n吕不韦终于登场了，有一段对话挺精彩的\n>>>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”\n“劳作立身，其利十倍。”\n“珠玉之利几何？”吕不韦问。\n“珠玉无价，其利百倍。”\n“若得谋国，其利几何？”\n“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”\n吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”\n“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”\n\n吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。\n","source":"weekly/2022/202210W2.md","raw":"---\ntitle: 202210W2\ndate: 2022-10-11 22:12:38\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 国庆结束\n说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。\n\n### 技术\n看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去\n\n### 读书\n《大秦帝国四上》 40%\n吕不韦终于登场了，有一段对话挺精彩的\n>>>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”\n“劳作立身，其利十倍。”\n“珠玉之利几何？”吕不韦问。\n“珠玉无价，其利百倍。”\n“若得谋国，其利几何？”\n“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”\n吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”\n“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”\n\n吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。\n","updated":"2022-10-11T14:47:09.652Z","path":"weekly/2022/202210W2.html","_id":"clcsl4dvh000brjsch38r37o5","comments":1,"layout":"page","content":"<h3 id=\"国庆结束\"><a href=\"#国庆结束\" class=\"headerlink\" title=\"国庆结束\"></a>国庆结束</h3><p>说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 40%<br>吕不韦终于登场了，有一段对话挺精彩的</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”<br>“劳作立身，其利十倍。”<br>“珠玉之利几何？”吕不韦问。<br>“珠玉无价，其利百倍。”<br>“若得谋国，其利几何？”<br>“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”<br>吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”<br>“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"国庆结束\"><a href=\"#国庆结束\" class=\"headerlink\" title=\"国庆结束\"></a>国庆结束</h3><p>说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 40%<br>吕不韦终于登场了，有一段对话挺精彩的</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”<br>“劳作立身，其利十倍。”<br>“珠玉之利几何？”吕不韦问。<br>“珠玉无价，其利百倍。”<br>“若得谋国，其利几何？”<br>“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”<br>吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”<br>“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。</p>\n"},{"title":"202211W4","date":"2022-11-29T14:12:25.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。\n\n### 听了一周播客\n从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言......听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。\n\n### Github新发现\n之前一直没注意到 **Github** 的 **Explore** 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 *Hyperledger* 组织的仓库，挺实用的功能。\n\n### 其他有趣的发现\n[xlog](https://github.com/Crossbell-Box/xlog)是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：\n1. You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.\n2. Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.\n\n行尸走肉完结了\n很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。\n\nTed英语演讲\n免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。\n\nHyperledger视频\n他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。\n\n鬼泣背后的剧情\n在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。\n说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。\n","source":"weekly/2022/202211W4.md","raw":"---\ntitle: 202211W4\ndate: 2022-11-29 22:12:25\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。\n\n### 听了一周播客\n从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言......听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。\n\n### Github新发现\n之前一直没注意到 **Github** 的 **Explore** 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 *Hyperledger* 组织的仓库，挺实用的功能。\n\n### 其他有趣的发现\n[xlog](https://github.com/Crossbell-Box/xlog)是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：\n1. You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.\n2. Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.\n\n行尸走肉完结了\n很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。\n\nTed英语演讲\n免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。\n\nHyperledger视频\n他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。\n\n鬼泣背后的剧情\n在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。\n说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。\n","updated":"2022-11-29T15:46:14.911Z","path":"weekly/2022/202211W4.html","_id":"clcsl4dy7000crjsc1tayaopw","comments":1,"layout":"page","content":"<p>周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。</p>\n<h3 id=\"听了一周播客\"><a href=\"#听了一周播客\" class=\"headerlink\" title=\"听了一周播客\"></a>听了一周播客</h3><p>从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言……听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。</p>\n<h3 id=\"Github新发现\"><a href=\"#Github新发现\" class=\"headerlink\" title=\"Github新发现\"></a>Github新发现</h3><p>之前一直没注意到 <strong>Github</strong> 的 <strong>Explore</strong> 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 <em>Hyperledger</em> 组织的仓库，挺实用的功能。</p>\n<h3 id=\"其他有趣的发现\"><a href=\"#其他有趣的发现\" class=\"headerlink\" title=\"其他有趣的发现\"></a>其他有趣的发现</h3><p><a href=\"https://github.com/Crossbell-Box/xlog\">xlog</a>是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：</p>\n<ol>\n<li>You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.</li>\n<li>Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.</li>\n</ol>\n<p>行尸走肉完结了<br>很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。</p>\n<p>Ted英语演讲<br>免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。</p>\n<p>Hyperledger视频<br>他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。</p>\n<p>鬼泣背后的剧情<br>在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。<br>说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。</p>\n<h3 id=\"听了一周播客\"><a href=\"#听了一周播客\" class=\"headerlink\" title=\"听了一周播客\"></a>听了一周播客</h3><p>从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言……听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。</p>\n<h3 id=\"Github新发现\"><a href=\"#Github新发现\" class=\"headerlink\" title=\"Github新发现\"></a>Github新发现</h3><p>之前一直没注意到 <strong>Github</strong> 的 <strong>Explore</strong> 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 <em>Hyperledger</em> 组织的仓库，挺实用的功能。</p>\n<h3 id=\"其他有趣的发现\"><a href=\"#其他有趣的发现\" class=\"headerlink\" title=\"其他有趣的发现\"></a>其他有趣的发现</h3><p><a href=\"https://github.com/Crossbell-Box/xlog\">xlog</a>是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：</p>\n<ol>\n<li>You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.</li>\n<li>Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.</li>\n</ol>\n<p>行尸走肉完结了<br>很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。</p>\n<p>Ted英语演讲<br>免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。</p>\n<p>Hyperledger视频<br>他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。</p>\n<p>鬼泣背后的剧情<br>在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。<br>说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。</p>\n"},{"title":"202211W3","date":"2022-11-20T13:20:31.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"### 下次不点辣了\n周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。\n”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑\n鸳鸯锅的，至少中辣起步，也算是入乡随俗了。\n\n### 新人？老人？\n>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！\n\n以往每年都会参加 *pycon china* 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。\n\n### 技术\n**Fabric** 测试网络调试了链码，对 **Fabric** 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 **Fabric** 的源码，有空会开发一个应用。\n\n### 读书\n《区块链原理、设计与应用》20%\n","source":"weekly/2022/202211W3.md","raw":"---\ntitle: 202211W3\ndate: 2022-11-20 21:20:31\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 下次不点辣了\n周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。\n”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑\n鸳鸯锅的，至少中辣起步，也算是入乡随俗了。\n\n### 新人？老人？\n>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！\n\n以往每年都会参加 *pycon china* 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。\n\n### 技术\n**Fabric** 测试网络调试了链码，对 **Fabric** 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 **Fabric** 的源码，有空会开发一个应用。\n\n### 读书\n《区块链原理、设计与应用》20%\n","updated":"2022-11-20T14:15:46.420Z","path":"weekly/2022/202211W3.html","_id":"clcsl4dy7000drjsc95rx7ddt","comments":1,"layout":"page","content":"<h3 id=\"下次不点辣了\"><a href=\"#下次不点辣了\" class=\"headerlink\" title=\"下次不点辣了\"></a>下次不点辣了</h3><p>周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。<br>”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑<br>鸳鸯锅的，至少中辣起步，也算是入乡随俗了。</p>\n<h3 id=\"新人？老人？\"><a href=\"#新人？老人？\" class=\"headerlink\" title=\"新人？老人？\"></a>新人？老人？</h3><blockquote>\n<p>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！</p>\n</blockquote>\n<p>以往每年都会参加 <em>pycon china</em> 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Fabric</strong> 测试网络调试了链码，对 <strong>Fabric</strong> 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 <strong>Fabric</strong> 的源码，有空会开发一个应用。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》20%</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"下次不点辣了\"><a href=\"#下次不点辣了\" class=\"headerlink\" title=\"下次不点辣了\"></a>下次不点辣了</h3><p>周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。<br>”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑<br>鸳鸯锅的，至少中辣起步，也算是入乡随俗了。</p>\n<h3 id=\"新人？老人？\"><a href=\"#新人？老人？\" class=\"headerlink\" title=\"新人？老人？\"></a>新人？老人？</h3><blockquote>\n<p>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！</p>\n</blockquote>\n<p>以往每年都会参加 <em>pycon china</em> 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Fabric</strong> 测试网络调试了链码，对 <strong>Fabric</strong> 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 <strong>Fabric</strong> 的源码，有空会开发一个应用。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》20%</p>\n"},{"title":"202211W2","date":"2022-11-14T17:23:08.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"\n整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 *python* 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。\n\n### 逝去的生命\n网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。\n\n### 放慢节奏\n周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。\n\n### 技术\n正在重拾 *Hyperledger Fabric*，一个月前在 *wsl* 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢[pseudoyu](https://www.pseudoyu.com/zh/) 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。\n\n### 读书\n《区块链原理、设计与应用》10%\n接下来一段时间小说先停下来，小说今年的输入已经远超往年了\n\n### 其他\n忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 *Github* 当初注册的 *id* 都是 **Mar-heaven**。","source":"weekly/2022/202211W2.md","raw":"---\ntitle: 202211W2\ndate: 2022-11-15 01:23:08\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n\n整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 *python* 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。\n\n### 逝去的生命\n网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。\n\n### 放慢节奏\n周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。\n\n### 技术\n正在重拾 *Hyperledger Fabric*，一个月前在 *wsl* 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢[pseudoyu](https://www.pseudoyu.com/zh/) 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。\n\n### 读书\n《区块链原理、设计与应用》10%\n接下来一段时间小说先停下来，小说今年的输入已经远超往年了\n\n### 其他\n忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 *Github* 当初注册的 *id* 都是 **Mar-heaven**。","updated":"2022-11-15T02:06:42.425Z","path":"weekly/2022/202211W2.html","_id":"clcsl4dy7000erjscbnqsap8v","comments":1,"layout":"page","content":"<p>整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 <em>python</em> 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。</p>\n<h3 id=\"逝去的生命\"><a href=\"#逝去的生命\" class=\"headerlink\" title=\"逝去的生命\"></a>逝去的生命</h3><p>网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。</p>\n<h3 id=\"放慢节奏\"><a href=\"#放慢节奏\" class=\"headerlink\" title=\"放慢节奏\"></a>放慢节奏</h3><p>周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>正在重拾 <em>Hyperledger Fabric</em>，一个月前在 <em>wsl</em> 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢<a href=\"https://www.pseudoyu.com/zh/\">pseudoyu</a> 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》10%<br>接下来一段时间小说先停下来，小说今年的输入已经远超往年了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 <em>Github</em> 当初注册的 <em>id</em> 都是 <strong>Mar-heaven</strong>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 <em>python</em> 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。</p>\n<h3 id=\"逝去的生命\"><a href=\"#逝去的生命\" class=\"headerlink\" title=\"逝去的生命\"></a>逝去的生命</h3><p>网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。</p>\n<h3 id=\"放慢节奏\"><a href=\"#放慢节奏\" class=\"headerlink\" title=\"放慢节奏\"></a>放慢节奏</h3><p>周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>正在重拾 <em>Hyperledger Fabric</em>，一个月前在 <em>wsl</em> 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢<a href=\"https://www.pseudoyu.com/zh/\">pseudoyu</a> 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》10%<br>接下来一段时间小说先停下来，小说今年的输入已经远超往年了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 <em>Github</em> 当初注册的 <em>id</em> 都是 <strong>Mar-heaven</strong>。</p>\n"},{"title":"202212W1","date":"2022-12-07T15:28:17.000Z","author":"Ginta","tags":["周报"],"categories":"生活","_content":"这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。\n\n\n### 深度参与社区\n其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。\n\n后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。\n\n再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。\n\n以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。\n\n翻出2021年总结的时候有这么一段：\n![2021](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png)\n后续会更深度参与社区，期待有新的发现。\n\n### ChatGPT\n微博的热搜前十我不知道是什么，但 **ChatGPT** 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知\n![20221208001613](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png)\n![20221208002550](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png)\n个人体验是非常满意的，自己的代码可以交给它 *review*，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。\n或许以前没有注意过 **AI** 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 **ChatGPT** 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。\n\n### 运动\n连续跑步十天了，打破历史记录\n![20221208004251](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png)\n中间断了一个月，12月坚持下来200公里应该问题不大。\n\n### 读书\n二刷《重构》\n","source":"weekly/2022/202212W1.md","raw":"---\ntitle: 202212W1\ndate: 2022-12-07 23:28:17\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。\n\n\n### 深度参与社区\n其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。\n\n后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。\n\n再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。\n\n以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。\n\n翻出2021年总结的时候有这么一段：\n![2021](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png)\n后续会更深度参与社区，期待有新的发现。\n\n### ChatGPT\n微博的热搜前十我不知道是什么，但 **ChatGPT** 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知\n![20221208001613](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png)\n![20221208002550](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png)\n个人体验是非常满意的，自己的代码可以交给它 *review*，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。\n或许以前没有注意过 **AI** 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 **ChatGPT** 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。\n\n### 运动\n连续跑步十天了，打破历史记录\n![20221208004251](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png)\n中间断了一个月，12月坚持下来200公里应该问题不大。\n\n### 读书\n二刷《重构》\n","updated":"2022-12-19T02:33:32.518Z","path":"weekly/2022/202212W1.html","_id":"clcsl4e0u000frjsc9o094k6j","comments":1,"layout":"page","content":"<p>这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。</p>\n<h3 id=\"深度参与社区\"><a href=\"#深度参与社区\" class=\"headerlink\" title=\"深度参与社区\"></a>深度参与社区</h3><p>其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。</p>\n<p>后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。</p>\n<p>再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。</p>\n<p>以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。</p>\n<p>翻出2021年总结的时候有这么一段：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png\" alt=\"2021\"><br>后续会更深度参与社区，期待有新的发现。</p>\n<h3 id=\"ChatGPT\"><a href=\"#ChatGPT\" class=\"headerlink\" title=\"ChatGPT\"></a>ChatGPT</h3><p>微博的热搜前十我不知道是什么，但 <strong>ChatGPT</strong> 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png\" alt=\"20221208001613\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png\" alt=\"20221208002550\"><br>个人体验是非常满意的，自己的代码可以交给它 <em>review</em>，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。<br>或许以前没有注意过 <strong>AI</strong> 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 <strong>ChatGPT</strong> 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。</p>\n<h3 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h3><p>连续跑步十天了，打破历史记录<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png\" alt=\"20221208004251\"><br>中间断了一个月，12月坚持下来200公里应该问题不大。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>二刷《重构》</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。</p>\n<h3 id=\"深度参与社区\"><a href=\"#深度参与社区\" class=\"headerlink\" title=\"深度参与社区\"></a>深度参与社区</h3><p>其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。</p>\n<p>后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。</p>\n<p>再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。</p>\n<p>以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。</p>\n<p>翻出2021年总结的时候有这么一段：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png\" alt=\"2021\"><br>后续会更深度参与社区，期待有新的发现。</p>\n<h3 id=\"ChatGPT\"><a href=\"#ChatGPT\" class=\"headerlink\" title=\"ChatGPT\"></a>ChatGPT</h3><p>微博的热搜前十我不知道是什么，但 <strong>ChatGPT</strong> 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png\" alt=\"20221208001613\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png\" alt=\"20221208002550\"><br>个人体验是非常满意的，自己的代码可以交给它 <em>review</em>，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。<br>或许以前没有注意过 <strong>AI</strong> 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 <strong>ChatGPT</strong> 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。</p>\n<h3 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h3><p>连续跑步十天了，打破历史记录<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png\" alt=\"20221208004251\"><br>中间断了一个月，12月坚持下来200公里应该问题不大。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>二刷《重构》</p>\n"},{"_content":"2022's Weekly report\n[202212-W4 颓废的两周](/weekly/2022/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/2022/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/2022/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/2022/202211W3.html)\n[202211-W2 逝去的生命](/weekly/2022/202211W2.html)\n[202211-W1](/weekly/2022/2022/202211W1.html)\n[202210-W4](/weekly/2022/202210W4.html)\n[202210-W2](/weekly/2022/202210W2.html)\n[202210-W1](/weekly/2022/202210W1.html)\n[202209-W4](/weekly/2022/202209W4.html)\n[202209-W3](/weekly/2022/202209W3.html)\n[202209-W2](/weekly/2022/202209W2.html)\n[202209-W1](/weekly/2022/202209W1.html)\n[202208-W4](/weekly/2022/202208W4.html)\n[202208-W3](/weekly/2022/202208W3.html)\n[202208-W2](/weekly/2022/202208W2.html)\n[202208-W1](/weekly/2022/202208W1.html)\n[202207-W3](/weekly/2022/202207W3.html)\n","source":"weekly/2022/index.md","raw":"2022's Weekly report\n[202212-W4 颓废的两周](/weekly/2022/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/2022/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/2022/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/2022/202211W3.html)\n[202211-W2 逝去的生命](/weekly/2022/202211W2.html)\n[202211-W1](/weekly/2022/2022/202211W1.html)\n[202210-W4](/weekly/2022/202210W4.html)\n[202210-W2](/weekly/2022/202210W2.html)\n[202210-W1](/weekly/2022/202210W1.html)\n[202209-W4](/weekly/2022/202209W4.html)\n[202209-W3](/weekly/2022/202209W3.html)\n[202209-W2](/weekly/2022/202209W2.html)\n[202209-W1](/weekly/2022/202209W1.html)\n[202208-W4](/weekly/2022/202208W4.html)\n[202208-W3](/weekly/2022/202208W3.html)\n[202208-W2](/weekly/2022/202208W2.html)\n[202208-W1](/weekly/2022/202208W1.html)\n[202207-W3](/weekly/2022/202207W3.html)\n","date":"2023-01-12T05:28:08.963Z","updated":"2023-01-12T05:28:08.963Z","path":"weekly/2022/index.html","_id":"clcsl4e5l000hrjsce23ec2hf","title":"","comments":1,"layout":"page","content":"<p>2022’s Weekly report<br><a href=\"/weekly/2022/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/2022/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/2022/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/2022/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/2022/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/2022/2022/202211W1.html\">202211-W1</a><br><a href=\"/weekly/2022/202210W4.html\">202210-W4</a><br><a href=\"/weekly/2022/202210W2.html\">202210-W2</a><br><a href=\"/weekly/2022/202210W1.html\">202210-W1</a><br><a href=\"/weekly/2022/202209W4.html\">202209-W4</a><br><a href=\"/weekly/2022/202209W3.html\">202209-W3</a><br><a href=\"/weekly/2022/202209W2.html\">202209-W2</a><br><a href=\"/weekly/2022/202209W1.html\">202209-W1</a><br><a href=\"/weekly/2022/202208W4.html\">202208-W4</a><br><a href=\"/weekly/2022/202208W3.html\">202208-W3</a><br><a href=\"/weekly/2022/202208W2.html\">202208-W2</a><br><a href=\"/weekly/2022/202208W1.html\">202208-W1</a><br><a href=\"/weekly/2022/202207W3.html\">202207-W3</a></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>2022’s Weekly report<br><a href=\"/weekly/2022/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/2022/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/2022/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/2022/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/2022/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/2022/2022/202211W1.html\">202211-W1</a><br><a href=\"/weekly/2022/202210W4.html\">202210-W4</a><br><a href=\"/weekly/2022/202210W2.html\">202210-W2</a><br><a href=\"/weekly/2022/202210W1.html\">202210-W1</a><br><a href=\"/weekly/2022/202209W4.html\">202209-W4</a><br><a href=\"/weekly/2022/202209W3.html\">202209-W3</a><br><a href=\"/weekly/2022/202209W2.html\">202209-W2</a><br><a href=\"/weekly/2022/202209W1.html\">202209-W1</a><br><a href=\"/weekly/2022/202208W4.html\">202208-W4</a><br><a href=\"/weekly/2022/202208W3.html\">202208-W3</a><br><a href=\"/weekly/2022/202208W2.html\">202208-W2</a><br><a href=\"/weekly/2022/202208W1.html\">202208-W1</a><br><a href=\"/weekly/2022/202207W3.html\">202207-W3</a></p>\n"},{"title":"202212W4","author":"Ginta","date":"2022-12-26T04:30:31.000Z","tags":["周报"],"categories":"生活","_content":"\n最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。\n\n### Pycon 2022\n和听听卡一起主办了今年的 *PyCon China* 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 *GO* 了，不过在社区的项目还是优先开发效率比较高的 *Python*。如果明年的 *Pycon* 自己还在深圳的话，那上去分享一下吧。\n\n### 花里胡哨\n开源社的小伙伴大多是 *Node.js* + * TypeScript*，为了方便后续的合作，计划元旦入坑 *Node.js*。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。\n\n### 读书\n这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。\n\n### 元旦\n元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。\n\n### 其他\n2022年的最后几天不要感染病毒就好～\n","source":"weekly/2022/202212W4.md","raw":"---\ntitle: 202212W4\nauthor: Ginta\ndate: 2022-12-26 12:30:31\ntags:\n    - 周报\ncategories: 生活\n---\n\n最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。\n\n### Pycon 2022\n和听听卡一起主办了今年的 *PyCon China* 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 *GO* 了，不过在社区的项目还是优先开发效率比较高的 *Python*。如果明年的 *Pycon* 自己还在深圳的话，那上去分享一下吧。\n\n### 花里胡哨\n开源社的小伙伴大多是 *Node.js* + * TypeScript*，为了方便后续的合作，计划元旦入坑 *Node.js*。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。\n\n### 读书\n这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。\n\n### 元旦\n元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。\n\n### 其他\n2022年的最后几天不要感染病毒就好～\n","updated":"2022-12-26T05:09:46.695Z","path":"weekly/2022/202212W4.html","_id":"clcsl4e5m000irjscb759a0t9","comments":1,"layout":"page","content":"<p>最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。</p>\n<h3 id=\"Pycon-2022\"><a href=\"#Pycon-2022\" class=\"headerlink\" title=\"Pycon 2022\"></a>Pycon 2022</h3><p>和听听卡一起主办了今年的 <em>PyCon China</em> 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 <em>GO</em> 了，不过在社区的项目还是优先开发效率比较高的 <em>Python</em>。如果明年的 <em>Pycon</em> 自己还在深圳的话，那上去分享一下吧。</p>\n<h3 id=\"花里胡哨\"><a href=\"#花里胡哨\" class=\"headerlink\" title=\"花里胡哨\"></a>花里胡哨</h3><p>开源社的小伙伴大多是 <em>Node.js</em> + * TypeScript*，为了方便后续的合作，计划元旦入坑 <em>Node.js</em>。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。</p>\n<h3 id=\"元旦\"><a href=\"#元旦\" class=\"headerlink\" title=\"元旦\"></a>元旦</h3><p>元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>2022年的最后几天不要感染病毒就好～</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。</p>\n<h3 id=\"Pycon-2022\"><a href=\"#Pycon-2022\" class=\"headerlink\" title=\"Pycon 2022\"></a>Pycon 2022</h3><p>和听听卡一起主办了今年的 <em>PyCon China</em> 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 <em>GO</em> 了，不过在社区的项目还是优先开发效率比较高的 <em>Python</em>。如果明年的 <em>Pycon</em> 自己还在深圳的话，那上去分享一下吧。</p>\n<h3 id=\"花里胡哨\"><a href=\"#花里胡哨\" class=\"headerlink\" title=\"花里胡哨\"></a>花里胡哨</h3><p>开源社的小伙伴大多是 <em>Node.js</em> + * TypeScript*，为了方便后续的合作，计划元旦入坑 <em>Node.js</em>。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。</p>\n<h3 id=\"元旦\"><a href=\"#元旦\" class=\"headerlink\" title=\"元旦\"></a>元旦</h3><p>元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>2022年的最后几天不要感染病毒就好～</p>\n"},{"title":"202207W3","date":"2022-07-24T11:10:47.000Z","author":"Ginta","img":"https://img.ginta.top/post%2Fchuandi.jpg","tags":["周报"],"categories":"生活","_content":"### 生活\n周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。\n乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。\n最近又开始刷[宇宙记录片](https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697)了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 *Bing Bang* 时期的宇宙是什么样子。\n### 技术\n入门了 **solidity**，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。\n博客从 *Vercel* 迁移到了 *cloudflare*，现在 *Vercel* 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成[icarus](https://github.com/ppoffice/hexo-theme-icarus)。\n### 读书\n在读[Make Time](https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1)。","source":"weekly/2022/202207W3.md","raw":"---\ntitle: 202207W3\ndate: 2022-07-24 19:10:47\nauthor: Ginta\nimg: https://img.ginta.top/post%2Fchuandi.jpg\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。\n乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。\n最近又开始刷[宇宙记录片](https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697)了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 *Bing Bang* 时期的宇宙是什么样子。\n### 技术\n入门了 **solidity**，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。\n博客从 *Vercel* 迁移到了 *cloudflare*，现在 *Vercel* 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成[icarus](https://github.com/ppoffice/hexo-theme-icarus)。\n### 读书\n在读[Make Time](https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1)。","updated":"2022-08-14T13:23:15.054Z","path":"weekly/2022/202207W3.html","_id":"clcsn6o5u000jrjsc8e8x45nm","comments":1,"layout":"page","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。<br>乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。<br>最近又开始刷<a href=\"https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697\">宇宙记录片</a>了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 <em>Bing Bang</em> 时期的宇宙是什么样子。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>入门了 <strong>solidity</strong>，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。<br>博客从 <em>Vercel</em> 迁移到了 <em>cloudflare</em>，现在 <em>Vercel</em> 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>在读<a href=\"https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1\">Make Time</a>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。<br>乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。<br>最近又开始刷<a href=\"https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697\">宇宙记录片</a>了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 <em>Bing Bang</em> 时期的宇宙是什么样子。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>入门了 <strong>solidity</strong>，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。<br>博客从 <em>Vercel</em> 迁移到了 <em>cloudflare</em>，现在 <em>Vercel</em> 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>在读<a href=\"https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1\">Make Time</a>。</p>\n"},{"_content":"Weekly report\n[202301-W3 除夕的深圳](/weekly/202301W3.html)\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[2022](/weekly/2022/index.html)","source":"weekly/index.md","raw":"Weekly report\n[202301-W3 除夕的深圳](/weekly/202301W3.html)\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[2022](/weekly/2022/index.html)","date":"2023-01-22T11:28:57.509Z","updated":"2023-01-22T11:28:57.509Z","path":"weekly/index.html","_id":"clcsn6vjd000krjsc4hyf20mv","title":"","comments":1,"layout":"page","content":"<p>Weekly report<br><a href=\"/weekly/202301W3.html\">202301-W3 除夕的深圳</a><br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/2022/index.html\">2022</a></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>Weekly report<br><a href=\"/weekly/202301W3.html\">202301-W3 除夕的深圳</a><br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/2022/index.html\">2022</a></p>\n"},{"_content":"Weekly report\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[202212-W4 颓废的两周](/weekly/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/202211W3.html)\n[202211-W2 逝去的生命](/weekly/202211W2.html)\n[202211-W1](/weekly/202211W1.html)\n[202210-W4](/weekly/202210W4.html)\n[202210-W2](/weekly/202210W2.html)\n[202210-W1](/weekly/202210W1.html)\n[202209-W4](/weekly/202209W4.html)\n[202209-W3](/weekly/202209W3.html)\n[202209-W2](/weekly/202209W2.html)\n[202209-W1](/weekly/202209W1.html)\n[202208-W4](/weekly/202208W4.html)\n[202208-W3](/weekly/202208W3.html)\n[202208-W2](/weekly/202208W2.html)\n[202208-W1](/weekly/202208W1.html)\n[202207-W3](/weekly/202207W3.html)\n","source":"weekly/index copy.md","raw":"Weekly report\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[202212-W4 颓废的两周](/weekly/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/202211W3.html)\n[202211-W2 逝去的生命](/weekly/202211W2.html)\n[202211-W1](/weekly/202211W1.html)\n[202210-W4](/weekly/202210W4.html)\n[202210-W2](/weekly/202210W2.html)\n[202210-W1](/weekly/202210W1.html)\n[202209-W4](/weekly/202209W4.html)\n[202209-W3](/weekly/202209W3.html)\n[202209-W2](/weekly/202209W2.html)\n[202209-W1](/weekly/202209W1.html)\n[202208-W4](/weekly/202208W4.html)\n[202208-W3](/weekly/202208W3.html)\n[202208-W2](/weekly/202208W2.html)\n[202208-W1](/weekly/202208W1.html)\n[202207-W3](/weekly/202207W3.html)\n","date":"2023-01-12T05:20:45.365Z","updated":"2023-01-12T05:20:45.365Z","path":"weekly/index copy.html","title":"","comments":1,"layout":"page","_id":"clcsn70qg000lrjsc5ujx9syi","content":"<p>Weekly report<br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/202211W1.html\">202211-W1</a><br><a href=\"/weekly/202210W4.html\">202210-W4</a><br><a href=\"/weekly/202210W2.html\">202210-W2</a><br><a href=\"/weekly/202210W1.html\">202210-W1</a><br><a href=\"/weekly/202209W4.html\">202209-W4</a><br><a href=\"/weekly/202209W3.html\">202209-W3</a><br><a href=\"/weekly/202209W2.html\">202209-W2</a><br><a href=\"/weekly/202209W1.html\">202209-W1</a><br><a href=\"/weekly/202208W4.html\">202208-W4</a><br><a href=\"/weekly/202208W3.html\">202208-W3</a><br><a href=\"/weekly/202208W2.html\">202208-W2</a><br><a href=\"/weekly/202208W1.html\">202208-W1</a><br><a href=\"/weekly/202207W3.html\">202207-W3</a></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>Weekly report<br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/202211W1.html\">202211-W1</a><br><a href=\"/weekly/202210W4.html\">202210-W4</a><br><a href=\"/weekly/202210W2.html\">202210-W2</a><br><a href=\"/weekly/202210W1.html\">202210-W1</a><br><a href=\"/weekly/202209W4.html\">202209-W4</a><br><a href=\"/weekly/202209W3.html\">202209-W3</a><br><a href=\"/weekly/202209W2.html\">202209-W2</a><br><a href=\"/weekly/202209W1.html\">202209-W1</a><br><a href=\"/weekly/202208W4.html\">202208-W4</a><br><a href=\"/weekly/202208W3.html\">202208-W3</a><br><a href=\"/weekly/202208W2.html\">202208-W2</a><br><a href=\"/weekly/202208W1.html\">202208-W1</a><br><a href=\"/weekly/202207W3.html\">202207-W3</a></p>\n"},{"_content":"Weekly report\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[202212-W4 颓废的两周](/weekly/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/202211W3.html)\n[202211-W2 逝去的生命](/weekly/202211W2.html)\n[202211-W1](/weekly/202211W1.html)\n[202210-W4](/weekly/202210W4.html)\n[202210-W2](/weekly/202210W2.html)\n[202210-W1](/weekly/202210W1.html)\n[202209-W4](/weekly/202209W4.html)\n[202209-W3](/weekly/202209W3.html)\n[202209-W2](/weekly/202209W2.html)\n[202209-W1](/weekly/202209W1.html)\n[202208-W4](/weekly/202208W4.html)\n[202208-W3](/weekly/202208W3.html)\n[202208-W2](/weekly/202208W2.html)\n[202208-W1](/weekly/202208W1.html)\n[202207-W3](/weekly/202207W3.html)\n","source":"index.md","raw":"Weekly report\n[202301-W1 去听欢乐港湾的弹唱](/weekly/202301W1.html)\n[202212-W4 颓废的两周](/weekly/202212W4.html)\n[202212-W1 万能的ChatGPT](/weekly/202212W1.html)\n[202211-W4 开始听跑步电台](/weekly/202211W4.html)\n[202211-W3 好像没那么能吃辣了](/weekly/202211W3.html)\n[202211-W2 逝去的生命](/weekly/202211W2.html)\n[202211-W1](/weekly/202211W1.html)\n[202210-W4](/weekly/202210W4.html)\n[202210-W2](/weekly/202210W2.html)\n[202210-W1](/weekly/202210W1.html)\n[202209-W4](/weekly/202209W4.html)\n[202209-W3](/weekly/202209W3.html)\n[202209-W2](/weekly/202209W2.html)\n[202209-W1](/weekly/202209W1.html)\n[202208-W4](/weekly/202208W4.html)\n[202208-W3](/weekly/202208W3.html)\n[202208-W2](/weekly/202208W2.html)\n[202208-W1](/weekly/202208W1.html)\n[202207-W3](/weekly/202207W3.html)\n","date":"2023-01-12T05:21:42.491Z","updated":"2023-01-12T05:21:42.489Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"clcsndy880000u8sc6odx9rji","content":"<p>Weekly report<br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/202211W1.html\">202211-W1</a><br><a href=\"/weekly/202210W4.html\">202210-W4</a><br><a href=\"/weekly/202210W2.html\">202210-W2</a><br><a href=\"/weekly/202210W1.html\">202210-W1</a><br><a href=\"/weekly/202209W4.html\">202209-W4</a><br><a href=\"/weekly/202209W3.html\">202209-W3</a><br><a href=\"/weekly/202209W2.html\">202209-W2</a><br><a href=\"/weekly/202209W1.html\">202209-W1</a><br><a href=\"/weekly/202208W4.html\">202208-W4</a><br><a href=\"/weekly/202208W3.html\">202208-W3</a><br><a href=\"/weekly/202208W2.html\">202208-W2</a><br><a href=\"/weekly/202208W1.html\">202208-W1</a><br><a href=\"/weekly/202207W3.html\">202207-W3</a></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>Weekly report<br><a href=\"/weekly/202301W1.html\">202301-W1 去听欢乐港湾的弹唱</a><br><a href=\"/weekly/202212W4.html\">202212-W4 颓废的两周</a><br><a href=\"/weekly/202212W1.html\">202212-W1 万能的ChatGPT</a><br><a href=\"/weekly/202211W4.html\">202211-W4 开始听跑步电台</a><br><a href=\"/weekly/202211W3.html\">202211-W3 好像没那么能吃辣了</a><br><a href=\"/weekly/202211W2.html\">202211-W2 逝去的生命</a><br><a href=\"/weekly/202211W1.html\">202211-W1</a><br><a href=\"/weekly/202210W4.html\">202210-W4</a><br><a href=\"/weekly/202210W2.html\">202210-W2</a><br><a href=\"/weekly/202210W1.html\">202210-W1</a><br><a href=\"/weekly/202209W4.html\">202209-W4</a><br><a href=\"/weekly/202209W3.html\">202209-W3</a><br><a href=\"/weekly/202209W2.html\">202209-W2</a><br><a href=\"/weekly/202209W1.html\">202209-W1</a><br><a href=\"/weekly/202208W4.html\">202208-W4</a><br><a href=\"/weekly/202208W3.html\">202208-W3</a><br><a href=\"/weekly/202208W2.html\">202208-W2</a><br><a href=\"/weekly/202208W1.html\">202208-W1</a><br><a href=\"/weekly/202207W3.html\">202207-W3</a></p>\n"},{"title":"202301W1","date":"2023-01-09T15:09:29.000Z","tags":["周报"],"categories":"生活","_content":"下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。\n至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。\n\n春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 *Grey Li* 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。\n\n周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。\n\n## 技术\n看了一下 *k8s* 的 *ingress*，服务暴漏这部分还一直停留在 *nodeport* 阶段，*ingress-nginx* 确实优雅，虽然也支持 *istio* 实现，公司里也是这么做的，但 *istio* 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 *nginx* + *docker-compose* 也是足够了。\n\n## 书\n《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。\n\n","source":"weekly/202301W1.md","raw":"---\ntitle: 202301W1\ndate: 2023-01-09 23:09:29\ntags:\n    - 周报\ncategories: 生活\n---\n下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。\n至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。\n\n春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 *Grey Li* 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。\n\n周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。\n\n## 技术\n看了一下 *k8s* 的 *ingress*，服务暴漏这部分还一直停留在 *nodeport* 阶段，*ingress-nginx* 确实优雅，虽然也支持 *istio* 实现，公司里也是这么做的，但 *istio* 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 *nginx* + *docker-compose* 也是足够了。\n\n## 书\n《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。\n\n","updated":"2023-01-09T16:21:23.531Z","path":"weekly/202301W1.html","comments":1,"layout":"page","_id":"clcsnuc9e0001opsc6tvy9y17","content":"<p>下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。<br>至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。</p>\n<p>春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 <em>Grey Li</em> 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。</p>\n<p>周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>看了一下 <em>k8s</em> 的 <em>ingress</em>，服务暴漏这部分还一直停留在 <em>nodeport</em> 阶段，<em>ingress-nginx</em> 确实优雅，虽然也支持 <em>istio</em> 实现，公司里也是这么做的，但 <em>istio</em> 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 <em>nginx</em> + <em>docker-compose</em> 也是足够了。</p>\n<h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。<br>至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。</p>\n<p>春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 <em>Grey Li</em> 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。</p>\n<p>周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>看了一下 <em>k8s</em> 的 <em>ingress</em>，服务暴漏这部分还一直停留在 <em>nodeport</em> 阶段，<em>ingress-nginx</em> 确实优雅，虽然也支持 <em>istio</em> 实现，公司里也是这么做的，但 <em>istio</em> 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 <em>nginx</em> + <em>docker-compose</em> 也是足够了。</p>\n<h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。</p>\n"},{"title":"202301W3","date":"2023-01-22T10:33:12.000Z","tags":["周报"],"categories":"生活","_content":"\n小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。\n\n### 除夕\n提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。\n后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。\n晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。\n\n### 看书\n沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。\n\n### 其他\n初一的欢乐港湾人比想象中的多。\n![20230122191202](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png)\n![20230122191342](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png)\n","source":"weekly/202301W3.md","raw":"---\ntitle: 202301W3\ndate: 2023-01-22 18:33:12\ntags:\n    - 周报\ncategories: 生活\n---\n\n小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。\n\n### 除夕\n提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。\n后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。\n晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。\n\n### 看书\n沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。\n\n### 其他\n初一的欢乐港湾人比想象中的多。\n![20230122191202](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png)\n![20230122191342](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png)\n","updated":"2023-01-22T11:13:56.632Z","path":"weekly/202301W3.html","comments":1,"layout":"page","_id":"cldket1k6000195scgp7b9ig2","content":"<p>小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。</p>\n<h3 id=\"除夕\"><a href=\"#除夕\" class=\"headerlink\" title=\"除夕\"></a>除夕</h3><p>提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。<br>后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。<br>晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。</p>\n<h3 id=\"看书\"><a href=\"#看书\" class=\"headerlink\" title=\"看书\"></a>看书</h3><p>沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>初一的欢乐港湾人比想象中的多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png\" alt=\"20230122191202\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png\" alt=\"20230122191342\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。</p>\n<h3 id=\"除夕\"><a href=\"#除夕\" class=\"headerlink\" title=\"除夕\"></a>除夕</h3><p>提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。<br>后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。<br>晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。</p>\n<h3 id=\"看书\"><a href=\"#看书\" class=\"headerlink\" title=\"看书\"></a>看书</h3><p>沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>初一的欢乐港湾人比想象中的多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png\" alt=\"20230122191202\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png\" alt=\"20230122191342\"></p>\n"}],"Post":[{"title":"2019和2020","date":"2019-12-28T07:10:47.000Z","_content":"\n## 前言\n\n2019年总体来说还是有所收获的，除了技术上成长了许多，还开发了自己的博客；另外还参与了 *Pycon China2019 成都* 的志愿者活动，有机会和各位大佬近距离接触\n\n![志愿者和讲师合影](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112133616.png)，阿里老哥、日本小姐姐以及 *Flask* 项目大神维护者的讲解让小生受益匪浅。\n\n- 读书的话貌似杂志更多吧，受老爸影响没事的时候就会看看《特别关注》、还有初中以来一直看的《读者》、《意林》。小说的话也看了《嫌疑人x的献身》（开始以为是推理小说，最后还是爱情结尾......以前看《白夜行》感觉亮司也是个“好人”）、《巨人的陨落1》、《巨人的陨落2》目前看了一半吧。\n\n\n\n- 工作方面之前一直在成都工作，最终也是内心斗争了好久还是决定来深圳了，2年前就一直想来了，毕业后又工作了几个月（从成都到北上广深的也许可以体会这需要多大的勇气~），来到深圳开始找新的工作吧，目前有一个offer不过岗位路线和自己的计划略微偏移，最终决定放弃这个offer。\n\n\n\n- 旅行，去年把《港澳通行证》办了，打算的是今年来一趟香港之旅，不过成都距离还是太远了，现在来深圳方便多了，明年的话这个计划基本没问题。\n\n\n\n## 对于2020年\n\n- 学习，微服务无论是前景还是技术角度个人还是很看好的，然后之前抽空也大概看了看 **docker**，不过还没有项目部署经验，年前这段时间再巩固一下，年后打算把博客改成 **docker** 部署。由于用到了 **elasticsearch** 进行全文检索 和  **supervisor** 来进程管理，免不了再来一大波操作了~。\n\n\n\n- 社交，感觉自己的运气还是蛮好的，来深圳之前帮助一个老哥解决了一些技术问题，来深圳以后老哥也帮了我不少。未来希望结交一些新朋友吧，不过这个随缘就好。\n\n\n\n- 兴趣，周日的话想培养个兴趣，目前是想弹弹吉他，工作稳定后换个房子，养条狗，还是要有些仪式感的。\n\n\n\n- 读书，《巨人的陨落》还有一本半没读完，《平凡的世界》，《基督山伯爵》（英文版）。\n\n\n\n- 待补充......\n\n\n\n最后想给自己来一句\n\n\n\n>愿你在被打击时，记起你的珍贵，抵抗恶意；愿你在迷茫时，坚信你的珍贵。爱你所爱，行你所行，听从你心，无问西东。","source":"_posts/2019和2020.md","raw":"---\ntitle: 2019和2020\ndate: 2019-12-28 15:10:47\ntags:\n    - 年终总结\ncategories: 生活\n---\n\n## 前言\n\n2019年总体来说还是有所收获的，除了技术上成长了许多，还开发了自己的博客；另外还参与了 *Pycon China2019 成都* 的志愿者活动，有机会和各位大佬近距离接触\n\n![志愿者和讲师合影](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112133616.png)，阿里老哥、日本小姐姐以及 *Flask* 项目大神维护者的讲解让小生受益匪浅。\n\n- 读书的话貌似杂志更多吧，受老爸影响没事的时候就会看看《特别关注》、还有初中以来一直看的《读者》、《意林》。小说的话也看了《嫌疑人x的献身》（开始以为是推理小说，最后还是爱情结尾......以前看《白夜行》感觉亮司也是个“好人”）、《巨人的陨落1》、《巨人的陨落2》目前看了一半吧。\n\n\n\n- 工作方面之前一直在成都工作，最终也是内心斗争了好久还是决定来深圳了，2年前就一直想来了，毕业后又工作了几个月（从成都到北上广深的也许可以体会这需要多大的勇气~），来到深圳开始找新的工作吧，目前有一个offer不过岗位路线和自己的计划略微偏移，最终决定放弃这个offer。\n\n\n\n- 旅行，去年把《港澳通行证》办了，打算的是今年来一趟香港之旅，不过成都距离还是太远了，现在来深圳方便多了，明年的话这个计划基本没问题。\n\n\n\n## 对于2020年\n\n- 学习，微服务无论是前景还是技术角度个人还是很看好的，然后之前抽空也大概看了看 **docker**，不过还没有项目部署经验，年前这段时间再巩固一下，年后打算把博客改成 **docker** 部署。由于用到了 **elasticsearch** 进行全文检索 和  **supervisor** 来进程管理，免不了再来一大波操作了~。\n\n\n\n- 社交，感觉自己的运气还是蛮好的，来深圳之前帮助一个老哥解决了一些技术问题，来深圳以后老哥也帮了我不少。未来希望结交一些新朋友吧，不过这个随缘就好。\n\n\n\n- 兴趣，周日的话想培养个兴趣，目前是想弹弹吉他，工作稳定后换个房子，养条狗，还是要有些仪式感的。\n\n\n\n- 读书，《巨人的陨落》还有一本半没读完，《平凡的世界》，《基督山伯爵》（英文版）。\n\n\n\n- 待补充......\n\n\n\n最后想给自己来一句\n\n\n\n>愿你在被打击时，记起你的珍贵，抵抗恶意；愿你在迷茫时，坚信你的珍贵。爱你所爱，行你所行，听从你心，无问西东。","slug":"2019和2020","published":1,"updated":"2023-01-12T05:36:31.849Z","_id":"cl6p6180m0001tkscbucr6r3j","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>2019年总体来说还是有所收获的，除了技术上成长了许多，还开发了自己的博客；另外还参与了 <em>Pycon China2019 成都</em> 的志愿者活动，有机会和各位大佬近距离接触</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112133616.png\" alt=\"志愿者和讲师合影\">，阿里老哥、日本小姐姐以及 <em>Flask</em> 项目大神维护者的讲解让小生受益匪浅。</p>\n<ul>\n<li><p>读书的话貌似杂志更多吧，受老爸影响没事的时候就会看看《特别关注》、还有初中以来一直看的《读者》、《意林》。小说的话也看了《嫌疑人x的献身》（开始以为是推理小说，最后还是爱情结尾……以前看《白夜行》感觉亮司也是个“好人”）、《巨人的陨落1》、《巨人的陨落2》目前看了一半吧。</p>\n</li>\n<li><p>工作方面之前一直在成都工作，最终也是内心斗争了好久还是决定来深圳了，2年前就一直想来了，毕业后又工作了几个月（从成都到北上广深的也许可以体会这需要多大的勇气~），来到深圳开始找新的工作吧，目前有一个offer不过岗位路线和自己的计划略微偏移，最终决定放弃这个offer。</p>\n</li>\n<li><p>旅行，去年把《港澳通行证》办了，打算的是今年来一趟香港之旅，不过成都距离还是太远了，现在来深圳方便多了，明年的话这个计划基本没问题。</p>\n</li>\n</ul>\n<h2 id=\"对于2020年\"><a href=\"#对于2020年\" class=\"headerlink\" title=\"对于2020年\"></a>对于2020年</h2><ul>\n<li><p>学习，微服务无论是前景还是技术角度个人还是很看好的，然后之前抽空也大概看了看 <strong>docker</strong>，不过还没有项目部署经验，年前这段时间再巩固一下，年后打算把博客改成 <strong>docker</strong> 部署。由于用到了 <strong>elasticsearch</strong> 进行全文检索 和  <strong>supervisor</strong> 来进程管理，免不了再来一大波操作了~。</p>\n</li>\n<li><p>社交，感觉自己的运气还是蛮好的，来深圳之前帮助一个老哥解决了一些技术问题，来深圳以后老哥也帮了我不少。未来希望结交一些新朋友吧，不过这个随缘就好。</p>\n</li>\n<li><p>兴趣，周日的话想培养个兴趣，目前是想弹弹吉他，工作稳定后换个房子，养条狗，还是要有些仪式感的。</p>\n</li>\n<li><p>读书，《巨人的陨落》还有一本半没读完，《平凡的世界》，《基督山伯爵》（英文版）。</p>\n</li>\n<li><p>待补充……</p>\n</li>\n</ul>\n<p>最后想给自己来一句</p>\n<blockquote>\n<p>愿你在被打击时，记起你的珍贵，抵抗恶意；愿你在迷茫时，坚信你的珍贵。爱你所爱，行你所行，听从你心，无问西东。</p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>2019年总体来说还是有所收获的，除了技术上成长了许多，还开发了自己的博客；另外还参与了 <em>Pycon China2019 成都</em> 的志愿者活动，有机会和各位大佬近距离接触</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112133616.png\" alt=\"志愿者和讲师合影\">，阿里老哥、日本小姐姐以及 <em>Flask</em> 项目大神维护者的讲解让小生受益匪浅。</p>\n<ul>\n<li><p>读书的话貌似杂志更多吧，受老爸影响没事的时候就会看看《特别关注》、还有初中以来一直看的《读者》、《意林》。小说的话也看了《嫌疑人x的献身》（开始以为是推理小说，最后还是爱情结尾……以前看《白夜行》感觉亮司也是个“好人”）、《巨人的陨落1》、《巨人的陨落2》目前看了一半吧。</p>\n</li>\n<li><p>工作方面之前一直在成都工作，最终也是内心斗争了好久还是决定来深圳了，2年前就一直想来了，毕业后又工作了几个月（从成都到北上广深的也许可以体会这需要多大的勇气~），来到深圳开始找新的工作吧，目前有一个offer不过岗位路线和自己的计划略微偏移，最终决定放弃这个offer。</p>\n</li>\n<li><p>旅行，去年把《港澳通行证》办了，打算的是今年来一趟香港之旅，不过成都距离还是太远了，现在来深圳方便多了，明年的话这个计划基本没问题。</p>\n</li>\n</ul>\n<h2 id=\"对于2020年\"><a href=\"#对于2020年\" class=\"headerlink\" title=\"对于2020年\"></a>对于2020年</h2><ul>\n<li><p>学习，微服务无论是前景还是技术角度个人还是很看好的，然后之前抽空也大概看了看 <strong>docker</strong>，不过还没有项目部署经验，年前这段时间再巩固一下，年后打算把博客改成 <strong>docker</strong> 部署。由于用到了 <strong>elasticsearch</strong> 进行全文检索 和  <strong>supervisor</strong> 来进程管理，免不了再来一大波操作了~。</p>\n</li>\n<li><p>社交，感觉自己的运气还是蛮好的，来深圳之前帮助一个老哥解决了一些技术问题，来深圳以后老哥也帮了我不少。未来希望结交一些新朋友吧，不过这个随缘就好。</p>\n</li>\n<li><p>兴趣，周日的话想培养个兴趣，目前是想弹弹吉他，工作稳定后换个房子，养条狗，还是要有些仪式感的。</p>\n</li>\n<li><p>读书，《巨人的陨落》还有一本半没读完，《平凡的世界》，《基督山伯爵》（英文版）。</p>\n</li>\n<li><p>待补充……</p>\n</li>\n</ul>\n<p>最后想给自己来一句</p>\n<blockquote>\n<p>愿你在被打击时，记起你的珍贵，抵抗恶意；愿你在迷茫时，坚信你的珍贵。爱你所爱，行你所行，听从你心，无问西东。</p>\n</blockquote>\n"},{"title":"2022已过三分之一","date":"2022-05-08T00:09:20.000Z","author":"Ginta","img":"https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg","top":false,"hide":false,"cover":false,"coverImg":"https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg","toc":false,"mathjax":false,"summary":null,"_content":"\n## 前言\n起早了，闲来无事刷一下 *blog*，看了看年初写的总结，决定复盘一下，近乎鞭尸的行为，先附上[2021年总结](https://ginta.top/2022/01/01/2022/)。其实每过一段时间看看之前写的博客还蛮有意思的。\n## 运动\n从年后到五月，只爬了一次山，更多的是出去吃个烧烤什么的，爬山的次数无法和2021年同期相比。\n目前可以做到80个仰卧起坐，40次哑铃（单手5KG）,30个俯卧撑，断断续续，并非每天，偶尔朋友吃饭回来11点了，就没有做了，之后的话尽量保证10.30之前回家。\n\n## 读书\n年初的时候在 *twitter* 上看到一位老哥的总结，感触挺多的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a3efd977f05e448a8e3d20e16de08286.png)\n当时看的时候还是挺感慨的，现在看也有同感。2021看完整读过的书不到10本，当然是除去了读者和特别关注等杂志，杂志也不是每篇都看。\n对比了一下自己：\n- 单身和朋友合租，但基本也无人打扰\n- 有一定社交，2021年还是参与一些群聊的\n- 偶尔玩玩游戏\n- 节假日会出去转转吧，爬山什么的\n\n那天看了看书架上吃灰已久的书，做出了一些调整，周末玩游戏少了，退出了 *N* 个群，少花点时间水群。这在[2021年总结](https://ginta.top/2022/01/01/2022/) 中有提到。空出来的时间以期读更多的书。\n从一月到五月，也就是写这篇文章的时候，读书情况如下：\n\n- 《幻夜》100%\n- 《新参者》 100%\n- 《东方快车谋杀案》100%\n- 《大秦帝国一（上）》100%\n- 《大秦帝国一（下）》100%\n- 《大秦帝国二（上）》100%\n- 《秘密》100%\n- 《三体一》100%\n- 《三体二》100%\n- 《三体三》100%\n- 《大秦帝国二（下）》40%\n- 《刀锋》35%\n\n## 技术\n《kubernetes权威指南》时不时翻一下。\n## 音乐\n🎸偶尔在弹，乐理没有在看。。。\n\n## 最后\n阶段性的复盘还是很有必要的，之后每周写一下周报吧。\n","source":"_posts/2022已过三分之一.md","raw":"---\ntitle: 2022已过三分之一\ndate: 2022-05-08 08:09:20\nauthor: Ginta\nimg: https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg\ntop: false\nhide: false\ncover: false\ncoverImg: https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 生活\n---\n\n## 前言\n起早了，闲来无事刷一下 *blog*，看了看年初写的总结，决定复盘一下，近乎鞭尸的行为，先附上[2021年总结](https://ginta.top/2022/01/01/2022/)。其实每过一段时间看看之前写的博客还蛮有意思的。\n## 运动\n从年后到五月，只爬了一次山，更多的是出去吃个烧烤什么的，爬山的次数无法和2021年同期相比。\n目前可以做到80个仰卧起坐，40次哑铃（单手5KG）,30个俯卧撑，断断续续，并非每天，偶尔朋友吃饭回来11点了，就没有做了，之后的话尽量保证10.30之前回家。\n\n## 读书\n年初的时候在 *twitter* 上看到一位老哥的总结，感触挺多的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a3efd977f05e448a8e3d20e16de08286.png)\n当时看的时候还是挺感慨的，现在看也有同感。2021看完整读过的书不到10本，当然是除去了读者和特别关注等杂志，杂志也不是每篇都看。\n对比了一下自己：\n- 单身和朋友合租，但基本也无人打扰\n- 有一定社交，2021年还是参与一些群聊的\n- 偶尔玩玩游戏\n- 节假日会出去转转吧，爬山什么的\n\n那天看了看书架上吃灰已久的书，做出了一些调整，周末玩游戏少了，退出了 *N* 个群，少花点时间水群。这在[2021年总结](https://ginta.top/2022/01/01/2022/) 中有提到。空出来的时间以期读更多的书。\n从一月到五月，也就是写这篇文章的时候，读书情况如下：\n\n- 《幻夜》100%\n- 《新参者》 100%\n- 《东方快车谋杀案》100%\n- 《大秦帝国一（上）》100%\n- 《大秦帝国一（下）》100%\n- 《大秦帝国二（上）》100%\n- 《秘密》100%\n- 《三体一》100%\n- 《三体二》100%\n- 《三体三》100%\n- 《大秦帝国二（下）》40%\n- 《刀锋》35%\n\n## 技术\n《kubernetes权威指南》时不时翻一下。\n## 音乐\n🎸偶尔在弹，乐理没有在看。。。\n\n## 最后\n阶段性的复盘还是很有必要的，之后每周写一下周报吧。\n","slug":"2022已过三分之一","published":1,"updated":"2022-08-13T05:54:58.272Z","_id":"cl6p6180r000atkscauc4ap1v","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>起早了，闲来无事刷一下 <em>blog</em>，看了看年初写的总结，决定复盘一下，近乎鞭尸的行为，先附上<a href=\"https://ginta.top/2022/01/01/2022/\">2021年总结</a>。其实每过一段时间看看之前写的博客还蛮有意思的。</p>\n<h2 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h2><p>从年后到五月，只爬了一次山，更多的是出去吃个烧烤什么的，爬山的次数无法和2021年同期相比。<br>目前可以做到80个仰卧起坐，40次哑铃（单手5KG）,30个俯卧撑，断断续续，并非每天，偶尔朋友吃饭回来11点了，就没有做了，之后的话尽量保证10.30之前回家。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>年初的时候在 <em>twitter</em> 上看到一位老哥的总结，感触挺多的。<br><img src=\"https://img-blog.csdnimg.cn/a3efd977f05e448a8e3d20e16de08286.png\" alt=\"在这里插入图片描述\"><br>当时看的时候还是挺感慨的，现在看也有同感。2021看完整读过的书不到10本，当然是除去了读者和特别关注等杂志，杂志也不是每篇都看。<br>对比了一下自己：</p>\n<ul>\n<li>单身和朋友合租，但基本也无人打扰</li>\n<li>有一定社交，2021年还是参与一些群聊的</li>\n<li>偶尔玩玩游戏</li>\n<li>节假日会出去转转吧，爬山什么的</li>\n</ul>\n<p>那天看了看书架上吃灰已久的书，做出了一些调整，周末玩游戏少了，退出了 <em>N</em> 个群，少花点时间水群。这在<a href=\"https://ginta.top/2022/01/01/2022/\">2021年总结</a> 中有提到。空出来的时间以期读更多的书。<br>从一月到五月，也就是写这篇文章的时候，读书情况如下：</p>\n<ul>\n<li>《幻夜》100%</li>\n<li>《新参者》 100%</li>\n<li>《东方快车谋杀案》100%</li>\n<li>《大秦帝国一（上）》100%</li>\n<li>《大秦帝国一（下）》100%</li>\n<li>《大秦帝国二（上）》100%</li>\n<li>《秘密》100%</li>\n<li>《三体一》100%</li>\n<li>《三体二》100%</li>\n<li>《三体三》100%</li>\n<li>《大秦帝国二（下）》40%</li>\n<li>《刀锋》35%</li>\n</ul>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>《kubernetes权威指南》时不时翻一下。</p>\n<h2 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h2><p>🎸偶尔在弹，乐理没有在看。。。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>阶段性的复盘还是很有必要的，之后每周写一下周报吧。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>起早了，闲来无事刷一下 <em>blog</em>，看了看年初写的总结，决定复盘一下，近乎鞭尸的行为，先附上<a href=\"https://ginta.top/2022/01/01/2022/\">2021年总结</a>。其实每过一段时间看看之前写的博客还蛮有意思的。</p>\n<h2 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h2><p>从年后到五月，只爬了一次山，更多的是出去吃个烧烤什么的，爬山的次数无法和2021年同期相比。<br>目前可以做到80个仰卧起坐，40次哑铃（单手5KG）,30个俯卧撑，断断续续，并非每天，偶尔朋友吃饭回来11点了，就没有做了，之后的话尽量保证10.30之前回家。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>年初的时候在 <em>twitter</em> 上看到一位老哥的总结，感触挺多的。<br><img src=\"https://img-blog.csdnimg.cn/a3efd977f05e448a8e3d20e16de08286.png\" alt=\"在这里插入图片描述\"><br>当时看的时候还是挺感慨的，现在看也有同感。2021看完整读过的书不到10本，当然是除去了读者和特别关注等杂志，杂志也不是每篇都看。<br>对比了一下自己：</p>\n<ul>\n<li>单身和朋友合租，但基本也无人打扰</li>\n<li>有一定社交，2021年还是参与一些群聊的</li>\n<li>偶尔玩玩游戏</li>\n<li>节假日会出去转转吧，爬山什么的</li>\n</ul>\n<p>那天看了看书架上吃灰已久的书，做出了一些调整，周末玩游戏少了，退出了 <em>N</em> 个群，少花点时间水群。这在<a href=\"https://ginta.top/2022/01/01/2022/\">2021年总结</a> 中有提到。空出来的时间以期读更多的书。<br>从一月到五月，也就是写这篇文章的时候，读书情况如下：</p>\n<ul>\n<li>《幻夜》100%</li>\n<li>《新参者》 100%</li>\n<li>《东方快车谋杀案》100%</li>\n<li>《大秦帝国一（上）》100%</li>\n<li>《大秦帝国一（下）》100%</li>\n<li>《大秦帝国二（上）》100%</li>\n<li>《秘密》100%</li>\n<li>《三体一》100%</li>\n<li>《三体二》100%</li>\n<li>《三体三》100%</li>\n<li>《大秦帝国二（下）》40%</li>\n<li>《刀锋》35%</li>\n</ul>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>《kubernetes权威指南》时不时翻一下。</p>\n<h2 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h2><p>🎸偶尔在弹，乐理没有在看。。。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>阶段性的复盘还是很有必要的，之后每周写一下周报吧。</p>\n"},{"title":"Class-based views","date":"2019-11-23T04:17:31.000Z","author":"Ginta","img":"http://img.ginta.top/dragin1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dragin1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"### 前言 \n\n*Django* 中 **函数视图** 中有个 *request* 对象，封装了一些请求的数据，比如 **post** 请求上传来的参数或者当前用户数据：\n\n```\n\ndef index(request, *args, **kwargs):\n\n    print(args)\n\n    return HttpResponse(\"hello\")\n\n```\n\n在给博客新增第三方登录的时候后端要进行一些用户数据的处理，比如头像链接拼接，而项目的视图函数采用的是 **类视图**。\n\n### 解决\n\n一开始没有找到 **User** 对象，然后看了看 *View* 类的封装，发现有这么一段：\n\n```\n\ndef setup(self, request, *args, **kwargs):\n\n    \"\"\"Initialize attributes shared by all view methods.\"\"\"\n\n    self.request = request\n\n    self.args = args\n\n    self.kwargs = kwargs\n\n```\n\n显然在 **类视图** 中 **request** 对象被封装成一个属性了，那调用的时候就用 **self.request** 来代替原来的 **request**，比如获取当前用户就用 **self.request.user** 即可。\n\n\n\n### 结语\n\n遇到问题直接看源码有时候比百度要来得快一些。","source":"_posts/Class-based views.md","raw":"---\ntitle: Class-based views\ndate: 2019-11-23 12:17:31\nauthor: Ginta\nimg: http://img.ginta.top/dragin1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dragin1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - Django\ncategories: Django\npublished: false\n---\n### 前言 \n\n*Django* 中 **函数视图** 中有个 *request* 对象，封装了一些请求的数据，比如 **post** 请求上传来的参数或者当前用户数据：\n\n```\n\ndef index(request, *args, **kwargs):\n\n    print(args)\n\n    return HttpResponse(\"hello\")\n\n```\n\n在给博客新增第三方登录的时候后端要进行一些用户数据的处理，比如头像链接拼接，而项目的视图函数采用的是 **类视图**。\n\n### 解决\n\n一开始没有找到 **User** 对象，然后看了看 *View* 类的封装，发现有这么一段：\n\n```\n\ndef setup(self, request, *args, **kwargs):\n\n    \"\"\"Initialize attributes shared by all view methods.\"\"\"\n\n    self.request = request\n\n    self.args = args\n\n    self.kwargs = kwargs\n\n```\n\n显然在 **类视图** 中 **request** 对象被封装成一个属性了，那调用的时候就用 **self.request** 来代替原来的 **request**，比如获取当前用户就用 **self.request.user** 即可。\n\n\n\n### 结语\n\n遇到问题直接看源码有时候比百度要来得快一些。","slug":"Class-based views","updated":"2023-06-14T10:16:57.616Z","_id":"cl6p6180s000etksc4cu99s4j","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><em>Django</em> 中 <strong>函数视图</strong> 中有个 <em>request</em> 对象，封装了一些请求的数据，比如 <strong>post</strong> 请求上传来的参数或者当前用户数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def index(request, *args, **kwargs):</span><br><span class=\"line\"></span><br><span class=\"line\">    print(args)</span><br><span class=\"line\"></span><br><span class=\"line\">    return HttpResponse(&quot;hello&quot;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在给博客新增第三方登录的时候后端要进行一些用户数据的处理，比如头像链接拼接，而项目的视图函数采用的是 <strong>类视图</strong>。</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>一开始没有找到 <strong>User</strong> 对象，然后看了看 <em>View</em> 类的封装，发现有这么一段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def setup(self, request, *args, **kwargs):</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;&quot;&quot;Initialize attributes shared by all view methods.&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    self.request = request</span><br><span class=\"line\"></span><br><span class=\"line\">    self.args = args</span><br><span class=\"line\"></span><br><span class=\"line\">    self.kwargs = kwargs</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>显然在 <strong>类视图</strong> 中 <strong>request</strong> 对象被封装成一个属性了，那调用的时候就用 <strong>self.request</strong> 来代替原来的 <strong>request</strong>，比如获取当前用户就用 <strong>self.request.user</strong> 即可。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>遇到问题直接看源码有时候比百度要来得快一些。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><em>Django</em> 中 <strong>函数视图</strong> 中有个 <em>request</em> 对象，封装了一些请求的数据，比如 <strong>post</strong> 请求上传来的参数或者当前用户数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def index(request, *args, **kwargs):</span><br><span class=\"line\"></span><br><span class=\"line\">    print(args)</span><br><span class=\"line\"></span><br><span class=\"line\">    return HttpResponse(&quot;hello&quot;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在给博客新增第三方登录的时候后端要进行一些用户数据的处理，比如头像链接拼接，而项目的视图函数采用的是 <strong>类视图</strong>。</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>一开始没有找到 <strong>User</strong> 对象，然后看了看 <em>View</em> 类的封装，发现有这么一段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def setup(self, request, *args, **kwargs):</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;&quot;&quot;Initialize attributes shared by all view methods.&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    self.request = request</span><br><span class=\"line\"></span><br><span class=\"line\">    self.args = args</span><br><span class=\"line\"></span><br><span class=\"line\">    self.kwargs = kwargs</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>显然在 <strong>类视图</strong> 中 <strong>request</strong> 对象被封装成一个属性了，那调用的时候就用 <strong>self.request</strong> 来代替原来的 <strong>request</strong>，比如获取当前用户就用 <strong>self.request.user</strong> 即可。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>遇到问题直接看源码有时候比百度要来得快一些。</p>\n"},{"title":"Django ORM 机制","date":"2020-02-18T19:35:32.000Z","author":"Ginta","img":"http://img.ginta.top/qinshi2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/qinshi2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## *ORM*是什么\n\n目前大多数互联网项目都涉及到数据库，不同的数据库有着自己的优势，用的时候就需要查询它们的 *sql* 语句，学习成本高；另外一段很长的 *sql* 语句很容易存在被注入的风险。\n\n\n\n**对象关系映射**（Object Relational Mapping，简称**ORM**）模式是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术。\n\n\n\n该技术让我们可以使用面向对象的方法来进行数据库的操作，从而不必理会不同数据库之间 *sql* 语句的差异。\n\n\n\n\n\n![ORM示意图](http://img.ginta.top/markdownx/2019/12/02/23d52908-3a2b-45ae-a4b2-f761781d870e.png)\n\n\n\n如上图所示，类对应的就是数据库中的表，类中的属性对应数据表中的字段，类的实例对象就是数据库中的一条条数据了。\n\n\n\n```\n\nfrom django.db import models\n\n\n\nclass Person(models.Model):\n\n    first_name = models.CharField(max_length=30)\n\n    last_name = models.CharField(max_length=30)\n\n```\n\n这里的 **Person** 在数据库中就是一张表，表名可以自定义。*first_name* 和 *last_name* 就是其中的两个字段，*max_length* 就是长度约束，比如 *MySQL* 数据库中对于字符字段可以设置其最大长度。\n\n如果我们想新建一条数据，可以通过以下方法：\n\n```\n\nfrom .models import Person\n\nperson = Person(first_name=\"泷谷\", last_name=\"源治\")\n\nperson.save()\n\n```\n\n\n\n## 总结\n\n**ORM** 让开发人员大大减少了工作量，使得代码更加清晰，方便维护。当然每个技术有优点就有缺陷，**ORM** 虽然使开发效率提高了，但是缺牺牲了一些性能；另外一些复杂的 *sql* 语句并不能通过 **ORM** 来实现。不过对于大多开发者来说还是利大于弊。","source":"_posts/Django ORM 机制.md","raw":"---\ntitle: Django ORM 机制\ndate: 2020-02-19 03:35:32\nauthor: Ginta\nimg: http://img.ginta.top/qinshi2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/qinshi2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - Django\ncategories: 数据库\npublished: false\n---\n## *ORM*是什么\n\n目前大多数互联网项目都涉及到数据库，不同的数据库有着自己的优势，用的时候就需要查询它们的 *sql* 语句，学习成本高；另外一段很长的 *sql* 语句很容易存在被注入的风险。\n\n\n\n**对象关系映射**（Object Relational Mapping，简称**ORM**）模式是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术。\n\n\n\n该技术让我们可以使用面向对象的方法来进行数据库的操作，从而不必理会不同数据库之间 *sql* 语句的差异。\n\n\n\n\n\n![ORM示意图](http://img.ginta.top/markdownx/2019/12/02/23d52908-3a2b-45ae-a4b2-f761781d870e.png)\n\n\n\n如上图所示，类对应的就是数据库中的表，类中的属性对应数据表中的字段，类的实例对象就是数据库中的一条条数据了。\n\n\n\n```\n\nfrom django.db import models\n\n\n\nclass Person(models.Model):\n\n    first_name = models.CharField(max_length=30)\n\n    last_name = models.CharField(max_length=30)\n\n```\n\n这里的 **Person** 在数据库中就是一张表，表名可以自定义。*first_name* 和 *last_name* 就是其中的两个字段，*max_length* 就是长度约束，比如 *MySQL* 数据库中对于字符字段可以设置其最大长度。\n\n如果我们想新建一条数据，可以通过以下方法：\n\n```\n\nfrom .models import Person\n\nperson = Person(first_name=\"泷谷\", last_name=\"源治\")\n\nperson.save()\n\n```\n\n\n\n## 总结\n\n**ORM** 让开发人员大大减少了工作量，使得代码更加清晰，方便维护。当然每个技术有优点就有缺陷，**ORM** 虽然使开发效率提高了，但是缺牺牲了一些性能；另外一些复杂的 *sql* 语句并不能通过 **ORM** 来实现。不过对于大多开发者来说还是利大于弊。","slug":"Django ORM 机制","updated":"2023-06-14T10:16:54.600Z","_id":"cl6p6180t000ktkscel9y3p0k","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"ORM是什么\"><a href=\"#ORM是什么\" class=\"headerlink\" title=\"ORM是什么\"></a><em>ORM</em>是什么</h2><p>目前大多数互联网项目都涉及到数据库，不同的数据库有着自己的优势，用的时候就需要查询它们的 <em>sql</em> 语句，学习成本高；另外一段很长的 <em>sql</em> 语句很容易存在被注入的风险。</p>\n<p><strong>对象关系映射</strong>（Object Relational Mapping，简称<strong>ORM</strong>）模式是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术。</p>\n<p>该技术让我们可以使用面向对象的方法来进行数据库的操作，从而不必理会不同数据库之间 <em>sql</em> 语句的差异。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/23d52908-3a2b-45ae-a4b2-f761781d870e.png\" alt=\"ORM示意图\"></p>\n<p>如上图所示，类对应的就是数据库中的表，类中的属性对应数据表中的字段，类的实例对象就是数据库中的一条条数据了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Person(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\">    first_name = models.CharField(max_length=30)</span><br><span class=\"line\"></span><br><span class=\"line\">    last_name = models.CharField(max_length=30)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里的 <strong>Person</strong> 在数据库中就是一张表，表名可以自定义。<em>first_name</em> 和 <em>last_name</em> 就是其中的两个字段，<em>max_length</em> 就是长度约束，比如 <em>MySQL</em> 数据库中对于字符字段可以设置其最大长度。</p>\n<p>如果我们想新建一条数据，可以通过以下方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from .models import Person</span><br><span class=\"line\"></span><br><span class=\"line\">person = Person(first_name=&quot;泷谷&quot;, last_name=&quot;源治&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">person.save()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><strong>ORM</strong> 让开发人员大大减少了工作量，使得代码更加清晰，方便维护。当然每个技术有优点就有缺陷，<strong>ORM</strong> 虽然使开发效率提高了，但是缺牺牲了一些性能；另外一些复杂的 <em>sql</em> 语句并不能通过 <strong>ORM</strong> 来实现。不过对于大多开发者来说还是利大于弊。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"ORM是什么\"><a href=\"#ORM是什么\" class=\"headerlink\" title=\"ORM是什么\"></a><em>ORM</em>是什么</h2><p>目前大多数互联网项目都涉及到数据库，不同的数据库有着自己的优势，用的时候就需要查询它们的 <em>sql</em> 语句，学习成本高；另外一段很长的 <em>sql</em> 语句很容易存在被注入的风险。</p>\n<p><strong>对象关系映射</strong>（Object Relational Mapping，简称<strong>ORM</strong>）模式是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术。</p>\n<p>该技术让我们可以使用面向对象的方法来进行数据库的操作，从而不必理会不同数据库之间 <em>sql</em> 语句的差异。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/23d52908-3a2b-45ae-a4b2-f761781d870e.png\" alt=\"ORM示意图\"></p>\n<p>如上图所示，类对应的就是数据库中的表，类中的属性对应数据表中的字段，类的实例对象就是数据库中的一条条数据了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Person(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\">    first_name = models.CharField(max_length=30)</span><br><span class=\"line\"></span><br><span class=\"line\">    last_name = models.CharField(max_length=30)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里的 <strong>Person</strong> 在数据库中就是一张表，表名可以自定义。<em>first_name</em> 和 <em>last_name</em> 就是其中的两个字段，<em>max_length</em> 就是长度约束，比如 <em>MySQL</em> 数据库中对于字符字段可以设置其最大长度。</p>\n<p>如果我们想新建一条数据，可以通过以下方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from .models import Person</span><br><span class=\"line\"></span><br><span class=\"line\">person = Person(first_name=&quot;泷谷&quot;, last_name=&quot;源治&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">person.save()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><strong>ORM</strong> 让开发人员大大减少了工作量，使得代码更加清晰，方便维护。当然每个技术有优点就有缺陷，<strong>ORM</strong> 虽然使开发效率提高了，但是缺牺牲了一些性能；另外一些复杂的 <em>sql</em> 语句并不能通过 <strong>ORM</strong> 来实现。不过对于大多开发者来说还是利大于弊。</p>\n"},{"title":"Django 使用 logging 模块的一次记录","date":"2019-11-26T18:03:20.000Z","author":"Ginta","img":"http://img.ginta.top/sky1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/sky1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 起因\n\n偶尔浏览 [Stack overflow](https://stackoverflow.com/) 看到有人提出的关于日志记录的问题，比较感兴趣就尝试了一下，问题截图如下:\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170258391.png)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170206321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170226488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n意思是他想把不同的日志等级分别记录在不同的文件中，比如 *INFO* 和 *ERROR* 分别记录到 *info.log* 以及 *error.log* 文件中，然而经过上图的尝试发现只有 *ERROR* 级别的错误记录到 *error.log* 的文件中了，而 *INFO* 级别的却没有记录，有一条解答算是比较清晰的 **In your settings you have two entries for django, and django is writing logs based on the last entry.** 意思是： **当你设置两个 *django*  的 *loggers*，那么默认会执行最后一个，也就是倒数第二章图的这部分有效\n\n```python\n\n 'django': {\n\n     'handlers': ['file.ERROR'],\n\n     'level': 'ERROR',\n\n     'propagate': True,\n\n },\n\n```\n\n解决办法也同样给出了：\n\n```python\n\n'loggers': {\n\n        'django.request': {\n\n            'handlers': ['file.DEBUG'],\n\n            'level': 'DEBUG',\n\n            'propagate': True,\n\n        },\n\n        'django': {\n\n            'handlers': ['file.INFO', 'file.ERROR'],  # <-- Here\n\n            'level': 'INFO',\n\n            'propagate': True,\n\n        }\n\n}\n\n```\n\n本着 **实践是检验真理的唯一标准** ，忍不住写了个小的demo试了一下：\n\n```python\n\n# views.py\n\nclass IndexView(View):\n\n    def get(self, request):\n\n        log.info('info log file')\n\n        log.error('error log file')\n\n\n\n        return HttpResponse('return')\n\n\n\n```\n\n```python\n\n# settings.py\n\n'handlers': {\n\n    'info.file': {\n\n        'level': 'INFO',\n\n        'class': 'logging.handlers.RotatingFileHandler',\n\n        # 日志位置,日志文件名,日志保存目录必须手动创建\n\n        'filename': os.path.join(os.path.dirname(BASE_DIR), \"logs/info.log\"),\n\n        # 日志格式:详细格式\n\n        'formatter': 'verbose'\n\n    },\n\n    'error.file': {\n\n        'level': 'ERROR',\n\n        'class': 'logging.handlers.RotatingFileHandler',\n\n        # 日志位置,日志文件名,日志保存目录必须手动创建\n\n        'filename': os.path.join(os.path.dirname(BASE_DIR), \"logs/error.log\"),\n\n        # 日志格式:详细格式\n\n        'formatter': 'verbose',\n\n    },\n\n},\n\n\n\n\n\n# 日志对象，第一次\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['info.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n    'django': {\n\n        'handlers': ['error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'ERROR',\n\n    },\n\n}\n\n```\n\n第一次的结果就是，*level* 为 *INFO* 的 *loggers* 没有记录，也就是只记录了 *error* 的日志\n\n```python\n\n# 日志对象，第二次\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'ERROR',\n\n    },\n\n    'django': {\n\n        'handlers': ['info.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n}\n\n```\n\n第二次结果相反，只有 *info.log* 文件中保存有记录。说明回答问题的这位还是很负责的！\n\n最后测试了一下正确的方式：\n\n```python\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['info.file', 'error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n}\n\n```\n\n最终结果是 *INFO* 级别以及比它更低级别的日志都记录到了 *info.log* 中，就是说 *error* 等级别也一块进去了，而 *error* 以及比他更低级别的日志会记录到 *error.log* 文件中，也就是说 *error* 以及比它低级别的日志会保存两份。这符合 **logging** 库的说明。\n\n\n\n## 后记\n\n虽然找到了问题所在，不过提问者貌似想把不同级别的分别存储到一个文件中，就是 *info.log* 只保存 *INFO* 级别的日志，而不会保留 *error* 的日志。虽然这种需求不是很常见，毕竟 *ERROR* 以下级别的日志同样重要，也许有的公司人员比较充足，可以分2个人来分别解决 *ERROR* 以及 *CRITICAL*(严重错误，比如项目根本无法启动)也说不定~","source":"_posts/Django 使用 logging 模块的一次记录.md","raw":"---\ntitle: Django 使用 logging 模块的一次记录\ndate: 2019-11-27 02:03:20\nauthor: Ginta\nimg: http://img.ginta.top/sky1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/sky1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - python\n  - Django\ncategories: Django\npublished: false\n---\n## 起因\n\n偶尔浏览 [Stack overflow](https://stackoverflow.com/) 看到有人提出的关于日志记录的问题，比较感兴趣就尝试了一下，问题截图如下:\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170258391.png)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170206321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191030170226488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n意思是他想把不同的日志等级分别记录在不同的文件中，比如 *INFO* 和 *ERROR* 分别记录到 *info.log* 以及 *error.log* 文件中，然而经过上图的尝试发现只有 *ERROR* 级别的错误记录到 *error.log* 的文件中了，而 *INFO* 级别的却没有记录，有一条解答算是比较清晰的 **In your settings you have two entries for django, and django is writing logs based on the last entry.** 意思是： **当你设置两个 *django*  的 *loggers*，那么默认会执行最后一个，也就是倒数第二章图的这部分有效\n\n```python\n\n 'django': {\n\n     'handlers': ['file.ERROR'],\n\n     'level': 'ERROR',\n\n     'propagate': True,\n\n },\n\n```\n\n解决办法也同样给出了：\n\n```python\n\n'loggers': {\n\n        'django.request': {\n\n            'handlers': ['file.DEBUG'],\n\n            'level': 'DEBUG',\n\n            'propagate': True,\n\n        },\n\n        'django': {\n\n            'handlers': ['file.INFO', 'file.ERROR'],  # <-- Here\n\n            'level': 'INFO',\n\n            'propagate': True,\n\n        }\n\n}\n\n```\n\n本着 **实践是检验真理的唯一标准** ，忍不住写了个小的demo试了一下：\n\n```python\n\n# views.py\n\nclass IndexView(View):\n\n    def get(self, request):\n\n        log.info('info log file')\n\n        log.error('error log file')\n\n\n\n        return HttpResponse('return')\n\n\n\n```\n\n```python\n\n# settings.py\n\n'handlers': {\n\n    'info.file': {\n\n        'level': 'INFO',\n\n        'class': 'logging.handlers.RotatingFileHandler',\n\n        # 日志位置,日志文件名,日志保存目录必须手动创建\n\n        'filename': os.path.join(os.path.dirname(BASE_DIR), \"logs/info.log\"),\n\n        # 日志格式:详细格式\n\n        'formatter': 'verbose'\n\n    },\n\n    'error.file': {\n\n        'level': 'ERROR',\n\n        'class': 'logging.handlers.RotatingFileHandler',\n\n        # 日志位置,日志文件名,日志保存目录必须手动创建\n\n        'filename': os.path.join(os.path.dirname(BASE_DIR), \"logs/error.log\"),\n\n        # 日志格式:详细格式\n\n        'formatter': 'verbose',\n\n    },\n\n},\n\n\n\n\n\n# 日志对象，第一次\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['info.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n    'django': {\n\n        'handlers': ['error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'ERROR',\n\n    },\n\n}\n\n```\n\n第一次的结果就是，*level* 为 *INFO* 的 *loggers* 没有记录，也就是只记录了 *error* 的日志\n\n```python\n\n# 日志对象，第二次\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'ERROR',\n\n    },\n\n    'django': {\n\n        'handlers': ['info.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n}\n\n```\n\n第二次结果相反，只有 *info.log* 文件中保存有记录。说明回答问题的这位还是很负责的！\n\n最后测试了一下正确的方式：\n\n```python\n\n'loggers': {\n\n    'django': {\n\n        'handlers': ['info.file', 'error.file'],\n\n        'propagate': False,  # 是否让日志信息继续冒泡给其他的日志处理系统\n\n        'level': 'INFO',\n\n    },\n\n}\n\n```\n\n最终结果是 *INFO* 级别以及比它更低级别的日志都记录到了 *info.log* 中，就是说 *error* 等级别也一块进去了，而 *error* 以及比他更低级别的日志会记录到 *error.log* 文件中，也就是说 *error* 以及比它低级别的日志会保存两份。这符合 **logging** 库的说明。\n\n\n\n## 后记\n\n虽然找到了问题所在，不过提问者貌似想把不同级别的分别存储到一个文件中，就是 *info.log* 只保存 *INFO* 级别的日志，而不会保留 *error* 的日志。虽然这种需求不是很常见，毕竟 *ERROR* 以下级别的日志同样重要，也许有的公司人员比较充足，可以分2个人来分别解决 *ERROR* 以及 *CRITICAL*(严重错误，比如项目根本无法启动)也说不定~","slug":"Django 使用 logging 模块的一次记录","updated":"2023-06-14T10:16:41.509Z","_id":"cl6p6180u000ntksccmh29ip0","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>偶尔浏览 <a href=\"https://stackoverflow.com/\">Stack overflow</a> 看到有人提出的关于日志记录的问题，比较感兴趣就尝试了一下，问题截图如下:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170258391.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170206321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170226488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>意思是他想把不同的日志等级分别记录在不同的文件中，比如 <em>INFO</em> 和 <em>ERROR</em> 分别记录到 <em>info.log</em> 以及 <em>error.log</em> 文件中，然而经过上图的尝试发现只有 <em>ERROR</em> 级别的错误记录到 <em>error.log</em> 的文件中了，而 <em>INFO</em> 级别的却没有记录，有一条解答算是比较清晰的 <strong>In your settings you have two entries for django, and django is writing logs based on the last entry.</strong> 意思是： **当你设置两个 <em>django</em>  的 <em>loggers</em>，那么默认会执行最后一个，也就是倒数第二章图的这部分有效</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.ERROR&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解决办法也同样给出了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;django.request&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.DEBUG&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;DEBUG&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.INFO&#x27;</span>, <span class=\"string\">&#x27;file.ERROR&#x27;</span>],  <span class=\"comment\"># &lt;-- Here</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>本着 <strong>实践是检验真理的唯一标准</strong> ，忍不住写了个小的demo试了一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># views.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">IndexView</span>(<span class=\"title class_ inherited__\">View</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&#x27;info log file&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        log.error(<span class=\"string\">&#x27;error log file&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;return&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># settings.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;handlers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;info.file&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志位置,日志文件名,日志保存目录必须手动创建</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;filename&#x27;</span>: os.path.join(os.path.dirname(BASE_DIR), <span class=\"string\">&quot;logs/info.log&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志格式:详细格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;verbose&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;error.file&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志位置,日志文件名,日志保存目录必须手动创建</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;filename&#x27;</span>: os.path.join(os.path.dirname(BASE_DIR), <span class=\"string\">&quot;logs/error.log&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志格式:详细格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;verbose&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 日志对象，第一次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>第一次的结果就是，<em>level</em> 为 <em>INFO</em> 的 <em>loggers</em> 没有记录，也就是只记录了 <em>error</em> 的日志</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 日志对象，第二次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>第二次结果相反，只有 <em>info.log</em> 文件中保存有记录。说明回答问题的这位还是很负责的！</p>\n<p>最后测试了一下正确的方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>, <span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最终结果是 <em>INFO</em> 级别以及比它更低级别的日志都记录到了 <em>info.log</em> 中，就是说 <em>error</em> 等级别也一块进去了，而 <em>error</em> 以及比他更低级别的日志会记录到 <em>error.log</em> 文件中，也就是说 <em>error</em> 以及比它低级别的日志会保存两份。这符合 <strong>logging</strong> 库的说明。</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>虽然找到了问题所在，不过提问者貌似想把不同级别的分别存储到一个文件中，就是 <em>info.log</em> 只保存 <em>INFO</em> 级别的日志，而不会保留 <em>error</em> 的日志。虽然这种需求不是很常见，毕竟 <em>ERROR</em> 以下级别的日志同样重要，也许有的公司人员比较充足，可以分2个人来分别解决 <em>ERROR</em> 以及 <em>CRITICAL</em>(严重错误，比如项目根本无法启动)也说不定~</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>偶尔浏览 <a href=\"https://stackoverflow.com/\">Stack overflow</a> 看到有人提出的关于日志记录的问题，比较感兴趣就尝试了一下，问题截图如下:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170258391.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170206321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191030170226488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>意思是他想把不同的日志等级分别记录在不同的文件中，比如 <em>INFO</em> 和 <em>ERROR</em> 分别记录到 <em>info.log</em> 以及 <em>error.log</em> 文件中，然而经过上图的尝试发现只有 <em>ERROR</em> 级别的错误记录到 <em>error.log</em> 的文件中了，而 <em>INFO</em> 级别的却没有记录，有一条解答算是比较清晰的 <strong>In your settings you have two entries for django, and django is writing logs based on the last entry.</strong> 意思是： **当你设置两个 <em>django</em>  的 <em>loggers</em>，那么默认会执行最后一个，也就是倒数第二章图的这部分有效</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.ERROR&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解决办法也同样给出了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;django.request&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.DEBUG&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;DEBUG&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;file.INFO&#x27;</span>, <span class=\"string\">&#x27;file.ERROR&#x27;</span>],  <span class=\"comment\"># &lt;-- Here</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>本着 <strong>实践是检验真理的唯一标准</strong> ，忍不住写了个小的demo试了一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># views.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">IndexView</span>(<span class=\"title class_ inherited__\">View</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&#x27;info log file&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        log.error(<span class=\"string\">&#x27;error log file&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;return&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># settings.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;handlers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;info.file&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志位置,日志文件名,日志保存目录必须手动创建</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;filename&#x27;</span>: os.path.join(os.path.dirname(BASE_DIR), <span class=\"string\">&quot;logs/info.log&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志格式:详细格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;verbose&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;error.file&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志位置,日志文件名,日志保存目录必须手动创建</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;filename&#x27;</span>: os.path.join(os.path.dirname(BASE_DIR), <span class=\"string\">&quot;logs/error.log&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 日志格式:详细格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;verbose&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 日志对象，第一次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>第一次的结果就是，<em>level</em> 为 <em>INFO</em> 的 <em>loggers</em> 没有记录，也就是只记录了 <em>error</em> 的日志</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 日志对象，第二次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;ERROR&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>第二次结果相反，只有 <em>info.log</em> 文件中保存有记录。说明回答问题的这位还是很负责的！</p>\n<p>最后测试了一下正确的方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;django&#x27;</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;info.file&#x27;</span>, <span class=\"string\">&#x27;error.file&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,  <span class=\"comment\"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最终结果是 <em>INFO</em> 级别以及比它更低级别的日志都记录到了 <em>info.log</em> 中，就是说 <em>error</em> 等级别也一块进去了，而 <em>error</em> 以及比他更低级别的日志会记录到 <em>error.log</em> 文件中，也就是说 <em>error</em> 以及比它低级别的日志会保存两份。这符合 <strong>logging</strong> 库的说明。</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>虽然找到了问题所在，不过提问者貌似想把不同级别的分别存储到一个文件中，就是 <em>info.log</em> 只保存 <em>INFO</em> 级别的日志，而不会保留 <em>error</em> 的日志。虽然这种需求不是很常见，毕竟 <em>ERROR</em> 以下级别的日志同样重要，也许有的公司人员比较充足，可以分2个人来分别解决 <em>ERROR</em> 以及 <em>CRITICAL</em>(严重错误，比如项目根本无法启动)也说不定~</p>\n"},{"title":"Django2.0 重写用户模型","date":"2019-11-26T19:00:59.000Z","author":"Ginta","img":"http://img.ginta.top/lc3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/lc3.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"前言\n\n现有的 django 自带的用户模型已经不满足我们的需求了，比如用户有头像以及性别等字段，于是乎我们需要自定义一个新的用户模型，但是有一部分字段还是可以用以前的，比如邮箱什么的，所以采用继承关系就好。\n\n\n\n步骤\n\n重写用户模型，继承 django.contrib.auth.models.AbstractUser 类\n\n```\n\n# users.py\n\nfrom django.db import models\n\nfrom django.contrib.auth.models import AbstractUser\n\n# Create your models here.\n\nclass User(AbstractUser):\n\n    mobiles = models.CharField(verbose_name=\"手机号码\", max_length=15, unique=True)\n\n    avatar = models.ImageField(upload_to='avatar', verbose_name='头像', null=True,\n\n                               blank=True, help_text=\"头像图片的大小规格：256*256，或者对应的比例的图片\")\n\n\n\n    class Meta:\n\n        db_table = 'blog_users'\n\n        verbose_name = '用户'\n\n        verbose_name_plural = verbose_name\n\n```\n\n在 settings.py 中更改用户认证模型的指向\n\n\n\n```\n\n# settings.py\n\n# ...其他代码\n\n# 配置让Django的Auth模块调用users子应用下的User模型\n\nAUTH_USER_MODEL = \"users.User\"\n\n# ...其他代码\n\n```\n\n最后迁移一下数据即可！","source":"_posts/Django2.0 重写用户模型.md","raw":"---\ntitle: Django2.0 重写用户模型\ndate: 2019-11-27 03:00:59\nauthor: Ginta\nimg: http://img.ginta.top/lc3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/lc3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: Django\npublished: false\n---\n前言\n\n现有的 django 自带的用户模型已经不满足我们的需求了，比如用户有头像以及性别等字段，于是乎我们需要自定义一个新的用户模型，但是有一部分字段还是可以用以前的，比如邮箱什么的，所以采用继承关系就好。\n\n\n\n步骤\n\n重写用户模型，继承 django.contrib.auth.models.AbstractUser 类\n\n```\n\n# users.py\n\nfrom django.db import models\n\nfrom django.contrib.auth.models import AbstractUser\n\n# Create your models here.\n\nclass User(AbstractUser):\n\n    mobiles = models.CharField(verbose_name=\"手机号码\", max_length=15, unique=True)\n\n    avatar = models.ImageField(upload_to='avatar', verbose_name='头像', null=True,\n\n                               blank=True, help_text=\"头像图片的大小规格：256*256，或者对应的比例的图片\")\n\n\n\n    class Meta:\n\n        db_table = 'blog_users'\n\n        verbose_name = '用户'\n\n        verbose_name_plural = verbose_name\n\n```\n\n在 settings.py 中更改用户认证模型的指向\n\n\n\n```\n\n# settings.py\n\n# ...其他代码\n\n# 配置让Django的Auth模块调用users子应用下的User模型\n\nAUTH_USER_MODEL = \"users.User\"\n\n# ...其他代码\n\n```\n\n最后迁移一下数据即可！","slug":"Django2.0 重写用户模型","updated":"2023-06-14T10:17:04.606Z","_id":"cl6p6180v000rtksc3hur601m","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前言</p>\n<p>现有的 django 自带的用户模型已经不满足我们的需求了，比如用户有头像以及性别等字段，于是乎我们需要自定义一个新的用户模型，但是有一部分字段还是可以用以前的，比如邮箱什么的，所以采用继承关系就好。</p>\n<p>步骤</p>\n<p>重写用户模型，继承 django.contrib.auth.models.AbstractUser 类</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># users.py</span><br><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\">from django.contrib.auth.models import AbstractUser</span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\">class User(AbstractUser):</span><br><span class=\"line\"></span><br><span class=\"line\">    mobiles = models.CharField(verbose_name=&quot;手机号码&quot;, max_length=15, unique=True)</span><br><span class=\"line\"></span><br><span class=\"line\">    avatar = models.ImageField(upload_to=&#x27;avatar&#x27;, verbose_name=&#x27;头像&#x27;, null=True,</span><br><span class=\"line\"></span><br><span class=\"line\">                               blank=True, help_text=&quot;头像图片的大小规格：256*256，或者对应的比例的图片&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\"></span><br><span class=\"line\">        db_table = &#x27;blog_users&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name = &#x27;用户&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在 settings.py 中更改用户认证模型的指向</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># settings.py</span><br><span class=\"line\"></span><br><span class=\"line\"># ...其他代码</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置让Django的Auth模块调用users子应用下的User模型</span><br><span class=\"line\"></span><br><span class=\"line\">AUTH_USER_MODEL = &quot;users.User&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># ...其他代码</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最后迁移一下数据即可！</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>前言</p>\n<p>现有的 django 自带的用户模型已经不满足我们的需求了，比如用户有头像以及性别等字段，于是乎我们需要自定义一个新的用户模型，但是有一部分字段还是可以用以前的，比如邮箱什么的，所以采用继承关系就好。</p>\n<p>步骤</p>\n<p>重写用户模型，继承 django.contrib.auth.models.AbstractUser 类</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># users.py</span><br><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\">from django.contrib.auth.models import AbstractUser</span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\">class User(AbstractUser):</span><br><span class=\"line\"></span><br><span class=\"line\">    mobiles = models.CharField(verbose_name=&quot;手机号码&quot;, max_length=15, unique=True)</span><br><span class=\"line\"></span><br><span class=\"line\">    avatar = models.ImageField(upload_to=&#x27;avatar&#x27;, verbose_name=&#x27;头像&#x27;, null=True,</span><br><span class=\"line\"></span><br><span class=\"line\">                               blank=True, help_text=&quot;头像图片的大小规格：256*256，或者对应的比例的图片&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\"></span><br><span class=\"line\">        db_table = &#x27;blog_users&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name = &#x27;用户&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在 settings.py 中更改用户认证模型的指向</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># settings.py</span><br><span class=\"line\"></span><br><span class=\"line\"># ...其他代码</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置让Django的Auth模块调用users子应用下的User模型</span><br><span class=\"line\"></span><br><span class=\"line\">AUTH_USER_MODEL = &quot;users.User&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># ...其他代码</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最后迁移一下数据即可！</p>\n"},{"title":"Docker 指令","date":"2019-12-19T20:24:55.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"1. docker images 显示所有镜像\r\n2. docker build -t image_name .  (点就是从当前路径查找Dockerfile)\r\n3. docker container ls 列举当前运行的容器\r\n4. docker run -it image_name 交互式运行image\r\n5. docker rm/docker container rm container_id 删除container\r\n6. docker rmi/docker image rm image_id 删除image\r\n7. docker container -aq 列出所有container_id (-q代表只列出id)\r\n8. docker rm $(docker container -aq)    ($，删除所有列表中的元素)\r\n9. docker rm $(docker container ls -f \"status=exited\" -q) 删除退出的容器\r\n10. docker commit container_name new_container_name\r\n    \r\n    `docker commit frozty_jeew caesar123/centos-vim`\r\n11. Dockerfile 用来build一个一模一样的image\r\n\r\n\r\n\r\n### Dokerfile\r\n- FROM strach # 制作base image\r\n- FROM centos # 使用base image\r\n- FROM ubuntu:14.04\r\n- LABEL maintainer = \"775650117@qq.com\" (METADATA:注释)\r\n- LABEL version = \"1.0\"\r\n- RUN yum update && yun install -y vim \\\r\n  python-dev\r\n- 每次运行RUN都会生成新的image，所以尽量合并成一行\r\n- WORKDIR /root # 设定工作目录\r\n\r\n```\r\nWORKDIR /test # 如果没有会自动创建test目录     \r\nWORKDIR demo\r\nRUN pwd # 输出结果应该是/test/demo\r\n```\r\n- 用WORKDIR, 不要使用 RUN cd,尽量使用绝对目录\r\n- ADD(COPY)\r\n- ADD hello /\r\n- ADD test.tar.gz / # 添加到根目录并解压\r\n```\r\nWORKDIR /root\r\nADD hello test/ # /root/test/hello\r\n```\r\n```\r\nWORKDIR /root\r\nCOPY hello test/ # /root/test/hello\r\n```\r\n- 大部分情况，COPY优于ADD，ADD除了COPY还有解压功能\r\n- 添加远程文件/目录请使用curl或者wget\r\n- ENV MYSQL_VERSION 5.6 # 设置常量\r\n```\r\nENV MYSQL_VERSION 5.6 # 设置常量\r\nRUN apt-get install -y mysql-server= \"${MYSQL_VERSION}\" \\\r\n   && rm -rf /var/lib/apt/lists/* 引用常量\r\n```\r\n- 尽量使用ENV增加可维护性","source":"_posts/Docker 指令.md","raw":"---\ntitle: Docker 指令\ndate: 2019-12-20 04:24:55\nauthor: Ginta\nimg: http://img.ginta.top/fantasy2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: docker\n---\n1. docker images 显示所有镜像\r\n2. docker build -t image_name .  (点就是从当前路径查找Dockerfile)\r\n3. docker container ls 列举当前运行的容器\r\n4. docker run -it image_name 交互式运行image\r\n5. docker rm/docker container rm container_id 删除container\r\n6. docker rmi/docker image rm image_id 删除image\r\n7. docker container -aq 列出所有container_id (-q代表只列出id)\r\n8. docker rm $(docker container -aq)    ($，删除所有列表中的元素)\r\n9. docker rm $(docker container ls -f \"status=exited\" -q) 删除退出的容器\r\n10. docker commit container_name new_container_name\r\n    \r\n    `docker commit frozty_jeew caesar123/centos-vim`\r\n11. Dockerfile 用来build一个一模一样的image\r\n\r\n\r\n\r\n### Dokerfile\r\n- FROM strach # 制作base image\r\n- FROM centos # 使用base image\r\n- FROM ubuntu:14.04\r\n- LABEL maintainer = \"775650117@qq.com\" (METADATA:注释)\r\n- LABEL version = \"1.0\"\r\n- RUN yum update && yun install -y vim \\\r\n  python-dev\r\n- 每次运行RUN都会生成新的image，所以尽量合并成一行\r\n- WORKDIR /root # 设定工作目录\r\n\r\n```\r\nWORKDIR /test # 如果没有会自动创建test目录     \r\nWORKDIR demo\r\nRUN pwd # 输出结果应该是/test/demo\r\n```\r\n- 用WORKDIR, 不要使用 RUN cd,尽量使用绝对目录\r\n- ADD(COPY)\r\n- ADD hello /\r\n- ADD test.tar.gz / # 添加到根目录并解压\r\n```\r\nWORKDIR /root\r\nADD hello test/ # /root/test/hello\r\n```\r\n```\r\nWORKDIR /root\r\nCOPY hello test/ # /root/test/hello\r\n```\r\n- 大部分情况，COPY优于ADD，ADD除了COPY还有解压功能\r\n- 添加远程文件/目录请使用curl或者wget\r\n- ENV MYSQL_VERSION 5.6 # 设置常量\r\n```\r\nENV MYSQL_VERSION 5.6 # 设置常量\r\nRUN apt-get install -y mysql-server= \"${MYSQL_VERSION}\" \\\r\n   && rm -rf /var/lib/apt/lists/* 引用常量\r\n```\r\n- 尽量使用ENV增加可维护性","slug":"Docker 指令","published":1,"updated":"2022-08-11T12:49:48.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180v000utkscdl4j158s","content":"<ol>\n<li><p>docker images 显示所有镜像</p>\n</li>\n<li><p>docker build -t image_name .  (点就是从当前路径查找Dockerfile)</p>\n</li>\n<li><p>docker container ls 列举当前运行的容器</p>\n</li>\n<li><p>docker run -it image_name 交互式运行image</p>\n</li>\n<li><p>docker rm&#x2F;docker container rm container_id 删除container</p>\n</li>\n<li><p>docker rmi&#x2F;docker image rm image_id 删除image</p>\n</li>\n<li><p>docker container -aq 列出所有container_id (-q代表只列出id)</p>\n</li>\n<li><p>docker rm $(docker container -aq)    ($，删除所有列表中的元素)</p>\n</li>\n<li><p>docker rm $(docker container ls -f “status&#x3D;exited” -q) 删除退出的容器</p>\n</li>\n<li><p>docker commit container_name new_container_name</p>\n<p><code>docker commit frozty_jeew caesar123/centos-vim</code></p>\n</li>\n<li><p>Dockerfile 用来build一个一模一样的image</p>\n</li>\n</ol>\n<h3 id=\"Dokerfile\"><a href=\"#Dokerfile\" class=\"headerlink\" title=\"Dokerfile\"></a>Dokerfile</h3><ul>\n<li>FROM strach # 制作base image</li>\n<li>FROM centos # 使用base image</li>\n<li>FROM ubuntu:14.04</li>\n<li>LABEL maintainer &#x3D; “<a href=\"mailto:&#x37;&#55;&#53;&#x36;&#53;&#x30;&#x31;&#x31;&#55;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;\">&#x37;&#55;&#53;&#x36;&#53;&#x30;&#x31;&#x31;&#55;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;</a>“ (METADATA:注释)</li>\n<li>LABEL version &#x3D; “1.0”</li>\n<li>RUN yum update &amp;&amp; yun install -y vim <br>python-dev</li>\n<li>每次运行RUN都会生成新的image，所以尽量合并成一行</li>\n<li>WORKDIR &#x2F;root # 设定工作目录</li>\n</ul>\n<pre><code>WORKDIR /test # 如果没有会自动创建test目录     \nWORKDIR demo\nRUN pwd # 输出结果应该是/test/demo\n</code></pre>\n<ul>\n<li>用WORKDIR, 不要使用 RUN cd,尽量使用绝对目录</li>\n<li>ADD(COPY)</li>\n<li>ADD hello &#x2F;</li>\n<li>ADD test.tar.gz &#x2F; # 添加到根目录并解压</li>\n</ul>\n<pre><code>WORKDIR /root\nADD hello test/ # /root/test/hello\n</code></pre>\n<pre><code>WORKDIR /root\nCOPY hello test/ # /root/test/hello\n</code></pre>\n<ul>\n<li>大部分情况，COPY优于ADD，ADD除了COPY还有解压功能</li>\n<li>添加远程文件&#x2F;目录请使用curl或者wget</li>\n<li>ENV MYSQL_VERSION 5.6 # 设置常量</li>\n</ul>\n<pre><code>ENV MYSQL_VERSION 5.6 # 设置常量\nRUN apt-get install -y mysql-server= &quot;$&#123;MYSQL_VERSION&#125;&quot; \\\n   &amp;&amp; rm -rf /var/lib/apt/lists/* 引用常量\n</code></pre>\n<ul>\n<li>尽量使用ENV增加可维护性</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<ol>\n<li><p>docker images 显示所有镜像</p>\n</li>\n<li><p>docker build -t image_name .  (点就是从当前路径查找Dockerfile)</p>\n</li>\n<li><p>docker container ls 列举当前运行的容器</p>\n</li>\n<li><p>docker run -it image_name 交互式运行image</p>\n</li>\n<li><p>docker rm&#x2F;docker container rm container_id 删除container</p>\n</li>\n<li><p>docker rmi&#x2F;docker image rm image_id 删除image</p>\n</li>\n<li><p>docker container -aq 列出所有container_id (-q代表只列出id)</p>\n</li>\n<li><p>docker rm $(docker container -aq)    ($，删除所有列表中的元素)</p>\n</li>\n<li><p>docker rm $(docker container ls -f “status&#x3D;exited” -q) 删除退出的容器</p>\n</li>\n<li><p>docker commit container_name new_container_name</p>\n<p><code>docker commit frozty_jeew caesar123/centos-vim</code></p>\n</li>\n<li><p>Dockerfile 用来build一个一模一样的image</p>\n</li>\n</ol>\n<h3 id=\"Dokerfile\"><a href=\"#Dokerfile\" class=\"headerlink\" title=\"Dokerfile\"></a>Dokerfile</h3><ul>\n<li>FROM strach # 制作base image</li>\n<li>FROM centos # 使用base image</li>\n<li>FROM ubuntu:14.04</li>\n<li>LABEL maintainer &#x3D; “<a href=\"mailto:&#x37;&#55;&#53;&#x36;&#53;&#x30;&#x31;&#x31;&#55;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;\">&#x37;&#55;&#53;&#x36;&#53;&#x30;&#x31;&#x31;&#55;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;</a>“ (METADATA:注释)</li>\n<li>LABEL version &#x3D; “1.0”</li>\n<li>RUN yum update &amp;&amp; yun install -y vim <br>python-dev</li>\n<li>每次运行RUN都会生成新的image，所以尽量合并成一行</li>\n<li>WORKDIR &#x2F;root # 设定工作目录</li>\n</ul>\n<pre><code>WORKDIR /test # 如果没有会自动创建test目录     \nWORKDIR demo\nRUN pwd # 输出结果应该是/test/demo\n</code></pre>\n<ul>\n<li>用WORKDIR, 不要使用 RUN cd,尽量使用绝对目录</li>\n<li>ADD(COPY)</li>\n<li>ADD hello &#x2F;</li>\n<li>ADD test.tar.gz &#x2F; # 添加到根目录并解压</li>\n</ul>\n<pre><code>WORKDIR /root\nADD hello test/ # /root/test/hello\n</code></pre>\n<pre><code>WORKDIR /root\nCOPY hello test/ # /root/test/hello\n</code></pre>\n<ul>\n<li>大部分情况，COPY优于ADD，ADD除了COPY还有解压功能</li>\n<li>添加远程文件&#x2F;目录请使用curl或者wget</li>\n<li>ENV MYSQL_VERSION 5.6 # 设置常量</li>\n</ul>\n<pre><code>ENV MYSQL_VERSION 5.6 # 设置常量\nRUN apt-get install -y mysql-server= &quot;$&#123;MYSQL_VERSION&#125;&quot; \\\n   &amp;&amp; rm -rf /var/lib/apt/lists/* 引用常量\n</code></pre>\n<ul>\n<li>尽量使用ENV增加可维护性</li>\n</ul>\n"},{"title":"Docker 指令2","date":"2019-12-19T20:26:42.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"- RUN 执行命令并创建新的Image layer\r\n- CMD 设置容器启动后默认执行的命令和参数\r\n- ENTRYPOINT 设置容器启动时执行的命令\r\n\r\n+ shell 格式\r\n```\r\nRUN apt-get install -y vim \r\nCMD echo \"hello docker\"\r\nENTRYPOINT echo \"hello docker\"\r\n```\r\n\r\n+ Exec格式\r\n```\r\nRUN [\"apt-get\", \"install\", \"-y\", \"vim\"]\r\nCMD [\"/bin/echo\", \"hello docker\"]\r\nENTRYPOINT [\"/bin/echo\", \"hello docker\"]\r\n```","source":"_posts/Docker 指令2.md","raw":"---\ntitle: Docker 指令2\ndate: 2019-12-20 04:26:42\nauthor: Ginta\nimg: http://img.ginta.top/fantasy1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: docker\n---\n- RUN 执行命令并创建新的Image layer\r\n- CMD 设置容器启动后默认执行的命令和参数\r\n- ENTRYPOINT 设置容器启动时执行的命令\r\n\r\n+ shell 格式\r\n```\r\nRUN apt-get install -y vim \r\nCMD echo \"hello docker\"\r\nENTRYPOINT echo \"hello docker\"\r\n```\r\n\r\n+ Exec格式\r\n```\r\nRUN [\"apt-get\", \"install\", \"-y\", \"vim\"]\r\nCMD [\"/bin/echo\", \"hello docker\"]\r\nENTRYPOINT [\"/bin/echo\", \"hello docker\"]\r\n```","slug":"Docker 指令2","published":1,"updated":"2022-08-11T12:49:48.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180v000wtksc0qtectb5","content":"<ul>\n<li>RUN 执行命令并创建新的Image layer</li>\n<li>CMD 设置容器启动后默认执行的命令和参数</li>\n<li>ENTRYPOINT 设置容器启动时执行的命令</li>\n</ul>\n<ul>\n<li>shell 格式</li>\n</ul>\n<pre><code>RUN apt-get install -y vim \nCMD echo &quot;hello docker&quot;\nENTRYPOINT echo &quot;hello docker&quot;\n</code></pre>\n<ul>\n<li>Exec格式</li>\n</ul>\n<pre><code>RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;vim&quot;]\nCMD [&quot;/bin/echo&quot;, &quot;hello docker&quot;]\nENTRYPOINT [&quot;/bin/echo&quot;, &quot;hello docker&quot;]\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<ul>\n<li>RUN 执行命令并创建新的Image layer</li>\n<li>CMD 设置容器启动后默认执行的命令和参数</li>\n<li>ENTRYPOINT 设置容器启动时执行的命令</li>\n</ul>\n<ul>\n<li>shell 格式</li>\n</ul>\n<pre><code>RUN apt-get install -y vim \nCMD echo &quot;hello docker&quot;\nENTRYPOINT echo &quot;hello docker&quot;\n</code></pre>\n<ul>\n<li>Exec格式</li>\n</ul>\n<pre><code>RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;vim&quot;]\nCMD [&quot;/bin/echo&quot;, &quot;hello docker&quot;]\nENTRYPOINT [&quot;/bin/echo&quot;, &quot;hello docker&quot;]\n</code></pre>\n"},{"title":"Elasticsearch基本查询","date":"2019-12-28T06:26:20.000Z","author":"Ginta","img":"http://img.ginta.top/qinshi2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/qinshi2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 准备数据\r\n```\r\n# 添加映射  \r\nPUT lagou\r\n{\r\n  \"mappings\": {\r\n    \"job\":{\r\n      \"properties\": {\r\n        \"title\":{\r\n          \"store\": true,\r\n          \"type\": \"text\",\r\n          \"analyzer\": \"ik_max_word\"\r\n        },\r\n        \"company_name\":{\r\n          \"store\": true,\r\n          \"type\": \"keyword\"\r\n        },\r\n        \"desc\":{\r\n          \"type\": \"text\"\r\n        },\r\n        \"comments\":{\r\n          \"type\": \"integer\"\r\n        },\r\n        \"add_time\":{\r\n          \"type\": \"date\",\r\n          \"format\": \"yyyy-MM-dd\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python django 开发工程师\",\r\n    \"company_name\":\"美团科技有限公司\",\r\n    \"desc\":\"对django的概念熟悉，熟悉python基础知识\",\r\n    \"comments\":20,\r\n    \"add_time\":\"2019-5-30\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python scrapy redis分布式爬虫基本\",\r\n    \"company_name\":\"百度科技有限公司\",\r\n    \"desc\":\"scrapy的概念熟悉，熟悉redis基础知识\",\r\n    \"comments\":5,\r\n    \"add_time\":\"2019-5-1\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"elasticsearch打造搜索引擎\",\r\n    \"company_name\":\"阿里巴巴科技有限公司\",\r\n    \"desc\":\"熟悉数据结构算法，熟悉python基础开发\",\r\n    \"comments\":60,\r\n    \"add_time\":\"2019-4-15\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python打造推荐引擎系统\",\r\n    \"company_name\":\"阿里巴巴科技有限公司\",\r\n    \"desc\":\"熟悉推荐引擎的原理以及算法，掌握C语言\",\r\n    \"comments\":60,\r\n    \"add_time\":\"2019-1-22\"\r\n}\r\n\r\n```\r\n\r\n## 查询\r\n### 基本查询\r\n1. match(会对输入进行分词)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"爬取\"\r\n    }\r\n  }\r\n}\r\n\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"爬取\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n2. term(不会分词)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"term\": {\r\n      \"title\": \"python爬虫\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n3. terms(满足任何一个)\r\n```\r\n# terms查询\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"terms\": {\r\n      \"title\": [\"工程师\", \"django\", \"系统\"]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n4. query查询(控制查询的返回数量)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"python\"\r\n    }\r\n  },\r\n  \"from\":1,\r\n  \"size\":2\r\n}\r\n```\r\n\r\n5. match_all查询\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  }\r\n}\r\n```\r\n\r\n6. multi_match查询\r\n```\r\n# 比如可以指定多个字段\r\n# 比如查询title和desc这两个字段里面包含python的关键词文档\r\n# 可以设置权重\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"multi_match\": {\r\n      \"query\": \"python\",\r\n      \"fields\": [\"title^3\", \"desc\"]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n7. stored_fields指定返回的字段(mappings设置了store的)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"stored_fields\": [\"title\"],\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"python\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n8. sort(排序返回 asc,desc)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  },\r\n  \"sort\": [\r\n    {\r\n      \"comments\": {\r\n        \"order\": \"desc\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n9. range(范围查询)\r\nboost: 权重\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"comments\": {\r\n        \"gte\": 10,\r\n        \"lte\": 20,\r\n        \"boost\": 2.0\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"add_time\": {\r\n        \"gt\": \"2019-4-1\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\n10. match_phrase(短语查询，自动分词，满足所有则返回)\r\nslop: 两个词之前的距离\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_phrase\": {\r\n      \"title\": {\r\n        \"query\": \"python系统\",\r\n        \"slop\": 6\r\n      }\r\n    }\r\n  }\r\n}\r\n```","source":"_posts/Elasticsearch基本查询.md","raw":"---\ntitle: Elasticsearch基本查询\ndate: 2019-12-28 14:26:20\nauthor: Ginta\nimg: http://img.ginta.top/qinshi2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/qinshi2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 数据库\n---\n### 准备数据\r\n```\r\n# 添加映射  \r\nPUT lagou\r\n{\r\n  \"mappings\": {\r\n    \"job\":{\r\n      \"properties\": {\r\n        \"title\":{\r\n          \"store\": true,\r\n          \"type\": \"text\",\r\n          \"analyzer\": \"ik_max_word\"\r\n        },\r\n        \"company_name\":{\r\n          \"store\": true,\r\n          \"type\": \"keyword\"\r\n        },\r\n        \"desc\":{\r\n          \"type\": \"text\"\r\n        },\r\n        \"comments\":{\r\n          \"type\": \"integer\"\r\n        },\r\n        \"add_time\":{\r\n          \"type\": \"date\",\r\n          \"format\": \"yyyy-MM-dd\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python django 开发工程师\",\r\n    \"company_name\":\"美团科技有限公司\",\r\n    \"desc\":\"对django的概念熟悉，熟悉python基础知识\",\r\n    \"comments\":20,\r\n    \"add_time\":\"2019-5-30\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python scrapy redis分布式爬虫基本\",\r\n    \"company_name\":\"百度科技有限公司\",\r\n    \"desc\":\"scrapy的概念熟悉，熟悉redis基础知识\",\r\n    \"comments\":5,\r\n    \"add_time\":\"2019-5-1\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"elasticsearch打造搜索引擎\",\r\n    \"company_name\":\"阿里巴巴科技有限公司\",\r\n    \"desc\":\"熟悉数据结构算法，熟悉python基础开发\",\r\n    \"comments\":60,\r\n    \"add_time\":\"2019-4-15\"\r\n}\r\n\r\nPOST lagou/job/\r\n{\r\n    \"title\":\"python打造推荐引擎系统\",\r\n    \"company_name\":\"阿里巴巴科技有限公司\",\r\n    \"desc\":\"熟悉推荐引擎的原理以及算法，掌握C语言\",\r\n    \"comments\":60,\r\n    \"add_time\":\"2019-1-22\"\r\n}\r\n\r\n```\r\n\r\n## 查询\r\n### 基本查询\r\n1. match(会对输入进行分词)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"爬取\"\r\n    }\r\n  }\r\n}\r\n\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"爬取\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n2. term(不会分词)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"term\": {\r\n      \"title\": \"python爬虫\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n3. terms(满足任何一个)\r\n```\r\n# terms查询\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"terms\": {\r\n      \"title\": [\"工程师\", \"django\", \"系统\"]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n4. query查询(控制查询的返回数量)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"python\"\r\n    }\r\n  },\r\n  \"from\":1,\r\n  \"size\":2\r\n}\r\n```\r\n\r\n5. match_all查询\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  }\r\n}\r\n```\r\n\r\n6. multi_match查询\r\n```\r\n# 比如可以指定多个字段\r\n# 比如查询title和desc这两个字段里面包含python的关键词文档\r\n# 可以设置权重\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"multi_match\": {\r\n      \"query\": \"python\",\r\n      \"fields\": [\"title^3\", \"desc\"]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n7. stored_fields指定返回的字段(mappings设置了store的)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"stored_fields\": [\"title\"],\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": \"python\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n8. sort(排序返回 asc,desc)\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  },\r\n  \"sort\": [\r\n    {\r\n      \"comments\": {\r\n        \"order\": \"desc\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n9. range(范围查询)\r\nboost: 权重\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"comments\": {\r\n        \"gte\": 10,\r\n        \"lte\": 20,\r\n        \"boost\": 2.0\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"add_time\": {\r\n        \"gt\": \"2019-4-1\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\n10. match_phrase(短语查询，自动分词，满足所有则返回)\r\nslop: 两个词之前的距离\r\n```\r\nGET lagou/_search\r\n{\r\n  \"query\": {\r\n    \"match_phrase\": {\r\n      \"title\": {\r\n        \"query\": \"python系统\",\r\n        \"slop\": 6\r\n      }\r\n    }\r\n  }\r\n}\r\n```","slug":"Elasticsearch基本查询","published":1,"updated":"2022-08-11T12:49:48.141Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180w0010tksc3uh94tom","content":"<h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><pre><code># 添加映射  \nPUT lagou\n&#123;\n  &quot;mappings&quot;: &#123;\n    &quot;job&quot;:&#123;\n      &quot;properties&quot;: &#123;\n        &quot;title&quot;:&#123;\n          &quot;store&quot;: true,\n          &quot;type&quot;: &quot;text&quot;,\n          &quot;analyzer&quot;: &quot;ik_max_word&quot;\n        &#125;,\n        &quot;company_name&quot;:&#123;\n          &quot;store&quot;: true,\n          &quot;type&quot;: &quot;keyword&quot;\n        &#125;,\n        &quot;desc&quot;:&#123;\n          &quot;type&quot;: &quot;text&quot;\n        &#125;,\n        &quot;comments&quot;:&#123;\n          &quot;type&quot;: &quot;integer&quot;\n        &#125;,\n        &quot;add_time&quot;:&#123;\n          &quot;type&quot;: &quot;date&quot;,\n          &quot;format&quot;: &quot;yyyy-MM-dd&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python django 开发工程师&quot;,\n    &quot;company_name&quot;:&quot;美团科技有限公司&quot;,\n    &quot;desc&quot;:&quot;对django的概念熟悉，熟悉python基础知识&quot;,\n    &quot;comments&quot;:20,\n    &quot;add_time&quot;:&quot;2019-5-30&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python scrapy redis分布式爬虫基本&quot;,\n    &quot;company_name&quot;:&quot;百度科技有限公司&quot;,\n    &quot;desc&quot;:&quot;scrapy的概念熟悉，熟悉redis基础知识&quot;,\n    &quot;comments&quot;:5,\n    &quot;add_time&quot;:&quot;2019-5-1&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;elasticsearch打造搜索引擎&quot;,\n    &quot;company_name&quot;:&quot;阿里巴巴科技有限公司&quot;,\n    &quot;desc&quot;:&quot;熟悉数据结构算法，熟悉python基础开发&quot;,\n    &quot;comments&quot;:60,\n    &quot;add_time&quot;:&quot;2019-4-15&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python打造推荐引擎系统&quot;,\n    &quot;company_name&quot;:&quot;阿里巴巴科技有限公司&quot;,\n    &quot;desc&quot;:&quot;熟悉推荐引擎的原理以及算法，掌握C语言&quot;,\n    &quot;comments&quot;:60,\n    &quot;add_time&quot;:&quot;2019-1-22&quot;\n&#125;\n</code></pre>\n<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"基本查询\"><a href=\"#基本查询\" class=\"headerlink\" title=\"基本查询\"></a>基本查询</h3><ol>\n<li>match(会对输入进行分词)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;爬取&quot;\n    &#125;\n  &#125;\n&#125;\n\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;爬取&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>term(不会分词)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;term&quot;: &#123;\n      &quot;title&quot;: &quot;python爬虫&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"3\">\n<li>terms(满足任何一个)</li>\n</ol>\n<pre><code># terms查询\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;terms&quot;: &#123;\n      &quot;title&quot;: [&quot;工程师&quot;, &quot;django&quot;, &quot;系统&quot;]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"4\">\n<li>query查询(控制查询的返回数量)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;python&quot;\n    &#125;\n  &#125;,\n  &quot;from&quot;:1,\n  &quot;size&quot;:2\n&#125;\n</code></pre>\n<ol start=\"5\">\n<li>match_all查询</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_all&quot;: &#123;&#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"6\">\n<li>multi_match查询</li>\n</ol>\n<pre><code># 比如可以指定多个字段\n# 比如查询title和desc这两个字段里面包含python的关键词文档\n# 可以设置权重\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;multi_match&quot;: &#123;\n      &quot;query&quot;: &quot;python&quot;,\n      &quot;fields&quot;: [&quot;title^3&quot;, &quot;desc&quot;]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"7\">\n<li>stored_fields指定返回的字段(mappings设置了store的)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;stored_fields&quot;: [&quot;title&quot;],\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;python&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"8\">\n<li>sort(排序返回 asc,desc)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_all&quot;: &#123;&#125;\n  &#125;,\n  &quot;sort&quot;: [\n    &#123;\n      &quot;comments&quot;: &#123;\n        &quot;order&quot;: &quot;desc&quot;\n      &#125;\n    &#125;\n  ]\n&#125;\n</code></pre>\n<ol start=\"9\">\n<li>range(范围查询)<br>boost: 权重</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;range&quot;: &#123;\n      &quot;comments&quot;: &#123;\n        &quot;gte&quot;: 10,\n        &quot;lte&quot;: 20,\n        &quot;boost&quot;: 2.0\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;range&quot;: &#123;\n      &quot;add_time&quot;: &#123;\n        &quot;gt&quot;: &quot;2019-4-1&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"10\">\n<li>match_phrase(短语查询，自动分词，满足所有则返回)<br>slop: 两个词之前的距离</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_phrase&quot;: &#123;\n      &quot;title&quot;: &#123;\n        &quot;query&quot;: &quot;python系统&quot;,\n        &quot;slop&quot;: 6\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><pre><code># 添加映射  \nPUT lagou\n&#123;\n  &quot;mappings&quot;: &#123;\n    &quot;job&quot;:&#123;\n      &quot;properties&quot;: &#123;\n        &quot;title&quot;:&#123;\n          &quot;store&quot;: true,\n          &quot;type&quot;: &quot;text&quot;,\n          &quot;analyzer&quot;: &quot;ik_max_word&quot;\n        &#125;,\n        &quot;company_name&quot;:&#123;\n          &quot;store&quot;: true,\n          &quot;type&quot;: &quot;keyword&quot;\n        &#125;,\n        &quot;desc&quot;:&#123;\n          &quot;type&quot;: &quot;text&quot;\n        &#125;,\n        &quot;comments&quot;:&#123;\n          &quot;type&quot;: &quot;integer&quot;\n        &#125;,\n        &quot;add_time&quot;:&#123;\n          &quot;type&quot;: &quot;date&quot;,\n          &quot;format&quot;: &quot;yyyy-MM-dd&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python django 开发工程师&quot;,\n    &quot;company_name&quot;:&quot;美团科技有限公司&quot;,\n    &quot;desc&quot;:&quot;对django的概念熟悉，熟悉python基础知识&quot;,\n    &quot;comments&quot;:20,\n    &quot;add_time&quot;:&quot;2019-5-30&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python scrapy redis分布式爬虫基本&quot;,\n    &quot;company_name&quot;:&quot;百度科技有限公司&quot;,\n    &quot;desc&quot;:&quot;scrapy的概念熟悉，熟悉redis基础知识&quot;,\n    &quot;comments&quot;:5,\n    &quot;add_time&quot;:&quot;2019-5-1&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;elasticsearch打造搜索引擎&quot;,\n    &quot;company_name&quot;:&quot;阿里巴巴科技有限公司&quot;,\n    &quot;desc&quot;:&quot;熟悉数据结构算法，熟悉python基础开发&quot;,\n    &quot;comments&quot;:60,\n    &quot;add_time&quot;:&quot;2019-4-15&quot;\n&#125;\n\nPOST lagou/job/\n&#123;\n    &quot;title&quot;:&quot;python打造推荐引擎系统&quot;,\n    &quot;company_name&quot;:&quot;阿里巴巴科技有限公司&quot;,\n    &quot;desc&quot;:&quot;熟悉推荐引擎的原理以及算法，掌握C语言&quot;,\n    &quot;comments&quot;:60,\n    &quot;add_time&quot;:&quot;2019-1-22&quot;\n&#125;\n</code></pre>\n<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"基本查询\"><a href=\"#基本查询\" class=\"headerlink\" title=\"基本查询\"></a>基本查询</h3><ol>\n<li>match(会对输入进行分词)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;爬取&quot;\n    &#125;\n  &#125;\n&#125;\n\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;爬取&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>term(不会分词)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;term&quot;: &#123;\n      &quot;title&quot;: &quot;python爬虫&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"3\">\n<li>terms(满足任何一个)</li>\n</ol>\n<pre><code># terms查询\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;terms&quot;: &#123;\n      &quot;title&quot;: [&quot;工程师&quot;, &quot;django&quot;, &quot;系统&quot;]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"4\">\n<li>query查询(控制查询的返回数量)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;python&quot;\n    &#125;\n  &#125;,\n  &quot;from&quot;:1,\n  &quot;size&quot;:2\n&#125;\n</code></pre>\n<ol start=\"5\">\n<li>match_all查询</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_all&quot;: &#123;&#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"6\">\n<li>multi_match查询</li>\n</ol>\n<pre><code># 比如可以指定多个字段\n# 比如查询title和desc这两个字段里面包含python的关键词文档\n# 可以设置权重\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;multi_match&quot;: &#123;\n      &quot;query&quot;: &quot;python&quot;,\n      &quot;fields&quot;: [&quot;title^3&quot;, &quot;desc&quot;]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"7\">\n<li>stored_fields指定返回的字段(mappings设置了store的)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;stored_fields&quot;: [&quot;title&quot;],\n  &quot;query&quot;: &#123;\n    &quot;match&quot;: &#123;\n      &quot;title&quot;: &quot;python&quot;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"8\">\n<li>sort(排序返回 asc,desc)</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_all&quot;: &#123;&#125;\n  &#125;,\n  &quot;sort&quot;: [\n    &#123;\n      &quot;comments&quot;: &#123;\n        &quot;order&quot;: &quot;desc&quot;\n      &#125;\n    &#125;\n  ]\n&#125;\n</code></pre>\n<ol start=\"9\">\n<li>range(范围查询)<br>boost: 权重</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;range&quot;: &#123;\n      &quot;comments&quot;: &#123;\n        &quot;gte&quot;: 10,\n        &quot;lte&quot;: 20,\n        &quot;boost&quot;: 2.0\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nGET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;range&quot;: &#123;\n      &quot;add_time&quot;: &#123;\n        &quot;gt&quot;: &quot;2019-4-1&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<ol start=\"10\">\n<li>match_phrase(短语查询，自动分词，满足所有则返回)<br>slop: 两个词之前的距离</li>\n</ol>\n<pre><code>GET lagou/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;match_phrase&quot;: &#123;\n      &quot;title&quot;: &#123;\n        &quot;query&quot;: &quot;python系统&quot;,\n        &quot;slop&quot;: 6\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n"},{"title":"Elasticsearch操作","date":"2019-12-28T06:25:47.000Z","author":"Ginta","img":"http://img.ginta.top/chaoshou2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/chaoshou2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"```\n\n# es的文档，索引的 CRUD 操作\n\n# 索引初始化操作\n\n# 指定分片和副本的数量\n\n# shards一旦设置不能修改（副本数量）\n\n\n\n# 设置索引  \n\nPUT lagou\n\n{\n\n  \"settings\": {\n\n    \"index\":{\n\n      \"number_of_shards\": 5,\n\n      \"number_of_replicas\": 2\n\n    }\n\n  }  \n\n}\n\n\n\nGET lagou/_settings\n\nGET _all/_settings\n\nGET .kibana,lagou/_settings\n\nGET lagou/job/1/_source\n\n\n\n# 修改settings\n\nPUT lagou/_settings\n\n{\n\n  \"number_of_shards\": 2\n\n}\n\n\n\n# 保存文档  \n\nPUT lagou/job/2\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": 15000,\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 15\n\n}\n\n\n\nPOST lagou/job/1\n\n{\n\n    \"title\": \"python django 开发工程师\",\n\n    \"salary_min\": 3000,\n\n    \"city\": \"天猫\",\n\n    \"company\": {\n\n        \"name\": \"美团科技\",\n\n        \"company_addr\": \"北京市软件园A区\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 2\n\n}\n\n\n\n\n\nGET lagou/job/2?_source=city,company.name\n\n\n\n# 修改文章\n\nPUT lagou/job/2\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": 15000,\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 23\n\n}\n\n\n\n# 修改文章2\n\nPOST lagou/job/2/_update\n\n{\n\n  \"doc\":{\n\n    \"comments\": 21\n\n  }\n\n}\n\n\n\n\n\nDELETE lagou/job/1\n\nDELETE lagou\n\n\n\n# 批量获取\n\nGET _mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_index\":\"lagou\",\n\n      \"_type\": \"job2\",\n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_index\":\"lagou\",\n\n      \"_type\": \"job\",\n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\n# index一样\n\nGET lagou/_mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_type\": \"job2\",\n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_type\": \"job\",\n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\n\n\n# index,type一样\n\n\n\nGET lagou/job2/_mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\nGET lagou/job2/_mget\n\n{\n\n  \"ids\": [1,2]\n\n}\n\n\n\n\n\n```\n\n### bulk批量操作\n\nbulk操作不能分行，json必需一行写完\n\n```\n\n{\"index\": {\"_index\": \"zhilian\", \"_type\": \"job\", \"_id\": \"1\"}}\n\n{\"title\": \"python分布式爬虫开发\",\"salary_min\": 15000,\"city\": \"北京\",\"company\": {\"name\": \"百度\",\"company_addr\": \"北京市软件园\"},\"publish_data\": \"2019-5-30\",\"comments\": 23}\n\n{\"index\": {\"_index\": \"zhilian\", \"_type\": \"job\", \"_id\": \"2\"}}\n\n{\"title\": \"爬虫开发\",\"salary_min\": 1500,\"city\": \"太原\",\"company\": {\"name\": \"阿里\",\"company_addr\": \"太原市软件园\"},\"publish_data\": \"2019-5-30\",\"comments\": 23}\n\n```\n\n\n\n### bulk其他操作\n\n```\n\n{\"index\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"1\"}}\n\n{\"field1\" : \"value1\"}\n\n{\"delete\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"2\"}}\n\n{\"create\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"3\"}}\n\n{\"field1\" : \"value3\"}\n\n{\"update\": {\"_index\": \"index1\", \"_type\": \"type1\", \"_id\": \"1\"}}\n\n{\"doc\":{\"field2\": \"value2\"}\n\n```\n\n\n\n### elasticsearch映射\n\n```\n\n# 创建索引\n\nPUT lagou\n\n{\n\n  \"mappings\": {\n\n    \"job\":{\n\n      \"properties\": {\n\n        \"title\":{\n\n          \"type\": \"text\"\n\n        },\n\n        \"salary_min\":{\n\n          \"type\": \"integer\"\n\n        },\n\n        \"city\":{\n\n          \"type\":\"keyword\"\n\n        },\n\n        \"company\":{\n\n          \"properties\": {\n\n            \"name\":{\n\n              \"type\":\"text\"\n\n            },\n\n            \"company_addr\":{\n\n              \"type\":\"text\"\n\n            },\n\n            \"employee_count\":{\n\n              \"type\":\"integer\"\n\n            }\n\n          }\n\n        },\n\n        \"publish_date\":{\n\n          \"type\": \"date\",\n\n          \"format\": \"yyyy-MM-dd\"\n\n        },\n\n        \"comments\":{\n\n          \"type\": \"integer\"\n\n        }\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n\n\nPUT lagou/job/3\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": \"abc\",\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\",\n\n        \"employee_count\":50\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 15\n\n}\n\n\n\nGET lagou/_mapping/job\n\nGET _all/_mapping/job\n\n```","source":"_posts/Elasticsearch操作.md","raw":"---\ntitle: Elasticsearch操作\ndate: 2019-12-28 14:25:47\nauthor: Ginta\nimg: http://img.ginta.top/chaoshou2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/chaoshou2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 数据库\n---\n```\n\n# es的文档，索引的 CRUD 操作\n\n# 索引初始化操作\n\n# 指定分片和副本的数量\n\n# shards一旦设置不能修改（副本数量）\n\n\n\n# 设置索引  \n\nPUT lagou\n\n{\n\n  \"settings\": {\n\n    \"index\":{\n\n      \"number_of_shards\": 5,\n\n      \"number_of_replicas\": 2\n\n    }\n\n  }  \n\n}\n\n\n\nGET lagou/_settings\n\nGET _all/_settings\n\nGET .kibana,lagou/_settings\n\nGET lagou/job/1/_source\n\n\n\n# 修改settings\n\nPUT lagou/_settings\n\n{\n\n  \"number_of_shards\": 2\n\n}\n\n\n\n# 保存文档  \n\nPUT lagou/job/2\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": 15000,\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 15\n\n}\n\n\n\nPOST lagou/job/1\n\n{\n\n    \"title\": \"python django 开发工程师\",\n\n    \"salary_min\": 3000,\n\n    \"city\": \"天猫\",\n\n    \"company\": {\n\n        \"name\": \"美团科技\",\n\n        \"company_addr\": \"北京市软件园A区\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 2\n\n}\n\n\n\n\n\nGET lagou/job/2?_source=city,company.name\n\n\n\n# 修改文章\n\nPUT lagou/job/2\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": 15000,\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\"\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 23\n\n}\n\n\n\n# 修改文章2\n\nPOST lagou/job/2/_update\n\n{\n\n  \"doc\":{\n\n    \"comments\": 21\n\n  }\n\n}\n\n\n\n\n\nDELETE lagou/job/1\n\nDELETE lagou\n\n\n\n# 批量获取\n\nGET _mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_index\":\"lagou\",\n\n      \"_type\": \"job2\",\n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_index\":\"lagou\",\n\n      \"_type\": \"job\",\n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\n# index一样\n\nGET lagou/_mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_type\": \"job2\",\n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_type\": \"job\",\n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\n\n\n# index,type一样\n\n\n\nGET lagou/job2/_mget\n\n{\n\n  \"docs\":[\n\n    { \n\n      \"_id\": 2\n\n    },\n\n    { \n\n      \"_id\": 1\n\n    }\n\n  ]\n\n}\n\n\n\nGET lagou/job2/_mget\n\n{\n\n  \"ids\": [1,2]\n\n}\n\n\n\n\n\n```\n\n### bulk批量操作\n\nbulk操作不能分行，json必需一行写完\n\n```\n\n{\"index\": {\"_index\": \"zhilian\", \"_type\": \"job\", \"_id\": \"1\"}}\n\n{\"title\": \"python分布式爬虫开发\",\"salary_min\": 15000,\"city\": \"北京\",\"company\": {\"name\": \"百度\",\"company_addr\": \"北京市软件园\"},\"publish_data\": \"2019-5-30\",\"comments\": 23}\n\n{\"index\": {\"_index\": \"zhilian\", \"_type\": \"job\", \"_id\": \"2\"}}\n\n{\"title\": \"爬虫开发\",\"salary_min\": 1500,\"city\": \"太原\",\"company\": {\"name\": \"阿里\",\"company_addr\": \"太原市软件园\"},\"publish_data\": \"2019-5-30\",\"comments\": 23}\n\n```\n\n\n\n### bulk其他操作\n\n```\n\n{\"index\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"1\"}}\n\n{\"field1\" : \"value1\"}\n\n{\"delete\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"2\"}}\n\n{\"create\": {\"_index\": \"test\", \"_type\": \"type1\", \"_id\": \"3\"}}\n\n{\"field1\" : \"value3\"}\n\n{\"update\": {\"_index\": \"index1\", \"_type\": \"type1\", \"_id\": \"1\"}}\n\n{\"doc\":{\"field2\": \"value2\"}\n\n```\n\n\n\n### elasticsearch映射\n\n```\n\n# 创建索引\n\nPUT lagou\n\n{\n\n  \"mappings\": {\n\n    \"job\":{\n\n      \"properties\": {\n\n        \"title\":{\n\n          \"type\": \"text\"\n\n        },\n\n        \"salary_min\":{\n\n          \"type\": \"integer\"\n\n        },\n\n        \"city\":{\n\n          \"type\":\"keyword\"\n\n        },\n\n        \"company\":{\n\n          \"properties\": {\n\n            \"name\":{\n\n              \"type\":\"text\"\n\n            },\n\n            \"company_addr\":{\n\n              \"type\":\"text\"\n\n            },\n\n            \"employee_count\":{\n\n              \"type\":\"integer\"\n\n            }\n\n          }\n\n        },\n\n        \"publish_date\":{\n\n          \"type\": \"date\",\n\n          \"format\": \"yyyy-MM-dd\"\n\n        },\n\n        \"comments\":{\n\n          \"type\": \"integer\"\n\n        }\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n\n\nPUT lagou/job/3\n\n{\n\n    \"title\": \"python分布式爬虫开发\",\n\n    \"salary_min\": \"abc\",\n\n    \"city\": \"北京\",\n\n    \"company\": {\n\n        \"name\": \"百度\",\n\n        \"company_addr\": \"北京市软件园\",\n\n        \"employee_count\":50\n\n    },\n\n    \"publish_data\": \"2019-5-30\",\n\n    \"comments\": 15\n\n}\n\n\n\nGET lagou/_mapping/job\n\nGET _all/_mapping/job\n\n```","slug":"Elasticsearch操作","published":1,"updated":"2022-11-15T02:45:38.837Z","_id":"cl6p6180w0012tksc2wyj0wgx","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># es的文档，索引的 CRUD 操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 索引初始化操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定分片和副本的数量</span><br><span class=\"line\"></span><br><span class=\"line\"># shards一旦设置不能修改（副本数量）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 设置索引  </span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;settings&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;index&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;number_of_shards&quot;: 5,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;number_of_replicas&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET _all/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET .kibana,lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job/1/_source</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改settings</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;number_of_shards&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 保存文档  </span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/2</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 15000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 15</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">POST lagou/job/1</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python django 开发工程师&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 3000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;天猫&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;美团科技&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园A区&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job/2?_source=city,company.name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改文章</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/2</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 15000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 23</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改文章2</span><br><span class=\"line\"></span><br><span class=\"line\">POST lagou/job/2/_update</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;doc&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 21</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">DELETE lagou/job/1</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE lagou</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 批量获取</span><br><span class=\"line\"></span><br><span class=\"line\">GET _mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_index&quot;:&quot;lagou&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job2&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_index&quot;:&quot;lagou&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># index一样</span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job2&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># index,type一样</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job2/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job2/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;ids&quot;: [1,2]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"bulk批量操作\"><a href=\"#bulk批量操作\" class=\"headerlink\" title=\"bulk批量操作\"></a>bulk批量操作</h3><p>bulk操作不能分行，json必需一行写完</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;zhilian&quot;, &quot;_type&quot;: &quot;job&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;title&quot;: &quot;python分布式爬虫开发&quot;,&quot;salary_min&quot;: 15000,&quot;city&quot;: &quot;北京&quot;,&quot;company&quot;: &#123;&quot;name&quot;: &quot;百度&quot;,&quot;company_addr&quot;: &quot;北京市软件园&quot;&#125;,&quot;publish_data&quot;: &quot;2019-5-30&quot;,&quot;comments&quot;: 23&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;zhilian&quot;, &quot;_type&quot;: &quot;job&quot;, &quot;_id&quot;: &quot;2&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;title&quot;: &quot;爬虫开发&quot;,&quot;salary_min&quot;: 1500,&quot;city&quot;: &quot;太原&quot;,&quot;company&quot;: &#123;&quot;name&quot;: &quot;阿里&quot;,&quot;company_addr&quot;: &quot;太原市软件园&quot;&#125;,&quot;publish_data&quot;: &quot;2019-5-30&quot;,&quot;comments&quot;: 23&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"bulk其他操作\"><a href=\"#bulk其他操作\" class=\"headerlink\" title=\"bulk其他操作\"></a>bulk其他操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;field1&quot; : &quot;value1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;delete&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;2&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;create&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;3&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;field1&quot; : &quot;value3&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;update&quot;: &#123;&quot;_index&quot;: &quot;index1&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;doc&quot;:&#123;&quot;field2&quot;: &quot;value2&quot;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"elasticsearch映射\"><a href=\"#elasticsearch映射\" class=\"headerlink\" title=\"elasticsearch映射\"></a>elasticsearch映射</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 创建索引</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;mappings&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;job&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;properties&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;title&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;salary_min&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;city&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;:&quot;keyword&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;properties&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;name&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;company_addr&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;employee_count&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;publish_date&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;date&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;format&quot;: &quot;yyyy-MM-dd&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;comments&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/3</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: &quot;abc&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;employee_count&quot;:50</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 15</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_mapping/job</span><br><span class=\"line\"></span><br><span class=\"line\">GET _all/_mapping/job</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># es的文档，索引的 CRUD 操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 索引初始化操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定分片和副本的数量</span><br><span class=\"line\"></span><br><span class=\"line\"># shards一旦设置不能修改（副本数量）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 设置索引  </span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;settings&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;index&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;number_of_shards&quot;: 5,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;number_of_replicas&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET _all/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET .kibana,lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job/1/_source</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改settings</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/_settings</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;number_of_shards&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 保存文档  </span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/2</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 15000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 15</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">POST lagou/job/1</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python django 开发工程师&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 3000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;天猫&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;美团科技&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园A区&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job/2?_source=city,company.name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改文章</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/2</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: 15000,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 23</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改文章2</span><br><span class=\"line\"></span><br><span class=\"line\">POST lagou/job/2/_update</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;doc&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 21</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">DELETE lagou/job/1</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE lagou</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 批量获取</span><br><span class=\"line\"></span><br><span class=\"line\">GET _mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_index&quot;:&quot;lagou&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job2&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_index&quot;:&quot;lagou&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># index一样</span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job2&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_type&quot;: &quot;job&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># index,type一样</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job2/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;docs&quot;:[</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;_id&quot;: 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/job2/_mget</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;ids&quot;: [1,2]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"bulk批量操作\"><a href=\"#bulk批量操作\" class=\"headerlink\" title=\"bulk批量操作\"></a>bulk批量操作</h3><p>bulk操作不能分行，json必需一行写完</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;zhilian&quot;, &quot;_type&quot;: &quot;job&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;title&quot;: &quot;python分布式爬虫开发&quot;,&quot;salary_min&quot;: 15000,&quot;city&quot;: &quot;北京&quot;,&quot;company&quot;: &#123;&quot;name&quot;: &quot;百度&quot;,&quot;company_addr&quot;: &quot;北京市软件园&quot;&#125;,&quot;publish_data&quot;: &quot;2019-5-30&quot;,&quot;comments&quot;: 23&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;zhilian&quot;, &quot;_type&quot;: &quot;job&quot;, &quot;_id&quot;: &quot;2&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;title&quot;: &quot;爬虫开发&quot;,&quot;salary_min&quot;: 1500,&quot;city&quot;: &quot;太原&quot;,&quot;company&quot;: &#123;&quot;name&quot;: &quot;阿里&quot;,&quot;company_addr&quot;: &quot;太原市软件园&quot;&#125;,&quot;publish_data&quot;: &quot;2019-5-30&quot;,&quot;comments&quot;: 23&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"bulk其他操作\"><a href=\"#bulk其他操作\" class=\"headerlink\" title=\"bulk其他操作\"></a>bulk其他操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;index&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;field1&quot; : &quot;value1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;delete&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;2&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;create&quot;: &#123;&quot;_index&quot;: &quot;test&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;3&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;field1&quot; : &quot;value3&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;update&quot;: &#123;&quot;_index&quot;: &quot;index1&quot;, &quot;_type&quot;: &quot;type1&quot;, &quot;_id&quot;: &quot;1&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;doc&quot;:&#123;&quot;field2&quot;: &quot;value2&quot;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"elasticsearch映射\"><a href=\"#elasticsearch映射\" class=\"headerlink\" title=\"elasticsearch映射\"></a>elasticsearch映射</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 创建索引</span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &quot;mappings&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;job&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &quot;properties&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;title&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;salary_min&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;city&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;:&quot;keyword&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;properties&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;name&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;company_addr&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;text&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">            &quot;employee_count&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &quot;type&quot;:&quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;publish_date&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;date&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;format&quot;: &quot;yyyy-MM-dd&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;comments&quot;:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;type&quot;: &quot;integer&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PUT lagou/job/3</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;title&quot;: &quot;python分布式爬虫开发&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;salary_min&quot;: &quot;abc&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;city&quot;: &quot;北京&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;company&quot;: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;name&quot;: &quot;百度&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;company_addr&quot;: &quot;北京市软件园&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">        &quot;employee_count&quot;:50</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;publish_data&quot;: &quot;2019-5-30&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;comments&quot;: 15</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET lagou/_mapping/job</span><br><span class=\"line\"></span><br><span class=\"line\">GET _all/_mapping/job</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Elasticsearch组合查询","date":"2019-12-28T06:26:45.000Z","author":"Ginta","img":"http://img.ginta.top/sky1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/sky1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 准备数据\r\n```\r\nPOST lagou/testjob/_bulk\r\n{\"index\":{\"_id\":1}}\r\n{\"salary\":10, \"title\": \"Python\"}\r\n{\"index\":{\"_id\":2}}\r\n{\"salary\":20, \"title\": \"Scrapy\"}\r\n{\"index\":{\"_id\":3}}\r\n{\"salary\":30, \"title\": \"Django\"}\r\n{\"index\":{\"_id\":4}}\r\n{\"salary\":40, \"title\": \"Elasticsearch\"}\r\n```\r\n## 组合查询\r\n### bool查询\r\n>用 bool 包括 must should must_not filter 来完成，\r\n格式如下\r\n- filter 过渡字段\r\n- must 所有都要有\r\n- should 满足一个或多个\r\n- must_not 一个都不能满足\r\n```\r\nbool: {\r\n    \"filter\": [],\r\n    \"must\": [],\r\n    \"should\": [],\r\n    \"must_not\"\r\n}\r\n```\r\n\r\n1. filter查询\r\n```\r\n\r\nselect * from testjob where salary=20\r\n薪资为20k的工作\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": {\r\n        \"match_all\":{}\r\n      },\r\n      \"filter\": {\r\n        \"term\": {\r\n          \"salary\": \"20\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# 多个\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"terms\": {\r\n          \"salary\": [\"10\", \"20\"]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n# select * from testjob where title=\"Python\"\r\n# text字段会先分词，再全部转为小写入库\r\n# term不会预处理，直接大写查询，但是倒排索引已经全部小写了\r\n# 所以查不到，要不就用小写，要不就用match\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"term\": {\r\n          \"title\":\"Python\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### bool组合过滤查询\r\n```\r\n# 查询薪资等于20k或者工作为Python的工作，排除价格为30k的\r\n# select * from testjob where (salary=20 OR title=\"Python\") AND (salary !=30)\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\":[ \r\n        {\"term\": {\"salary\":20}},\r\n        {\"term\":{\"title\":\"python\"}}\r\n      ],\r\n      \"must_not\": [\r\n        {\"term\":{\"salary\":30}},\r\n        {\"term\":{\"salary\":10}}\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n# 嵌套查询\r\n# select * from testjob where title=\"python\" or (title=\"django\" AND salary=40)\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\":[ \r\n        {\"term\": {\"title\":\"python\"}},\r\n        {\"bool\":{\r\n          \"must\": [\r\n            {\"term\": {\"title\":\"elasticsearch\"}},\r\n            {\"term\": {\"salary\": 40}}\r\n          ]}\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### 过滤空和非空\r\n```\r\n\r\n# 建立测试数据\r\nPOST lagou/testjob2/_bulk\r\n{\"index\":{\"_id\":\"1\"}}\r\n{\"tags\":[\"search\"]}\r\n{\"index\":{\"_id\":\"2\"}}\r\n{\"tags\":[\"search\", \"python\"]}\r\n{\"index\":{\"_id\":\"3\"}}\r\n{\"orther_field\":[\"some data\"]}\r\n{\"index\":{\"_id\":\"4\"}}\r\n{\"tags\":null}\r\n{\"index\":{\"_id\":\"5\"}}\r\n{\"tags\":[\"search\", null]}\r\n```\r\n\r\n```\r\n# 处理非空值的方法\r\n# select tags from testjob2 where tags is not NULL\r\nGET lagou/testjob2/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"exists\": {\r\n          \"field\": \"tags\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","source":"_posts/Elasticsearch组合查询.md","raw":"---\ntitle: Elasticsearch组合查询\ndate: 2019-12-28 14:26:45\nauthor: Ginta\nimg: http://img.ginta.top/sky1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/sky1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 数据库\n---\n### 准备数据\r\n```\r\nPOST lagou/testjob/_bulk\r\n{\"index\":{\"_id\":1}}\r\n{\"salary\":10, \"title\": \"Python\"}\r\n{\"index\":{\"_id\":2}}\r\n{\"salary\":20, \"title\": \"Scrapy\"}\r\n{\"index\":{\"_id\":3}}\r\n{\"salary\":30, \"title\": \"Django\"}\r\n{\"index\":{\"_id\":4}}\r\n{\"salary\":40, \"title\": \"Elasticsearch\"}\r\n```\r\n## 组合查询\r\n### bool查询\r\n>用 bool 包括 must should must_not filter 来完成，\r\n格式如下\r\n- filter 过渡字段\r\n- must 所有都要有\r\n- should 满足一个或多个\r\n- must_not 一个都不能满足\r\n```\r\nbool: {\r\n    \"filter\": [],\r\n    \"must\": [],\r\n    \"should\": [],\r\n    \"must_not\"\r\n}\r\n```\r\n\r\n1. filter查询\r\n```\r\n\r\nselect * from testjob where salary=20\r\n薪资为20k的工作\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": {\r\n        \"match_all\":{}\r\n      },\r\n      \"filter\": {\r\n        \"term\": {\r\n          \"salary\": \"20\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# 多个\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"terms\": {\r\n          \"salary\": [\"10\", \"20\"]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n# select * from testjob where title=\"Python\"\r\n# text字段会先分词，再全部转为小写入库\r\n# term不会预处理，直接大写查询，但是倒排索引已经全部小写了\r\n# 所以查不到，要不就用小写，要不就用match\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"term\": {\r\n          \"title\":\"Python\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### bool组合过滤查询\r\n```\r\n# 查询薪资等于20k或者工作为Python的工作，排除价格为30k的\r\n# select * from testjob where (salary=20 OR title=\"Python\") AND (salary !=30)\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\":[ \r\n        {\"term\": {\"salary\":20}},\r\n        {\"term\":{\"title\":\"python\"}}\r\n      ],\r\n      \"must_not\": [\r\n        {\"term\":{\"salary\":30}},\r\n        {\"term\":{\"salary\":10}}\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n# 嵌套查询\r\n# select * from testjob where title=\"python\" or (title=\"django\" AND salary=40)\r\nGET lagou/testjob/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\":[ \r\n        {\"term\": {\"title\":\"python\"}},\r\n        {\"bool\":{\r\n          \"must\": [\r\n            {\"term\": {\"title\":\"elasticsearch\"}},\r\n            {\"term\": {\"salary\": 40}}\r\n          ]}\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### 过滤空和非空\r\n```\r\n\r\n# 建立测试数据\r\nPOST lagou/testjob2/_bulk\r\n{\"index\":{\"_id\":\"1\"}}\r\n{\"tags\":[\"search\"]}\r\n{\"index\":{\"_id\":\"2\"}}\r\n{\"tags\":[\"search\", \"python\"]}\r\n{\"index\":{\"_id\":\"3\"}}\r\n{\"orther_field\":[\"some data\"]}\r\n{\"index\":{\"_id\":\"4\"}}\r\n{\"tags\":null}\r\n{\"index\":{\"_id\":\"5\"}}\r\n{\"tags\":[\"search\", null]}\r\n```\r\n\r\n```\r\n# 处理非空值的方法\r\n# select tags from testjob2 where tags is not NULL\r\nGET lagou/testjob2/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"exists\": {\r\n          \"field\": \"tags\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","slug":"Elasticsearch组合查询","published":1,"updated":"2022-08-11T12:49:48.129Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180x0016tkschzh38y0n","content":"<h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><pre><code>POST lagou/testjob/_bulk\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;\n&#123;&quot;salary&quot;:10, &quot;title&quot;: &quot;Python&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;\n&#123;&quot;salary&quot;:20, &quot;title&quot;: &quot;Scrapy&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;\n&#123;&quot;salary&quot;:30, &quot;title&quot;: &quot;Django&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;\n&#123;&quot;salary&quot;:40, &quot;title&quot;: &quot;Elasticsearch&quot;&#125;\n</code></pre>\n<h2 id=\"组合查询\"><a href=\"#组合查询\" class=\"headerlink\" title=\"组合查询\"></a>组合查询</h2><h3 id=\"bool查询\"><a href=\"#bool查询\" class=\"headerlink\" title=\"bool查询\"></a>bool查询</h3><blockquote>\n<p>用 bool 包括 must should must_not filter 来完成，<br>格式如下</p>\n</blockquote>\n<ul>\n<li>filter 过渡字段</li>\n<li>must 所有都要有</li>\n<li>should 满足一个或多个</li>\n<li>must_not 一个都不能满足</li>\n</ul>\n<pre><code>bool: &#123;\n    &quot;filter&quot;: [],\n    &quot;must&quot;: [],\n    &quot;should&quot;: [],\n    &quot;must_not&quot;\n&#125;\n</code></pre>\n<ol>\n<li>filter查询</li>\n</ol>\n<pre><code>\nselect * from testjob where salary=20\n薪资为20k的工作\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;must&quot;: &#123;\n        &quot;match_all&quot;:&#123;&#125;\n      &#125;,\n      &quot;filter&quot;: &#123;\n        &quot;term&quot;: &#123;\n          &quot;salary&quot;: &quot;20&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\n# 多个\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;terms&quot;: &#123;\n          &quot;salary&quot;: [&quot;10&quot;, &quot;20&quot;]\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\n\n# select * from testjob where title=&quot;Python&quot;\n# text字段会先分词，再全部转为小写入库\n# term不会预处理，直接大写查询，但是倒排索引已经全部小写了\n# 所以查不到，要不就用小写，要不就用match\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;term&quot;: &#123;\n          &quot;title&quot;:&quot;Python&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"bool组合过滤查询\"><a href=\"#bool组合过滤查询\" class=\"headerlink\" title=\"bool组合过滤查询\"></a>bool组合过滤查询</h3><pre><code># 查询薪资等于20k或者工作为Python的工作，排除价格为30k的\n# select * from testjob where (salary=20 OR title=&quot;Python&quot;) AND (salary !=30)\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;should&quot;:[ \n        &#123;&quot;term&quot;: &#123;&quot;salary&quot;:20&#125;&#125;,\n        &#123;&quot;term&quot;:&#123;&quot;title&quot;:&quot;python&quot;&#125;&#125;\n      ],\n      &quot;must_not&quot;: [\n        &#123;&quot;term&quot;:&#123;&quot;salary&quot;:30&#125;&#125;,\n        &#123;&quot;term&quot;:&#123;&quot;salary&quot;:10&#125;&#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n\n# 嵌套查询\n# select * from testjob where title=&quot;python&quot; or (title=&quot;django&quot; AND salary=40)\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;should&quot;:[ \n        &#123;&quot;term&quot;: &#123;&quot;title&quot;:&quot;python&quot;&#125;&#125;,\n        &#123;&quot;bool&quot;:&#123;\n          &quot;must&quot;: [\n            &#123;&quot;term&quot;: &#123;&quot;title&quot;:&quot;elasticsearch&quot;&#125;&#125;,\n            &#123;&quot;term&quot;: &#123;&quot;salary&quot;: 40&#125;&#125;\n          ]&#125;\n        &#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"过滤空和非空\"><a href=\"#过滤空和非空\" class=\"headerlink\" title=\"过滤空和非空\"></a>过滤空和非空</h3><pre><code>\n# 建立测试数据\nPOST lagou/testjob2/_bulk\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;1&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;2&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;, &quot;python&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;3&quot;&#125;&#125;\n&#123;&quot;orther_field&quot;:[&quot;some data&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;4&quot;&#125;&#125;\n&#123;&quot;tags&quot;:null&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;5&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;, null]&#125;\n</code></pre>\n<pre><code># 处理非空值的方法\n# select tags from testjob2 where tags is not NULL\nGET lagou/testjob2/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;exists&quot;: &#123;\n          &quot;field&quot;: &quot;tags&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><pre><code>POST lagou/testjob/_bulk\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;\n&#123;&quot;salary&quot;:10, &quot;title&quot;: &quot;Python&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;\n&#123;&quot;salary&quot;:20, &quot;title&quot;: &quot;Scrapy&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;\n&#123;&quot;salary&quot;:30, &quot;title&quot;: &quot;Django&quot;&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;\n&#123;&quot;salary&quot;:40, &quot;title&quot;: &quot;Elasticsearch&quot;&#125;\n</code></pre>\n<h2 id=\"组合查询\"><a href=\"#组合查询\" class=\"headerlink\" title=\"组合查询\"></a>组合查询</h2><h3 id=\"bool查询\"><a href=\"#bool查询\" class=\"headerlink\" title=\"bool查询\"></a>bool查询</h3><blockquote>\n<p>用 bool 包括 must should must_not filter 来完成，<br>格式如下</p>\n</blockquote>\n<ul>\n<li>filter 过渡字段</li>\n<li>must 所有都要有</li>\n<li>should 满足一个或多个</li>\n<li>must_not 一个都不能满足</li>\n</ul>\n<pre><code>bool: &#123;\n    &quot;filter&quot;: [],\n    &quot;must&quot;: [],\n    &quot;should&quot;: [],\n    &quot;must_not&quot;\n&#125;\n</code></pre>\n<ol>\n<li>filter查询</li>\n</ol>\n<pre><code>\nselect * from testjob where salary=20\n薪资为20k的工作\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;must&quot;: &#123;\n        &quot;match_all&quot;:&#123;&#125;\n      &#125;,\n      &quot;filter&quot;: &#123;\n        &quot;term&quot;: &#123;\n          &quot;salary&quot;: &quot;20&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\n# 多个\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;terms&quot;: &#123;\n          &quot;salary&quot;: [&quot;10&quot;, &quot;20&quot;]\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\n\n# select * from testjob where title=&quot;Python&quot;\n# text字段会先分词，再全部转为小写入库\n# term不会预处理，直接大写查询，但是倒排索引已经全部小写了\n# 所以查不到，要不就用小写，要不就用match\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;term&quot;: &#123;\n          &quot;title&quot;:&quot;Python&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"bool组合过滤查询\"><a href=\"#bool组合过滤查询\" class=\"headerlink\" title=\"bool组合过滤查询\"></a>bool组合过滤查询</h3><pre><code># 查询薪资等于20k或者工作为Python的工作，排除价格为30k的\n# select * from testjob where (salary=20 OR title=&quot;Python&quot;) AND (salary !=30)\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;should&quot;:[ \n        &#123;&quot;term&quot;: &#123;&quot;salary&quot;:20&#125;&#125;,\n        &#123;&quot;term&quot;:&#123;&quot;title&quot;:&quot;python&quot;&#125;&#125;\n      ],\n      &quot;must_not&quot;: [\n        &#123;&quot;term&quot;:&#123;&quot;salary&quot;:30&#125;&#125;,\n        &#123;&quot;term&quot;:&#123;&quot;salary&quot;:10&#125;&#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n\n# 嵌套查询\n# select * from testjob where title=&quot;python&quot; or (title=&quot;django&quot; AND salary=40)\nGET lagou/testjob/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;should&quot;:[ \n        &#123;&quot;term&quot;: &#123;&quot;title&quot;:&quot;python&quot;&#125;&#125;,\n        &#123;&quot;bool&quot;:&#123;\n          &quot;must&quot;: [\n            &#123;&quot;term&quot;: &#123;&quot;title&quot;:&quot;elasticsearch&quot;&#125;&#125;,\n            &#123;&quot;term&quot;: &#123;&quot;salary&quot;: 40&#125;&#125;\n          ]&#125;\n        &#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"过滤空和非空\"><a href=\"#过滤空和非空\" class=\"headerlink\" title=\"过滤空和非空\"></a>过滤空和非空</h3><pre><code>\n# 建立测试数据\nPOST lagou/testjob2/_bulk\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;1&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;2&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;, &quot;python&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;3&quot;&#125;&#125;\n&#123;&quot;orther_field&quot;:[&quot;some data&quot;]&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;4&quot;&#125;&#125;\n&#123;&quot;tags&quot;:null&#125;\n&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;5&quot;&#125;&#125;\n&#123;&quot;tags&quot;:[&quot;search&quot;, null]&#125;\n</code></pre>\n<pre><code># 处理非空值的方法\n# select tags from testjob2 where tags is not NULL\nGET lagou/testjob2/_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n      &quot;filter&quot;: &#123;\n        &quot;exists&quot;: &#123;\n          &quot;field&quot;: &quot;tags&quot;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n"},{"title":"Elasticsearch配置","date":"2019-12-28T06:24:42.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 安装\r\n1. Java环境\r\n2. Git 下载 elasticsearch-rtf  压缩包，解压 进入bin 运行 elasticsearch.bat\r\n3. Git clone elasticsearch-head 进入，npm install,npm run start\r\n4. 配置elasticsearch.yml\r\n```\r\nhttp.cors.enabled: true\r\nhttp.cors.allow-origin: \"*\"\r\nhttp.cors.allow-methods: OPTIONS, HEAD, GET, PUT, DELETE\r\nhttp.cors.allow-headers: \"X-Requested_With, Content-Type, Content_Length, X-User\"\r\n```\r\n5. 安装 kibana ,版本与 elasticsearch相对应\r\n\r\n### elasticsearch概念\r\n1. 集群\r\n2. 节点\r\n3. 分片\r\n4. 副本\r\n\r\n\r\nElasticsearch | Mysql\r\n---|---\r\nindex | 数据库\r\ntype | 表\r\ndocuments | 行(一条数据)\r\nfields | 列","source":"_posts/Elasticsearch配置.md","raw":"---\ntitle: Elasticsearch配置\ndate: 2019-12-28 14:24:42\nauthor: Ginta\nimg: http://img.ginta.top/fantasy2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 数据库\n---\n### 安装\r\n1. Java环境\r\n2. Git 下载 elasticsearch-rtf  压缩包，解压 进入bin 运行 elasticsearch.bat\r\n3. Git clone elasticsearch-head 进入，npm install,npm run start\r\n4. 配置elasticsearch.yml\r\n```\r\nhttp.cors.enabled: true\r\nhttp.cors.allow-origin: \"*\"\r\nhttp.cors.allow-methods: OPTIONS, HEAD, GET, PUT, DELETE\r\nhttp.cors.allow-headers: \"X-Requested_With, Content-Type, Content_Length, X-User\"\r\n```\r\n5. 安装 kibana ,版本与 elasticsearch相对应\r\n\r\n### elasticsearch概念\r\n1. 集群\r\n2. 节点\r\n3. 分片\r\n4. 副本\r\n\r\n\r\nElasticsearch | Mysql\r\n---|---\r\nindex | 数据库\r\ntype | 表\r\ndocuments | 行(一条数据)\r\nfields | 列","slug":"Elasticsearch配置","published":1,"updated":"2022-08-11T12:49:48.142Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180x0018tksc8igm7hi3","content":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ol>\n<li>Java环境</li>\n<li>Git 下载 elasticsearch-rtf  压缩包，解压 进入bin 运行 elasticsearch.bat</li>\n<li>Git clone elasticsearch-head 进入，npm install,npm run start</li>\n<li>配置elasticsearch.yml</li>\n</ol>\n<pre><code>http.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\nhttp.cors.allow-methods: OPTIONS, HEAD, GET, PUT, DELETE\nhttp.cors.allow-headers: &quot;X-Requested_With, Content-Type, Content_Length, X-User&quot;\n</code></pre>\n<ol start=\"5\">\n<li>安装 kibana ,版本与 elasticsearch相对应</li>\n</ol>\n<h3 id=\"elasticsearch概念\"><a href=\"#elasticsearch概念\" class=\"headerlink\" title=\"elasticsearch概念\"></a>elasticsearch概念</h3><ol>\n<li>集群</li>\n<li>节点</li>\n<li>分片</li>\n<li>副本</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Elasticsearch</th>\n<th>Mysql</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>index</td>\n<td>数据库</td>\n</tr>\n<tr>\n<td>type</td>\n<td>表</td>\n</tr>\n<tr>\n<td>documents</td>\n<td>行(一条数据)</td>\n</tr>\n<tr>\n<td>fields</td>\n<td>列</td>\n</tr>\n</tbody></table>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ol>\n<li>Java环境</li>\n<li>Git 下载 elasticsearch-rtf  压缩包，解压 进入bin 运行 elasticsearch.bat</li>\n<li>Git clone elasticsearch-head 进入，npm install,npm run start</li>\n<li>配置elasticsearch.yml</li>\n</ol>\n<pre><code>http.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\nhttp.cors.allow-methods: OPTIONS, HEAD, GET, PUT, DELETE\nhttp.cors.allow-headers: &quot;X-Requested_With, Content-Type, Content_Length, X-User&quot;\n</code></pre>\n<ol start=\"5\">\n<li>安装 kibana ,版本与 elasticsearch相对应</li>\n</ol>\n<h3 id=\"elasticsearch概念\"><a href=\"#elasticsearch概念\" class=\"headerlink\" title=\"elasticsearch概念\"></a>elasticsearch概念</h3><ol>\n<li>集群</li>\n<li>节点</li>\n<li>分片</li>\n<li>副本</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Elasticsearch</th>\n<th>Mysql</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>index</td>\n<td>数据库</td>\n</tr>\n<tr>\n<td>type</td>\n<td>表</td>\n</tr>\n<tr>\n<td>documents</td>\n<td>行(一条数据)</td>\n</tr>\n<tr>\n<td>fields</td>\n<td>列</td>\n</tr>\n</tbody></table>\n"},{"title":"Github搜索开源项目方式","date":"2020-05-02T04:37:28.000Z","author":"Ginta","img":"http://img.ginta.top/sky2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/sky2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 前言\r\n作为全球最大的同性交友网站，**Github** 上有很多优秀的开源项目，使用正确的方式搜索可以很方便地找到自己需要的资源。\r\n\r\n### 使用\r\n筛选的语法非常简单\r\n```\r\n# 按照项目名/仓库名搜索（大小写不敏感）\r\nin:name xxx \r\n# 按照README搜索（大小写不敏感）\r\nin:readme xxx\r\n# 按照description搜索（大小写不敏感）\r\nin:description xxx\r\n# stars数大于xxx\r\nstars:>xxx\r\n# forks数大于xxx\r\nforks:>xxx\r\n# 编程语言为xxx\r\nlanguage:xxx\r\n# 最新更新时间晚于YYYY-MM-DD\r\npushed:>YYYY-MM-DD\r\n```\r\n举个例子，如果需要搜索一个基于 *Django* 的后台管理项目，可以通过以下方式，搜索仓库名包含 **django** 关键字并且项目描述中包含 **后台**  关键字。\r\n![](http://img.ginta.top/markdownx/2020/04/22/27c4d6a1-e8f3-40b1-8b14-93eb48715f1e.png)\r\n就是这么方便，当然可以通过更新时间来过滤一些不维护的项目。","source":"_posts/Github搜索开源项目方式.md","raw":"---\ntitle: Github搜索开源项目方式\ndate: 2020-05-02 12:37:28\nauthor: Ginta\nimg: http://img.ginta.top/sky2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/sky2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: Git/Github\n---\n### 前言\r\n作为全球最大的同性交友网站，**Github** 上有很多优秀的开源项目，使用正确的方式搜索可以很方便地找到自己需要的资源。\r\n\r\n### 使用\r\n筛选的语法非常简单\r\n```\r\n# 按照项目名/仓库名搜索（大小写不敏感）\r\nin:name xxx \r\n# 按照README搜索（大小写不敏感）\r\nin:readme xxx\r\n# 按照description搜索（大小写不敏感）\r\nin:description xxx\r\n# stars数大于xxx\r\nstars:>xxx\r\n# forks数大于xxx\r\nforks:>xxx\r\n# 编程语言为xxx\r\nlanguage:xxx\r\n# 最新更新时间晚于YYYY-MM-DD\r\npushed:>YYYY-MM-DD\r\n```\r\n举个例子，如果需要搜索一个基于 *Django* 的后台管理项目，可以通过以下方式，搜索仓库名包含 **django** 关键字并且项目描述中包含 **后台**  关键字。\r\n![](http://img.ginta.top/markdownx/2020/04/22/27c4d6a1-e8f3-40b1-8b14-93eb48715f1e.png)\r\n就是这么方便，当然可以通过更新时间来过滤一些不维护的项目。","slug":"Github搜索开源项目方式","published":1,"updated":"2022-08-11T12:49:48.142Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180y001dtksc88nx17uk","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为全球最大的同性交友网站，<strong>Github</strong> 上有很多优秀的开源项目，使用正确的方式搜索可以很方便地找到自己需要的资源。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>筛选的语法非常简单</p>\n<pre><code># 按照项目名/仓库名搜索（大小写不敏感）\nin:name xxx \n# 按照README搜索（大小写不敏感）\nin:readme xxx\n# 按照description搜索（大小写不敏感）\nin:description xxx\n# stars数大于xxx\nstars:&gt;xxx\n# forks数大于xxx\nforks:&gt;xxx\n# 编程语言为xxx\nlanguage:xxx\n# 最新更新时间晚于YYYY-MM-DD\npushed:&gt;YYYY-MM-DD\n</code></pre>\n<p>举个例子，如果需要搜索一个基于 <em>Django</em> 的后台管理项目，可以通过以下方式，搜索仓库名包含 <strong>django</strong> 关键字并且项目描述中包含 <strong>后台</strong>  关键字。<br><img src=\"http://img.ginta.top/markdownx/2020/04/22/27c4d6a1-e8f3-40b1-8b14-93eb48715f1e.png\"><br>就是这么方便，当然可以通过更新时间来过滤一些不维护的项目。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为全球最大的同性交友网站，<strong>Github</strong> 上有很多优秀的开源项目，使用正确的方式搜索可以很方便地找到自己需要的资源。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>筛选的语法非常简单</p>\n<pre><code># 按照项目名/仓库名搜索（大小写不敏感）\nin:name xxx \n# 按照README搜索（大小写不敏感）\nin:readme xxx\n# 按照description搜索（大小写不敏感）\nin:description xxx\n# stars数大于xxx\nstars:&gt;xxx\n# forks数大于xxx\nforks:&gt;xxx\n# 编程语言为xxx\nlanguage:xxx\n# 最新更新时间晚于YYYY-MM-DD\npushed:&gt;YYYY-MM-DD\n</code></pre>\n<p>举个例子，如果需要搜索一个基于 <em>Django</em> 的后台管理项目，可以通过以下方式，搜索仓库名包含 <strong>django</strong> 关键字并且项目描述中包含 <strong>后台</strong>  关键字。<br><img src=\"http://img.ginta.top/markdownx/2020/04/22/27c4d6a1-e8f3-40b1-8b14-93eb48715f1e.png\"><br>就是这么方便，当然可以通过更新时间来过滤一些不维护的项目。</p>\n"},{"title":"Git设置代理","date":"2020-03-31T04:12:18.000Z","author":"Ginta","img":"http://img.ginta.top/lc3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/lc3.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### Git代理\r\n开了VPN以后发现执行 `git clone` 还是不够快，经大佬指点发现还需要配置 *git* 的代理。\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/03/31/a4c201b6-9795-4e65-9c45-61c446acd63a.png)\r\n\r\n\r\nhttps://gist.github.com/evantoli/f8c23a37eb3558ab8765\r\n\r\ngit config --global http.proxy http://127.0.0.1:1087","source":"_posts/Git设置代理.md","raw":"---\ntitle: Git设置代理\ndate: 2020-03-31 12:12:18\nauthor: Ginta\nimg: http://img.ginta.top/lc3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/lc3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 其他\n---\n### Git代理\r\n开了VPN以后发现执行 `git clone` 还是不够快，经大佬指点发现还需要配置 *git* 的代理。\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/03/31/a4c201b6-9795-4e65-9c45-61c446acd63a.png)\r\n\r\n\r\nhttps://gist.github.com/evantoli/f8c23a37eb3558ab8765\r\n\r\ngit config --global http.proxy http://127.0.0.1:1087","slug":"Git设置代理","published":1,"updated":"2022-08-11T12:49:48.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180y001htksc37df8i23","content":"<h3 id=\"Git代理\"><a href=\"#Git代理\" class=\"headerlink\" title=\"Git代理\"></a>Git代理</h3><p>开了VPN以后发现执行 <code>git clone</code> 还是不够快，经大佬指点发现还需要配置 <em>git</em> 的代理。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/03/31/a4c201b6-9795-4e65-9c45-61c446acd63a.png\"></p>\n<p><a href=\"https://gist.github.com/evantoli/f8c23a37eb3558ab8765\">https://gist.github.com/evantoli/f8c23a37eb3558ab8765</a></p>\n<p>git config –global http.proxy <a href=\"http://127.0.0.1:1087/\">http://127.0.0.1:1087</a></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"Git代理\"><a href=\"#Git代理\" class=\"headerlink\" title=\"Git代理\"></a>Git代理</h3><p>开了VPN以后发现执行 <code>git clone</code> 还是不够快，经大佬指点发现还需要配置 <em>git</em> 的代理。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/03/31/a4c201b6-9795-4e65-9c45-61c446acd63a.png\"></p>\n<p><a href=\"https://gist.github.com/evantoli/f8c23a37eb3558ab8765\">https://gist.github.com/evantoli/f8c23a37eb3558ab8765</a></p>\n<p>git config –global http.proxy <a href=\"http://127.0.0.1:1087/\">http://127.0.0.1:1087</a></p>\n"},{"title":"Linux 文件隐藏属性","date":"2020-02-20T17:52:03.000Z","author":"Ginta","img":"http://img.ginta.top/dm3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dm3.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n我们都知道 **Linux** 系统文件都有 r(read)/w(write)/x(execute) 三个属性，但是文件系统还提供了隐藏属性，这些隐藏属性非常实用，可以进一步起到对文件的保护作用。\n\n\n\n### chattr(配置文件隐藏属性)\n\n配置文件隐藏属性的指令是 `chattr [+- - =][ASacdistu]  文件或目录名`\n\n其中选项和参数如下:\n\n\n\n选项与参数：\n\n\n\n- \\+ ：增加某一个特殊参数，其他原本存在参数则不动。\n\n- \\- ：移除某一个特殊参数，其他原本存在参数则不动。\n\n- = ：设定一定，且仅有后面接的参数\n\n- A ：当设定了 A 这个属性时，若你有存取此文件(或目录)时，他的访问时间 atime 将不会被修改，\n\n可避免 I/O 较慢的机器过度的存取磁盘。(目前建议使用文件系统挂载参数处理这个项目)\n\n- S ：一般文件是异步写入磁盘的(原理请参考前一章 sync 的说明)，如果加上 S 这个属性时，\n\n当你进行任何文件的修改，该更动会『同步』写入磁盘中。\n\n- a ：**当设定 a 之后，这个文件将只能增加数据，而不能删除也不能修改数据，只有 root 才能设定这属性**\n\n- c ：这个属性设定之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩，\n\n但是在储存的时候，将会先进行压缩后再储存(看来对于大文件似乎蛮有用的！)\n\n- d ：当 dump 程序被执行的时候，设定 d 属性将可使该文件(或目录)不会被 dump 备份\n\n- i ：**这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、设定连结也无法写入或新增数据！』\n\n对于系统安全性有相当大的帮助！只有 root 能设定此属性**\n\n- s ：当文件设定了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间，\n\n所以如果误删了，完全无法救回来了喔！\n\n- u ：与 s 相反的，当使用 u 来配置文件案时，如果该文件被删除了，则数据内容其实还存在磁盘中，\n\n可以使用来救援该文件喔！\n\n- 注意 1：属性设定常见的是 a 与 i 的设定值，而且很多设定值必须要身为 root 才能设定\n\n- 注意 2：xfs 文件系统仅支援 AadiS 而已\n\n\n\n```\n\nadmin@iZwz93u7y9mplneahfm5doZ:~$ cd /tmp/\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ touch attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ chattr +i attrtest \n\nchattr: Operation not permitted while setting flags on attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo chattr +i attrtest \n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo rm attrtest   <=此时sudo也就是root都无法删除了\n\nrm: cannot remove 'attrtest': Operation not permitted\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ chattr -i attrtest \n\nchattr: Operation not permitted while setting flags on attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo chattr -i attrtest  <=把i属性取消掉就可以删除了\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ rm attrtest```\n\n\n\n其中最常用的就是 **i** 和 **a** 属性了，**i** 让一个文件无法修改，无法被删除，也不能被软链接，对系统安全性有很重要的意义。**a** 让一个文件只能增加数据，无法修改和删除数据。\n\n\t\t\n\n### lsattr(显示文件隐藏属性)\n\n显示隐藏属性的指令如下： `lsattr [- adR]  文件 或者 目录`\n\n选项与参数:\n\n\n\n- \\-a ：将隐藏文件的属性也秀出来\n\n- \\-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名\n\n- \\-R ：连同子目录的数据也一并列出来","source":"_posts/Linux 文件隐藏属性.md","raw":"---\ntitle: Linux 文件隐藏属性\ndate: 2020-02-21 01:52:03\nauthor: Ginta\nimg: http://img.ginta.top/dm3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dm3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: Linux\npublished: false\n---\n## 前言\n\n我们都知道 **Linux** 系统文件都有 r(read)/w(write)/x(execute) 三个属性，但是文件系统还提供了隐藏属性，这些隐藏属性非常实用，可以进一步起到对文件的保护作用。\n\n\n\n### chattr(配置文件隐藏属性)\n\n配置文件隐藏属性的指令是 `chattr [+- - =][ASacdistu]  文件或目录名`\n\n其中选项和参数如下:\n\n\n\n选项与参数：\n\n\n\n- \\+ ：增加某一个特殊参数，其他原本存在参数则不动。\n\n- \\- ：移除某一个特殊参数，其他原本存在参数则不动。\n\n- = ：设定一定，且仅有后面接的参数\n\n- A ：当设定了 A 这个属性时，若你有存取此文件(或目录)时，他的访问时间 atime 将不会被修改，\n\n可避免 I/O 较慢的机器过度的存取磁盘。(目前建议使用文件系统挂载参数处理这个项目)\n\n- S ：一般文件是异步写入磁盘的(原理请参考前一章 sync 的说明)，如果加上 S 这个属性时，\n\n当你进行任何文件的修改，该更动会『同步』写入磁盘中。\n\n- a ：**当设定 a 之后，这个文件将只能增加数据，而不能删除也不能修改数据，只有 root 才能设定这属性**\n\n- c ：这个属性设定之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩，\n\n但是在储存的时候，将会先进行压缩后再储存(看来对于大文件似乎蛮有用的！)\n\n- d ：当 dump 程序被执行的时候，设定 d 属性将可使该文件(或目录)不会被 dump 备份\n\n- i ：**这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、设定连结也无法写入或新增数据！』\n\n对于系统安全性有相当大的帮助！只有 root 能设定此属性**\n\n- s ：当文件设定了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间，\n\n所以如果误删了，完全无法救回来了喔！\n\n- u ：与 s 相反的，当使用 u 来配置文件案时，如果该文件被删除了，则数据内容其实还存在磁盘中，\n\n可以使用来救援该文件喔！\n\n- 注意 1：属性设定常见的是 a 与 i 的设定值，而且很多设定值必须要身为 root 才能设定\n\n- 注意 2：xfs 文件系统仅支援 AadiS 而已\n\n\n\n```\n\nadmin@iZwz93u7y9mplneahfm5doZ:~$ cd /tmp/\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ touch attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ chattr +i attrtest \n\nchattr: Operation not permitted while setting flags on attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo chattr +i attrtest \n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo rm attrtest   <=此时sudo也就是root都无法删除了\n\nrm: cannot remove 'attrtest': Operation not permitted\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ chattr -i attrtest \n\nchattr: Operation not permitted while setting flags on attrtest\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ sudo chattr -i attrtest  <=把i属性取消掉就可以删除了\n\nadmin@iZwz93u7y9mplneahfm5doZ:/tmp$ rm attrtest```\n\n\n\n其中最常用的就是 **i** 和 **a** 属性了，**i** 让一个文件无法修改，无法被删除，也不能被软链接，对系统安全性有很重要的意义。**a** 让一个文件只能增加数据，无法修改和删除数据。\n\n\t\t\n\n### lsattr(显示文件隐藏属性)\n\n显示隐藏属性的指令如下： `lsattr [- adR]  文件 或者 目录`\n\n选项与参数:\n\n\n\n- \\-a ：将隐藏文件的属性也秀出来\n\n- \\-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名\n\n- \\-R ：连同子目录的数据也一并列出来","slug":"Linux 文件隐藏属性","updated":"2023-06-14T10:18:29.537Z","_id":"cl6p6180y001ktksc6xumg0zt","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我们都知道 <strong>Linux</strong> 系统文件都有 r(read)&#x2F;w(write)&#x2F;x(execute) 三个属性，但是文件系统还提供了隐藏属性，这些隐藏属性非常实用，可以进一步起到对文件的保护作用。</p>\n<h3 id=\"chattr-配置文件隐藏属性\"><a href=\"#chattr-配置文件隐藏属性\" class=\"headerlink\" title=\"chattr(配置文件隐藏属性)\"></a>chattr(配置文件隐藏属性)</h3><p>配置文件隐藏属性的指令是 <code>chattr [+- - =][ASacdistu]  文件或目录名</code></p>\n<p>其中选项和参数如下:</p>\n<p>选项与参数：</p>\n<ul>\n<li><p>+ ：增加某一个特殊参数，其他原本存在参数则不动。</p>\n</li>\n<li><p>- ：移除某一个特殊参数，其他原本存在参数则不动。</p>\n</li>\n<li><p>&#x3D; ：设定一定，且仅有后面接的参数</p>\n</li>\n<li><p>A ：当设定了 A 这个属性时，若你有存取此文件(或目录)时，他的访问时间 atime 将不会被修改，</p>\n</li>\n</ul>\n<p>可避免 I&#x2F;O 较慢的机器过度的存取磁盘。(目前建议使用文件系统挂载参数处理这个项目)</p>\n<ul>\n<li>S ：一般文件是异步写入磁盘的(原理请参考前一章 sync 的说明)，如果加上 S 这个属性时，</li>\n</ul>\n<p>当你进行任何文件的修改，该更动会『同步』写入磁盘中。</p>\n<ul>\n<li><p>a ：<strong>当设定 a 之后，这个文件将只能增加数据，而不能删除也不能修改数据，只有 root 才能设定这属性</strong></p>\n</li>\n<li><p>c ：这个属性设定之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩，</p>\n</li>\n</ul>\n<p>但是在储存的时候，将会先进行压缩后再储存(看来对于大文件似乎蛮有用的！)</p>\n<ul>\n<li><p>d ：当 dump 程序被执行的时候，设定 d 属性将可使该文件(或目录)不会被 dump 备份</p>\n</li>\n<li><p>i ：**这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、设定连结也无法写入或新增数据！』</p>\n</li>\n</ul>\n<p>对于系统安全性有相当大的帮助！只有 root 能设定此属性**</p>\n<ul>\n<li>s ：当文件设定了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间，</li>\n</ul>\n<p>所以如果误删了，完全无法救回来了喔！</p>\n<ul>\n<li>u ：与 s 相反的，当使用 u 来配置文件案时，如果该文件被删除了，则数据内容其实还存在磁盘中，</li>\n</ul>\n<p>可以使用来救援该文件喔！</p>\n<ul>\n<li><p>注意 1：属性设定常见的是 a 与 i 的设定值，而且很多设定值必须要身为 root 才能设定</p>\n</li>\n<li><p>注意 2：xfs 文件系统仅支援 AadiS 而已</p>\n</li>\n</ul>\n<p>&#96;&#96;&#96;</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:~$ cd &#x2F;tmp&#x2F;</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ touch attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ chattr +i attrtest </p>\n<p>chattr: Operation not permitted while setting flags on attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo chattr +i attrtest </p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo rm attrtest   &lt;&#x3D;此时sudo也就是root都无法删除了</p>\n<p>rm: cannot remove ‘attrtest’: Operation not permitted</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ chattr -i attrtest </p>\n<p>chattr: Operation not permitted while setting flags on attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo chattr -i attrtest  &lt;&#x3D;把i属性取消掉就可以删除了</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ rm attrtest&#96;&#96;&#96;</p>\n<p>其中最常用的就是 <strong>i</strong> 和 <strong>a</strong> 属性了，<strong>i</strong> 让一个文件无法修改，无法被删除，也不能被软链接，对系统安全性有很重要的意义。<strong>a</strong> 让一个文件只能增加数据，无法修改和删除数据。</p>\n<h3 id=\"lsattr-显示文件隐藏属性\"><a href=\"#lsattr-显示文件隐藏属性\" class=\"headerlink\" title=\"lsattr(显示文件隐藏属性)\"></a>lsattr(显示文件隐藏属性)</h3><p>显示隐藏属性的指令如下： <code>lsattr [- adR]  文件 或者 目录</code></p>\n<p>选项与参数:</p>\n<ul>\n<li><p>-a ：将隐藏文件的属性也秀出来</p>\n</li>\n<li><p>-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名</p>\n</li>\n<li><p>-R ：连同子目录的数据也一并列出来</p>\n</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我们都知道 <strong>Linux</strong> 系统文件都有 r(read)&#x2F;w(write)&#x2F;x(execute) 三个属性，但是文件系统还提供了隐藏属性，这些隐藏属性非常实用，可以进一步起到对文件的保护作用。</p>\n<h3 id=\"chattr-配置文件隐藏属性\"><a href=\"#chattr-配置文件隐藏属性\" class=\"headerlink\" title=\"chattr(配置文件隐藏属性)\"></a>chattr(配置文件隐藏属性)</h3><p>配置文件隐藏属性的指令是 <code>chattr [+- - =][ASacdistu]  文件或目录名</code></p>\n<p>其中选项和参数如下:</p>\n<p>选项与参数：</p>\n<ul>\n<li><p>+ ：增加某一个特殊参数，其他原本存在参数则不动。</p>\n</li>\n<li><p>- ：移除某一个特殊参数，其他原本存在参数则不动。</p>\n</li>\n<li><p>&#x3D; ：设定一定，且仅有后面接的参数</p>\n</li>\n<li><p>A ：当设定了 A 这个属性时，若你有存取此文件(或目录)时，他的访问时间 atime 将不会被修改，</p>\n</li>\n</ul>\n<p>可避免 I&#x2F;O 较慢的机器过度的存取磁盘。(目前建议使用文件系统挂载参数处理这个项目)</p>\n<ul>\n<li>S ：一般文件是异步写入磁盘的(原理请参考前一章 sync 的说明)，如果加上 S 这个属性时，</li>\n</ul>\n<p>当你进行任何文件的修改，该更动会『同步』写入磁盘中。</p>\n<ul>\n<li><p>a ：<strong>当设定 a 之后，这个文件将只能增加数据，而不能删除也不能修改数据，只有 root 才能设定这属性</strong></p>\n</li>\n<li><p>c ：这个属性设定之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩，</p>\n</li>\n</ul>\n<p>但是在储存的时候，将会先进行压缩后再储存(看来对于大文件似乎蛮有用的！)</p>\n<ul>\n<li><p>d ：当 dump 程序被执行的时候，设定 d 属性将可使该文件(或目录)不会被 dump 备份</p>\n</li>\n<li><p>i ：**这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、设定连结也无法写入或新增数据！』</p>\n</li>\n</ul>\n<p>对于系统安全性有相当大的帮助！只有 root 能设定此属性**</p>\n<ul>\n<li>s ：当文件设定了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间，</li>\n</ul>\n<p>所以如果误删了，完全无法救回来了喔！</p>\n<ul>\n<li>u ：与 s 相反的，当使用 u 来配置文件案时，如果该文件被删除了，则数据内容其实还存在磁盘中，</li>\n</ul>\n<p>可以使用来救援该文件喔！</p>\n<ul>\n<li><p>注意 1：属性设定常见的是 a 与 i 的设定值，而且很多设定值必须要身为 root 才能设定</p>\n</li>\n<li><p>注意 2：xfs 文件系统仅支援 AadiS 而已</p>\n</li>\n</ul>\n<p>&#96;&#96;&#96;</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:~$ cd &#x2F;tmp&#x2F;</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ touch attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ chattr +i attrtest </p>\n<p>chattr: Operation not permitted while setting flags on attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo chattr +i attrtest </p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo rm attrtest   &lt;&#x3D;此时sudo也就是root都无法删除了</p>\n<p>rm: cannot remove ‘attrtest’: Operation not permitted</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ chattr -i attrtest </p>\n<p>chattr: Operation not permitted while setting flags on attrtest</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ sudo chattr -i attrtest  &lt;&#x3D;把i属性取消掉就可以删除了</p>\n<p>admin@iZwz93u7y9mplneahfm5doZ:&#x2F;tmp$ rm attrtest&#96;&#96;&#96;</p>\n<p>其中最常用的就是 <strong>i</strong> 和 <strong>a</strong> 属性了，<strong>i</strong> 让一个文件无法修改，无法被删除，也不能被软链接，对系统安全性有很重要的意义。<strong>a</strong> 让一个文件只能增加数据，无法修改和删除数据。</p>\n<h3 id=\"lsattr-显示文件隐藏属性\"><a href=\"#lsattr-显示文件隐藏属性\" class=\"headerlink\" title=\"lsattr(显示文件隐藏属性)\"></a>lsattr(显示文件隐藏属性)</h3><p>显示隐藏属性的指令如下： <code>lsattr [- adR]  文件 或者 目录</code></p>\n<p>选项与参数:</p>\n<ul>\n<li><p>-a ：将隐藏文件的属性也秀出来</p>\n</li>\n<li><p>-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名</p>\n</li>\n<li><p>-R ：连同子目录的数据也一并列出来</p>\n</li>\n</ul>\n"},{"title":"Linux文件属性","date":"2020-02-17T21:44:05.000Z","author":"Ginta","img":"http://img.ginta.top/dm3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dm3.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n以前一直只知道 *chmod + 777 文件或者目录* 就是把文件或者文件夹的权限提升到所有人都可以使用，至于为什么是 *777* 一直没有了解过，最近在看 《鸟叔的Linux私房菜-基础篇》，记录下这部分。\n\n## 查看文件属性\n\n执行 `ls -al` 来查看一个目录下的文件和文件夹（包含隐藏的）属性。\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/89715ab9-d277-4c12-8f71-6cfa1b4bd987.png)\n\n\n\n分为七部分，以最后一行说明\n\n\n\n1.  -rw-r--r-- 文件的类型权限，一共十个字母。第一个字母是文件类型， *-* 表示是个文件，*d* 表示是个目录。后面九个每三个分为一组，表示执行权限,[rwx]分别表示可读，可写，可执行：第一组是文件所有者的权限，第二组是此所有者所在的组权限，第三组是非本人且没有加入本人所在组的权限。\n\n2. 第二个为连接到此节点的链接数，包括硬链接和软链接\n\n3. 第三个是文件（目录）所属用户 \n\n4. 第四个是文件所在的群组\n\n5. 第五个是文件大小\n\n6. 第六个是文件创建日期\n\n7. 第七个是文件名\n\n\n\n## 改变文件属性和权限\n\n1. chgrp: 改变文件所属群组\n\n2. chown: 改变文件拥有者\n\n3. chmod: 改变文件权限，SUID, SGID, SBIT 等等的特性\n\n\n\n### 改变文件所属组\n\n`chgrp users myblog.ini`\n\n把 *myblog.ini* 文件所在组改为 *uses*，如果组不存在则会报错\n\n\n\n### 改变文件的拥有者\n\n`chown ginta myblog.ini`\n\n把 *myblog.ini* 文件拥有者改为 *ginta*\n\n\n\n### 改变文件的权限 \n\nLinux文件一共有9个基本权限，分别是owner/group/others三个身份以及read/write/execute三个权限，三个三个为一组可以排列出9种权限。\n\n- r:4\n\n- w:2\n\n- e:1\n\n其中身份(owner/group/others)和权限(r/w/x)是累加的， 比如我们上边的 [-rw-r--r--] 就代表\n\n\n\n- owner = -rw = 0 + 4+2 =6\n\n- group = r-- = 4 +0 + 0 = 4\n\n- others = r-- = 4 + 0 + 0 = 4\n\n那么此文件的权限就是 644\n\n修改文件权限的命令是\n\n`chmod 777 myblog.ini`\n\n这条命令就是我之前无脑操作的，权限全开。\n\n\n\n## 总结\n\n以前的文件操作方式相当于把文件整个暴漏给了其他人，可读可写！！无知是多么可怕~","source":"_posts/Linux文件属性.md","raw":"---\ntitle: Linux文件属性\ndate: 2020-02-18 05:44:05\nauthor: Ginta\nimg: http://img.ginta.top/dm3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dm3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: Linux\npublished: false\n---\n## 前言\n\n以前一直只知道 *chmod + 777 文件或者目录* 就是把文件或者文件夹的权限提升到所有人都可以使用，至于为什么是 *777* 一直没有了解过，最近在看 《鸟叔的Linux私房菜-基础篇》，记录下这部分。\n\n## 查看文件属性\n\n执行 `ls -al` 来查看一个目录下的文件和文件夹（包含隐藏的）属性。\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/89715ab9-d277-4c12-8f71-6cfa1b4bd987.png)\n\n\n\n分为七部分，以最后一行说明\n\n\n\n1.  -rw-r--r-- 文件的类型权限，一共十个字母。第一个字母是文件类型， *-* 表示是个文件，*d* 表示是个目录。后面九个每三个分为一组，表示执行权限,[rwx]分别表示可读，可写，可执行：第一组是文件所有者的权限，第二组是此所有者所在的组权限，第三组是非本人且没有加入本人所在组的权限。\n\n2. 第二个为连接到此节点的链接数，包括硬链接和软链接\n\n3. 第三个是文件（目录）所属用户 \n\n4. 第四个是文件所在的群组\n\n5. 第五个是文件大小\n\n6. 第六个是文件创建日期\n\n7. 第七个是文件名\n\n\n\n## 改变文件属性和权限\n\n1. chgrp: 改变文件所属群组\n\n2. chown: 改变文件拥有者\n\n3. chmod: 改变文件权限，SUID, SGID, SBIT 等等的特性\n\n\n\n### 改变文件所属组\n\n`chgrp users myblog.ini`\n\n把 *myblog.ini* 文件所在组改为 *uses*，如果组不存在则会报错\n\n\n\n### 改变文件的拥有者\n\n`chown ginta myblog.ini`\n\n把 *myblog.ini* 文件拥有者改为 *ginta*\n\n\n\n### 改变文件的权限 \n\nLinux文件一共有9个基本权限，分别是owner/group/others三个身份以及read/write/execute三个权限，三个三个为一组可以排列出9种权限。\n\n- r:4\n\n- w:2\n\n- e:1\n\n其中身份(owner/group/others)和权限(r/w/x)是累加的， 比如我们上边的 [-rw-r--r--] 就代表\n\n\n\n- owner = -rw = 0 + 4+2 =6\n\n- group = r-- = 4 +0 + 0 = 4\n\n- others = r-- = 4 + 0 + 0 = 4\n\n那么此文件的权限就是 644\n\n修改文件权限的命令是\n\n`chmod 777 myblog.ini`\n\n这条命令就是我之前无脑操作的，权限全开。\n\n\n\n## 总结\n\n以前的文件操作方式相当于把文件整个暴漏给了其他人，可读可写！！无知是多么可怕~","slug":"Linux文件属性","updated":"2023-06-14T10:18:26.545Z","_id":"cl6p6180z001ntksc7oflblz4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>以前一直只知道 <em>chmod + 777 文件或者目录</em> 就是把文件或者文件夹的权限提升到所有人都可以使用，至于为什么是 <em>777</em> 一直没有了解过，最近在看 《鸟叔的Linux私房菜-基础篇》，记录下这部分。</p>\n<h2 id=\"查看文件属性\"><a href=\"#查看文件属性\" class=\"headerlink\" title=\"查看文件属性\"></a>查看文件属性</h2><p>执行 <code>ls -al</code> 来查看一个目录下的文件和文件夹（包含隐藏的）属性。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/89715ab9-d277-4c12-8f71-6cfa1b4bd987.png\"></p>\n<p>分为七部分，以最后一行说明</p>\n<ol>\n<li><p>-rw-r–r– 文件的类型权限，一共十个字母。第一个字母是文件类型， <em>-</em> 表示是个文件，<em>d</em> 表示是个目录。后面九个每三个分为一组，表示执行权限,[rwx]分别表示可读，可写，可执行：第一组是文件所有者的权限，第二组是此所有者所在的组权限，第三组是非本人且没有加入本人所在组的权限。</p>\n</li>\n<li><p>第二个为连接到此节点的链接数，包括硬链接和软链接</p>\n</li>\n<li><p>第三个是文件（目录）所属用户 </p>\n</li>\n<li><p>第四个是文件所在的群组</p>\n</li>\n<li><p>第五个是文件大小</p>\n</li>\n<li><p>第六个是文件创建日期</p>\n</li>\n<li><p>第七个是文件名</p>\n</li>\n</ol>\n<h2 id=\"改变文件属性和权限\"><a href=\"#改变文件属性和权限\" class=\"headerlink\" title=\"改变文件属性和权限\"></a>改变文件属性和权限</h2><ol>\n<li><p>chgrp: 改变文件所属群组</p>\n</li>\n<li><p>chown: 改变文件拥有者</p>\n</li>\n<li><p>chmod: 改变文件权限，SUID, SGID, SBIT 等等的特性</p>\n</li>\n</ol>\n<h3 id=\"改变文件所属组\"><a href=\"#改变文件所属组\" class=\"headerlink\" title=\"改变文件所属组\"></a>改变文件所属组</h3><p><code>chgrp users myblog.ini</code></p>\n<p>把 <em>myblog.ini</em> 文件所在组改为 <em>uses</em>，如果组不存在则会报错</p>\n<h3 id=\"改变文件的拥有者\"><a href=\"#改变文件的拥有者\" class=\"headerlink\" title=\"改变文件的拥有者\"></a>改变文件的拥有者</h3><p><code>chown ginta myblog.ini</code></p>\n<p>把 <em>myblog.ini</em> 文件拥有者改为 <em>ginta</em></p>\n<h3 id=\"改变文件的权限\"><a href=\"#改变文件的权限\" class=\"headerlink\" title=\"改变文件的权限\"></a>改变文件的权限</h3><p>Linux文件一共有9个基本权限，分别是owner&#x2F;group&#x2F;others三个身份以及read&#x2F;write&#x2F;execute三个权限，三个三个为一组可以排列出9种权限。</p>\n<ul>\n<li><p>r:4</p>\n</li>\n<li><p>w:2</p>\n</li>\n<li><p>e:1</p>\n</li>\n</ul>\n<p>其中身份(owner&#x2F;group&#x2F;others)和权限(r&#x2F;w&#x2F;x)是累加的， 比如我们上边的 [-rw-r–r–] 就代表</p>\n<ul>\n<li><p>owner &#x3D; -rw &#x3D; 0 + 4+2 &#x3D;6</p>\n</li>\n<li><p>group &#x3D; r– &#x3D; 4 +0 + 0 &#x3D; 4</p>\n</li>\n<li><p>others &#x3D; r– &#x3D; 4 + 0 + 0 &#x3D; 4</p>\n</li>\n</ul>\n<p>那么此文件的权限就是 644</p>\n<p>修改文件权限的命令是</p>\n<p><code>chmod 777 myblog.ini</code></p>\n<p>这条命令就是我之前无脑操作的，权限全开。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以前的文件操作方式相当于把文件整个暴漏给了其他人，可读可写！！无知是多么可怕~</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>以前一直只知道 <em>chmod + 777 文件或者目录</em> 就是把文件或者文件夹的权限提升到所有人都可以使用，至于为什么是 <em>777</em> 一直没有了解过，最近在看 《鸟叔的Linux私房菜-基础篇》，记录下这部分。</p>\n<h2 id=\"查看文件属性\"><a href=\"#查看文件属性\" class=\"headerlink\" title=\"查看文件属性\"></a>查看文件属性</h2><p>执行 <code>ls -al</code> 来查看一个目录下的文件和文件夹（包含隐藏的）属性。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/89715ab9-d277-4c12-8f71-6cfa1b4bd987.png\"></p>\n<p>分为七部分，以最后一行说明</p>\n<ol>\n<li><p>-rw-r–r– 文件的类型权限，一共十个字母。第一个字母是文件类型， <em>-</em> 表示是个文件，<em>d</em> 表示是个目录。后面九个每三个分为一组，表示执行权限,[rwx]分别表示可读，可写，可执行：第一组是文件所有者的权限，第二组是此所有者所在的组权限，第三组是非本人且没有加入本人所在组的权限。</p>\n</li>\n<li><p>第二个为连接到此节点的链接数，包括硬链接和软链接</p>\n</li>\n<li><p>第三个是文件（目录）所属用户 </p>\n</li>\n<li><p>第四个是文件所在的群组</p>\n</li>\n<li><p>第五个是文件大小</p>\n</li>\n<li><p>第六个是文件创建日期</p>\n</li>\n<li><p>第七个是文件名</p>\n</li>\n</ol>\n<h2 id=\"改变文件属性和权限\"><a href=\"#改变文件属性和权限\" class=\"headerlink\" title=\"改变文件属性和权限\"></a>改变文件属性和权限</h2><ol>\n<li><p>chgrp: 改变文件所属群组</p>\n</li>\n<li><p>chown: 改变文件拥有者</p>\n</li>\n<li><p>chmod: 改变文件权限，SUID, SGID, SBIT 等等的特性</p>\n</li>\n</ol>\n<h3 id=\"改变文件所属组\"><a href=\"#改变文件所属组\" class=\"headerlink\" title=\"改变文件所属组\"></a>改变文件所属组</h3><p><code>chgrp users myblog.ini</code></p>\n<p>把 <em>myblog.ini</em> 文件所在组改为 <em>uses</em>，如果组不存在则会报错</p>\n<h3 id=\"改变文件的拥有者\"><a href=\"#改变文件的拥有者\" class=\"headerlink\" title=\"改变文件的拥有者\"></a>改变文件的拥有者</h3><p><code>chown ginta myblog.ini</code></p>\n<p>把 <em>myblog.ini</em> 文件拥有者改为 <em>ginta</em></p>\n<h3 id=\"改变文件的权限\"><a href=\"#改变文件的权限\" class=\"headerlink\" title=\"改变文件的权限\"></a>改变文件的权限</h3><p>Linux文件一共有9个基本权限，分别是owner&#x2F;group&#x2F;others三个身份以及read&#x2F;write&#x2F;execute三个权限，三个三个为一组可以排列出9种权限。</p>\n<ul>\n<li><p>r:4</p>\n</li>\n<li><p>w:2</p>\n</li>\n<li><p>e:1</p>\n</li>\n</ul>\n<p>其中身份(owner&#x2F;group&#x2F;others)和权限(r&#x2F;w&#x2F;x)是累加的， 比如我们上边的 [-rw-r–r–] 就代表</p>\n<ul>\n<li><p>owner &#x3D; -rw &#x3D; 0 + 4+2 &#x3D;6</p>\n</li>\n<li><p>group &#x3D; r– &#x3D; 4 +0 + 0 &#x3D; 4</p>\n</li>\n<li><p>others &#x3D; r– &#x3D; 4 + 0 + 0 &#x3D; 4</p>\n</li>\n</ul>\n<p>那么此文件的权限就是 644</p>\n<p>修改文件权限的命令是</p>\n<p><code>chmod 777 myblog.ini</code></p>\n<p>这条命令就是我之前无脑操作的，权限全开。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以前的文件操作方式相当于把文件整个暴漏给了其他人，可读可写！！无知是多么可怕~</p>\n"},{"title":"Ubuntu系统安装redis","date":"2019-11-26T18:00:44.000Z","author":"Ginta","img":"http://img.ginta.top/dm3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dm3.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"### 前言\n\n一般爬虫是在 *Ubuntu* 系统下进行配置的，这次的任务就是在 *Ubuntu* 系统下安装 *redis*。\n\n\n\n### 步骤\n\n- `sudo apt-get install redis-server`，遇到依赖包输入 *Y* 回车即可\n\n- 启动，安装以后自动启动，可以查看 `ps aux|grep redis`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505003642237.png)\n\n- 手动启动， `sudo service redis-server start`\n\n- 停止， `sudo service redis-server stop`\n\n### 卸载\n\n`sudo apt-get purge --auto-remove redis-server`\n\n\n\n## Ubuntu连接Windows redis\n\n我这里 *Windows* 用的是本机 *redis* 服务，*ubuntu* 使用的虚拟机，也就是说是在同一个局域网下的，不同网络其实也差不多，连接其他服务器 *redis* 的命令是 `redis-cli -h host -p port`，比如我的 *Windows* 局域网 *ip* 是 *192.168.199.168* \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011442356.png) \n\n*redis*端口是 *6379* ，那命令就是 `redis-cli -h 192.168.199.168 -p 6379`：\n\n**ubunu** 下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505010716614.png)\n\n我们用 *ubuntu* 系统连接 *Windows* 系统 *redis* ，这里显示失败了，我们开 *windows* 的 *redis* 配置文件 *redis.windows.conf* 有这么一行\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019050501090661.png)\n\n意思是其他人访问 *redis* 的时候地址是这个，我们都知道 *127.0.0.1* 永远指向本机，当然不能访问成功了，我们改成本机地址就可以，一定是当前局域网的 *ip*，也就是 *bind* 一定是**服务器**的 *ip* 地址，而不是客户端的 *ip*，如果是 **0.0.0.0** 表示其他机器可以通过本机的所有网卡（一台电脑可能有多个网卡） *ip* 地址连接本机 *redis*:\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011052738.png)\n\n保存之后重启 *windows* 的 *redis* 服务，再用 *ubuntu* 连接一下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011205854.png)\n\n我们可以看到，成功了，并且访问 *username* 键，获得了它的值。","source":"_posts/Ubuntu系统安装redis.md","raw":"---\ntitle: Ubuntu系统安装redis\ndate: 2019-11-27 02:00:44\nauthor: Ginta\nimg: http://img.ginta.top/dm3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dm3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - redis\ncategories: 数据库\npublished: false\n---\n### 前言\n\n一般爬虫是在 *Ubuntu* 系统下进行配置的，这次的任务就是在 *Ubuntu* 系统下安装 *redis*。\n\n\n\n### 步骤\n\n- `sudo apt-get install redis-server`，遇到依赖包输入 *Y* 回车即可\n\n- 启动，安装以后自动启动，可以查看 `ps aux|grep redis`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505003642237.png)\n\n- 手动启动， `sudo service redis-server start`\n\n- 停止， `sudo service redis-server stop`\n\n### 卸载\n\n`sudo apt-get purge --auto-remove redis-server`\n\n\n\n## Ubuntu连接Windows redis\n\n我这里 *Windows* 用的是本机 *redis* 服务，*ubuntu* 使用的虚拟机，也就是说是在同一个局域网下的，不同网络其实也差不多，连接其他服务器 *redis* 的命令是 `redis-cli -h host -p port`，比如我的 *Windows* 局域网 *ip* 是 *192.168.199.168* \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011442356.png) \n\n*redis*端口是 *6379* ，那命令就是 `redis-cli -h 192.168.199.168 -p 6379`：\n\n**ubunu** 下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505010716614.png)\n\n我们用 *ubuntu* 系统连接 *Windows* 系统 *redis* ，这里显示失败了，我们开 *windows* 的 *redis* 配置文件 *redis.windows.conf* 有这么一行\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019050501090661.png)\n\n意思是其他人访问 *redis* 的时候地址是这个，我们都知道 *127.0.0.1* 永远指向本机，当然不能访问成功了，我们改成本机地址就可以，一定是当前局域网的 *ip*，也就是 *bind* 一定是**服务器**的 *ip* 地址，而不是客户端的 *ip*，如果是 **0.0.0.0** 表示其他机器可以通过本机的所有网卡（一台电脑可能有多个网卡） *ip* 地址连接本机 *redis*:\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011052738.png)\n\n保存之后重启 *windows* 的 *redis* 服务，再用 *ubuntu* 连接一下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190505011205854.png)\n\n我们可以看到，成功了，并且访问 *username* 键，获得了它的值。","slug":"Ubuntu系统安装redis","updated":"2023-06-14T10:18:13.074Z","_id":"cl6p6180z001utksc77jt40sh","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>一般爬虫是在 <em>Ubuntu</em> 系统下进行配置的，这次的任务就是在 <em>Ubuntu</em> 系统下安装 <em>redis</em>。</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ul>\n<li><p><code>sudo apt-get install redis-server</code>，遇到依赖包输入 <em>Y</em> 回车即可</p>\n</li>\n<li><p>启动，安装以后自动启动，可以查看 <code>ps aux|grep redis</code></p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505003642237.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><p>手动启动， <code>sudo service redis-server start</code></p>\n</li>\n<li><p>停止， <code>sudo service redis-server stop</code></p>\n</li>\n</ul>\n<h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><p><code>sudo apt-get purge --auto-remove redis-server</code></p>\n<h2 id=\"Ubuntu连接Windows-redis\"><a href=\"#Ubuntu连接Windows-redis\" class=\"headerlink\" title=\"Ubuntu连接Windows redis\"></a>Ubuntu连接Windows redis</h2><p>我这里 <em>Windows</em> 用的是本机 <em>redis</em> 服务，<em>ubuntu</em> 使用的虚拟机，也就是说是在同一个局域网下的，不同网络其实也差不多，连接其他服务器 <em>redis</em> 的命令是 <code>redis-cli -h host -p port</code>，比如我的 <em>Windows</em> 局域网 <em>ip</em> 是 <em>192.168.199.168</em> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011442356.png\" alt=\"在这里插入图片描述\"> </p>\n<p><em>redis</em>端口是 <em>6379</em> ，那命令就是 <code>redis-cli -h 192.168.199.168 -p 6379</code>：</p>\n<p><strong>ubunu</strong> 下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505010716614.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们用 <em>ubuntu</em> 系统连接 <em>Windows</em> 系统 <em>redis</em> ，这里显示失败了，我们开 <em>windows</em> 的 <em>redis</em> 配置文件 <em>redis.windows.conf</em> 有这么一行</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2019050501090661.png\" alt=\"在这里插入图片描述\"></p>\n<p>意思是其他人访问 <em>redis</em> 的时候地址是这个，我们都知道 <em>127.0.0.1</em> 永远指向本机，当然不能访问成功了，我们改成本机地址就可以，一定是当前局域网的 <em>ip</em>，也就是 <em>bind</em> 一定是<strong>服务器</strong>的 <em>ip</em> 地址，而不是客户端的 <em>ip</em>，如果是 <strong>0.0.0.0</strong> 表示其他机器可以通过本机的所有网卡（一台电脑可能有多个网卡） <em>ip</em> 地址连接本机 <em>redis</em>:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011052738.png\" alt=\"在这里插入图片描述\"></p>\n<p>保存之后重启 <em>windows</em> 的 <em>redis</em> 服务，再用 <em>ubuntu</em> 连接一下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011205854.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们可以看到，成功了，并且访问 <em>username</em> 键，获得了它的值。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>一般爬虫是在 <em>Ubuntu</em> 系统下进行配置的，这次的任务就是在 <em>Ubuntu</em> 系统下安装 <em>redis</em>。</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ul>\n<li><p><code>sudo apt-get install redis-server</code>，遇到依赖包输入 <em>Y</em> 回车即可</p>\n</li>\n<li><p>启动，安装以后自动启动，可以查看 <code>ps aux|grep redis</code></p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505003642237.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><p>手动启动， <code>sudo service redis-server start</code></p>\n</li>\n<li><p>停止， <code>sudo service redis-server stop</code></p>\n</li>\n</ul>\n<h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><p><code>sudo apt-get purge --auto-remove redis-server</code></p>\n<h2 id=\"Ubuntu连接Windows-redis\"><a href=\"#Ubuntu连接Windows-redis\" class=\"headerlink\" title=\"Ubuntu连接Windows redis\"></a>Ubuntu连接Windows redis</h2><p>我这里 <em>Windows</em> 用的是本机 <em>redis</em> 服务，<em>ubuntu</em> 使用的虚拟机，也就是说是在同一个局域网下的，不同网络其实也差不多，连接其他服务器 <em>redis</em> 的命令是 <code>redis-cli -h host -p port</code>，比如我的 <em>Windows</em> 局域网 <em>ip</em> 是 <em>192.168.199.168</em> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011442356.png\" alt=\"在这里插入图片描述\"> </p>\n<p><em>redis</em>端口是 <em>6379</em> ，那命令就是 <code>redis-cli -h 192.168.199.168 -p 6379</code>：</p>\n<p><strong>ubunu</strong> 下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505010716614.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们用 <em>ubuntu</em> 系统连接 <em>Windows</em> 系统 <em>redis</em> ，这里显示失败了，我们开 <em>windows</em> 的 <em>redis</em> 配置文件 <em>redis.windows.conf</em> 有这么一行</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2019050501090661.png\" alt=\"在这里插入图片描述\"></p>\n<p>意思是其他人访问 <em>redis</em> 的时候地址是这个，我们都知道 <em>127.0.0.1</em> 永远指向本机，当然不能访问成功了，我们改成本机地址就可以，一定是当前局域网的 <em>ip</em>，也就是 <em>bind</em> 一定是<strong>服务器</strong>的 <em>ip</em> 地址，而不是客户端的 <em>ip</em>，如果是 <strong>0.0.0.0</strong> 表示其他机器可以通过本机的所有网卡（一台电脑可能有多个网卡） <em>ip</em> 地址连接本机 <em>redis</em>:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011052738.png\" alt=\"在这里插入图片描述\"></p>\n<p>保存之后重启 <em>windows</em> 的 <em>redis</em> 服务，再用 <em>ubuntu</em> 连接一下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190505011205854.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们可以看到，成功了，并且访问 <em>username</em> 键，获得了它的值。</p>\n"},{"title":"Windows10 docker desktop k8s","date":"2020-11-14T15:30:16.000Z","author":"Ginta","img":"http://img.ginta.top/lc3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/lc3.jpg","toc":false,"mathjax":false,"summary":null,"_content":"##前言\n家里的台式机换了主板，cpu和内存之后流畅很多，图形化界面是 *Windows* 系统天然的优势，所以装了个 *docker desktop*，装完后发现可以一键安装k8s，果断开干。\n\n虽说是一键，但还是有个小问题。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232406748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n一起在启动中，等了很久都没反应，猜测是因为依赖都是外网，需要开代理。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232518138.png#pic_center)\n我的本机代理端口是1080。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232548120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n最终成功安装！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232758702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n可能有细心的发现 *k8s* 版本变了，是因为我已经成功安装，看不到 *starting* 了，于是在网上找了一张，不过这不重要~\n\n## 2021.3.12\n`docker pull` 用的是https\n之前imac上的k8s一直无法启动，配置了 *https* 代理就好了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210312164920909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","source":"_posts/Windows10 docker desktop k8s.md","raw":"---\ntitle: Windows10 docker desktop k8s\ndate: 2020-11-14 23:30:16\nauthor: Ginta\nimg: http://img.ginta.top/lc3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/lc3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - docker\n  - windows\n  - k8s\ncategories: 其他\n---\n##前言\n家里的台式机换了主板，cpu和内存之后流畅很多，图形化界面是 *Windows* 系统天然的优势，所以装了个 *docker desktop*，装完后发现可以一键安装k8s，果断开干。\n\n虽说是一键，但还是有个小问题。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232406748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n一起在启动中，等了很久都没反应，猜测是因为依赖都是外网，需要开代理。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232518138.png#pic_center)\n我的本机代理端口是1080。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232548120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n最终成功安装！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201114232758702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n可能有细心的发现 *k8s* 版本变了，是因为我已经成功安装，看不到 *starting* 了，于是在网上找了一张，不过这不重要~\n\n## 2021.3.12\n`docker pull` 用的是https\n之前imac上的k8s一直无法启动，配置了 *https* 代理就好了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210312164920909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","slug":"Windows10 docker desktop k8s","published":1,"updated":"2022-08-11T12:49:48.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6180z001vtksc2tq1cybv","content":"<p>##前言<br>家里的台式机换了主板，cpu和内存之后流畅很多，图形化界面是 <em>Windows</em> 系统天然的优势，所以装了个 <em>docker desktop</em>，装完后发现可以一键安装k8s，果断开干。</p>\n<p>虽说是一键，但还是有个小问题。<br><img src=\"https://img-blog.csdnimg.cn/20201114232406748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>一起在启动中，等了很久都没反应，猜测是因为依赖都是外网，需要开代理。<br><img src=\"https://img-blog.csdnimg.cn/20201114232518138.png#pic_center\" alt=\"在这里插入图片描述\"><br>我的本机代理端口是1080。<br><img src=\"https://img-blog.csdnimg.cn/20201114232548120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>最终成功安装！<br><img src=\"https://img-blog.csdnimg.cn/20201114232758702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>可能有细心的发现 <em>k8s</em> 版本变了，是因为我已经成功安装，看不到 <em>starting</em> 了，于是在网上找了一张，不过这不重要~</p>\n<h2 id=\"2021-3-12\"><a href=\"#2021-3-12\" class=\"headerlink\" title=\"2021.3.12\"></a>2021.3.12</h2><p><code>docker pull</code> 用的是https<br>之前imac上的k8s一直无法启动，配置了 <em>https</em> 代理就好了。<br><img src=\"https://img-blog.csdnimg.cn/20210312164920909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>##前言<br>家里的台式机换了主板，cpu和内存之后流畅很多，图形化界面是 <em>Windows</em> 系统天然的优势，所以装了个 <em>docker desktop</em>，装完后发现可以一键安装k8s，果断开干。</p>\n<p>虽说是一键，但还是有个小问题。<br><img src=\"https://img-blog.csdnimg.cn/20201114232406748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>一起在启动中，等了很久都没反应，猜测是因为依赖都是外网，需要开代理。<br><img src=\"https://img-blog.csdnimg.cn/20201114232518138.png#pic_center\" alt=\"在这里插入图片描述\"><br>我的本机代理端口是1080。<br><img src=\"https://img-blog.csdnimg.cn/20201114232548120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>最终成功安装！<br><img src=\"https://img-blog.csdnimg.cn/20201114232758702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>可能有细心的发现 <em>k8s</em> 版本变了，是因为我已经成功安装，看不到 <em>starting</em> 了，于是在网上找了一张，不过这不重要~</p>\n<h2 id=\"2021-3-12\"><a href=\"#2021-3-12\" class=\"headerlink\" title=\"2021.3.12\"></a>2021.3.12</h2><p><code>docker pull</code> 用的是https<br>之前imac上的k8s一直无法启动，配置了 <em>https</em> 代理就好了。<br><img src=\"https://img-blog.csdnimg.cn/20210312164920909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"django Signals","date":"2019-11-26T19:00:17.000Z","author":"Ginta","img":"http://img.ginta.top/huoying2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"### 前言\n\n在平时应用中我们经常遇到比如新增加一个用户就发送短信，新增加一条留言就给我们 **发送邮箱** 这种需求，一般来说都可以在视图函数中完成这些操作。但是如果有多个地方都需要类似的操作，比如用户在N个应用中都可以留言，如果在每个视图函数中都写一遍 **发送邮箱** 这种操作无疑是不明智的，好在 *django* 框架中内置了 **signals(信号)** 机制，可以辅助我们监听某些行为，比如 *model* 新增，或者请求前和请求后。\n\n\n\n\n\n### 信号\n\n官方的信号主要分为以下几种，具体介绍详见 [Django信号](https://docs.djangoproject.com/en/2.2/ref/signals/)。\n\n1. Model signals\n\n - pre_init\n\n- post_init\n\n- pre_save\n\n- post_save\n\n- pre_delete\n\n- post_delete\n\n- class_prepared\n\n2. Management signals\n\n- post_syncdb\n\n3. Request/response signals\n\n- request_started\n\n- request_finished\n\n- got_request_exception\n\n4. Test signals\n\n- template_rendered\n\n\n\n\n\n### 举例\n\n这里举一个例子，官方推荐在应用目录下新增一个 signals.py文件\n\n1. 新建并注册app，我这里app名字是 *signalapp*\n\n2. 在app下方新建signals.py文件\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191114002302755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n4. 修改 app下面的 apps.py\n\n```python\n\n# 原来\n\nfrom django.apps import AppConfig\n\n\n\nclass SignalappConfig(AppConfig):\n\n    name = 'signalapp'\n\n```\n\n\n\n```python\n\n# 现在\n\nfrom django.apps import AppConfig\n\n\n\nclass SignalappConfig(AppConfig):\n\n    name = 'signalapp'\n\n\n\n    def ready(self):\n\n        # signals are imported, so that they are defined and can be used\n\n        import signalapp.signals\n\n```\n\n4. 编写 signals.py\n\n```python\n\n# signalapp/signals.py\n\nfrom django.dispatch import receiver\n\nfrom django.db.models.signals import post_save\n\nfrom signalapp.models import Post\n\n\n\ndef send():\n\n    print(\"发送邮件\")\n\n\n\n@receiver(post_save, sender=Post, dispatch_uid='Post_post_save')\n\ndef send_email(instance, **kwargs):\n\n    send()\n\n```\n\n然后重启服务，接下来在任意地方只要新建了 **Post** 实例并保存了，该函数都将在保存之后执行。与之相对应的是函数是 **pre_save**，显然，这是在保存前执行的。 *receiver* 装饰器有三个参数：\n\n1. 第一个是要监听的信号，我这里是 post_save\n\n2. 第二个是所要监听的模型，我这里是 Post 是文章模型，所以这个函数会在每次有文章保存（新建或者更新）的时候触发\n\n3. post_save 在某个Model保存之后调用, 对于每个唯一的dispatch_uid,接收器都只被信号调用一次\n\n\n\n这个信号的功能就是每次新建或者更改文章的时候发送一个邮件（邮件函数没写。。）\n\n\n\n## 补充\n\n其他的可以参考文档，*django* 的文档写得确实很好，另外想说的就是 *sender* 不一定是模型，也可以是函数：\n\n```python\n\nimport datetime\n\nimport os\n\nimport django\n\nfrom django.dispatch import receiver, Signal\n\nfrom django.http import HttpResponse\n\n\n\n# 发送信号\n\ndef signal_sender(request):\n\n    hostname = request.get_host()\n\n    msg = 'Django Signal Test'\n\n    time = datetime.date.today()\n\n    signal_obj.send(sender=signal_sender, hostname=hostname, msg=msg, time=time)     # 关键一行\n\n    return HttpResponse('200 OK')\n\n\n\n\n\n# 接收和处理信号\n\n@receiver(signal_obj, sender=signal_sender)       # 装饰器把处理函数注册成接收器\n\ndef signal_handler(sender, **kwargs):　　　　　　   # 接收到信号后，在此处理。kwargs字典用来传递Signal信号参数\n\n    print('接收到信号内容：{hostname}|\"{msg}\"|{time}'.format(hostname=kwargs['hostname'], msg=kwargs['msg'], time=kwargs['time']))\n\n```","source":"_posts/django Signals.md","raw":"---\ntitle: django Signals\ndate: 2019-11-27 03:00:17\nauthor: Ginta\nimg: http://img.ginta.top/huoying2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - Django\ncategories: Django\npublished: false\n---\n### 前言\n\n在平时应用中我们经常遇到比如新增加一个用户就发送短信，新增加一条留言就给我们 **发送邮箱** 这种需求，一般来说都可以在视图函数中完成这些操作。但是如果有多个地方都需要类似的操作，比如用户在N个应用中都可以留言，如果在每个视图函数中都写一遍 **发送邮箱** 这种操作无疑是不明智的，好在 *django* 框架中内置了 **signals(信号)** 机制，可以辅助我们监听某些行为，比如 *model* 新增，或者请求前和请求后。\n\n\n\n\n\n### 信号\n\n官方的信号主要分为以下几种，具体介绍详见 [Django信号](https://docs.djangoproject.com/en/2.2/ref/signals/)。\n\n1. Model signals\n\n - pre_init\n\n- post_init\n\n- pre_save\n\n- post_save\n\n- pre_delete\n\n- post_delete\n\n- class_prepared\n\n2. Management signals\n\n- post_syncdb\n\n3. Request/response signals\n\n- request_started\n\n- request_finished\n\n- got_request_exception\n\n4. Test signals\n\n- template_rendered\n\n\n\n\n\n### 举例\n\n这里举一个例子，官方推荐在应用目录下新增一个 signals.py文件\n\n1. 新建并注册app，我这里app名字是 *signalapp*\n\n2. 在app下方新建signals.py文件\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191114002302755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n4. 修改 app下面的 apps.py\n\n```python\n\n# 原来\n\nfrom django.apps import AppConfig\n\n\n\nclass SignalappConfig(AppConfig):\n\n    name = 'signalapp'\n\n```\n\n\n\n```python\n\n# 现在\n\nfrom django.apps import AppConfig\n\n\n\nclass SignalappConfig(AppConfig):\n\n    name = 'signalapp'\n\n\n\n    def ready(self):\n\n        # signals are imported, so that they are defined and can be used\n\n        import signalapp.signals\n\n```\n\n4. 编写 signals.py\n\n```python\n\n# signalapp/signals.py\n\nfrom django.dispatch import receiver\n\nfrom django.db.models.signals import post_save\n\nfrom signalapp.models import Post\n\n\n\ndef send():\n\n    print(\"发送邮件\")\n\n\n\n@receiver(post_save, sender=Post, dispatch_uid='Post_post_save')\n\ndef send_email(instance, **kwargs):\n\n    send()\n\n```\n\n然后重启服务，接下来在任意地方只要新建了 **Post** 实例并保存了，该函数都将在保存之后执行。与之相对应的是函数是 **pre_save**，显然，这是在保存前执行的。 *receiver* 装饰器有三个参数：\n\n1. 第一个是要监听的信号，我这里是 post_save\n\n2. 第二个是所要监听的模型，我这里是 Post 是文章模型，所以这个函数会在每次有文章保存（新建或者更新）的时候触发\n\n3. post_save 在某个Model保存之后调用, 对于每个唯一的dispatch_uid,接收器都只被信号调用一次\n\n\n\n这个信号的功能就是每次新建或者更改文章的时候发送一个邮件（邮件函数没写。。）\n\n\n\n## 补充\n\n其他的可以参考文档，*django* 的文档写得确实很好，另外想说的就是 *sender* 不一定是模型，也可以是函数：\n\n```python\n\nimport datetime\n\nimport os\n\nimport django\n\nfrom django.dispatch import receiver, Signal\n\nfrom django.http import HttpResponse\n\n\n\n# 发送信号\n\ndef signal_sender(request):\n\n    hostname = request.get_host()\n\n    msg = 'Django Signal Test'\n\n    time = datetime.date.today()\n\n    signal_obj.send(sender=signal_sender, hostname=hostname, msg=msg, time=time)     # 关键一行\n\n    return HttpResponse('200 OK')\n\n\n\n\n\n# 接收和处理信号\n\n@receiver(signal_obj, sender=signal_sender)       # 装饰器把处理函数注册成接收器\n\ndef signal_handler(sender, **kwargs):　　　　　　   # 接收到信号后，在此处理。kwargs字典用来传递Signal信号参数\n\n    print('接收到信号内容：{hostname}|\"{msg}\"|{time}'.format(hostname=kwargs['hostname'], msg=kwargs['msg'], time=kwargs['time']))\n\n```","slug":"django Signals","updated":"2023-06-14T10:16:44.119Z","_id":"cl6p618100022tkscd1h33v6h","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在平时应用中我们经常遇到比如新增加一个用户就发送短信，新增加一条留言就给我们 <strong>发送邮箱</strong> 这种需求，一般来说都可以在视图函数中完成这些操作。但是如果有多个地方都需要类似的操作，比如用户在N个应用中都可以留言，如果在每个视图函数中都写一遍 <strong>发送邮箱</strong> 这种操作无疑是不明智的，好在 <em>django</em> 框架中内置了 <strong>signals(信号)</strong> 机制，可以辅助我们监听某些行为，比如 <em>model</em> 新增，或者请求前和请求后。</p>\n<h3 id=\"信号\"><a href=\"#信号\" class=\"headerlink\" title=\"信号\"></a>信号</h3><p>官方的信号主要分为以下几种，具体介绍详见 <a href=\"https://docs.djangoproject.com/en/2.2/ref/signals/\">Django信号</a>。</p>\n<ol>\n<li>Model signals</li>\n</ol>\n<ul>\n<li><p>pre_init</p>\n</li>\n<li><p>post_init</p>\n</li>\n<li><p>pre_save</p>\n</li>\n<li><p>post_save</p>\n</li>\n<li><p>pre_delete</p>\n</li>\n<li><p>post_delete</p>\n</li>\n<li><p>class_prepared</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Management signals</li>\n</ol>\n<ul>\n<li>post_syncdb</li>\n</ul>\n<ol start=\"3\">\n<li>Request&#x2F;response signals</li>\n</ol>\n<ul>\n<li><p>request_started</p>\n</li>\n<li><p>request_finished</p>\n</li>\n<li><p>got_request_exception</p>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Test signals</li>\n</ol>\n<ul>\n<li>template_rendered</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>这里举一个例子，官方推荐在应用目录下新增一个 signals.py文件</p>\n<ol>\n<li><p>新建并注册app，我这里app名字是 <em>signalapp</em></p>\n</li>\n<li><p>在app下方新建signals.py文件</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20191114002302755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"4\">\n<li>修改 app下面的 apps.py</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.apps <span class=\"keyword\">import</span> AppConfig</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SignalappConfig</span>(<span class=\"title class_ inherited__\">AppConfig</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;signalapp&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 现在</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.apps <span class=\"keyword\">import</span> AppConfig</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SignalappConfig</span>(<span class=\"title class_ inherited__\">AppConfig</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;signalapp&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">ready</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># signals are imported, so that they are defined and can be used</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> signalapp.signals</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编写 signals.py</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># signalapp/signals.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.dispatch <span class=\"keyword\">import</span> receiver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.signals <span class=\"keyword\">import</span> post_save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> signalapp.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;发送邮件&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@receiver(<span class=\"params\">post_save, sender=Post, dispatch_uid=<span class=\"string\">&#x27;Post_post_save&#x27;</span></span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_email</span>(<span class=\"params\">instance, **kwargs</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    send()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后重启服务，接下来在任意地方只要新建了 <strong>Post</strong> 实例并保存了，该函数都将在保存之后执行。与之相对应的是函数是 <strong>pre_save</strong>，显然，这是在保存前执行的。 <em>receiver</em> 装饰器有三个参数：</p>\n<ol>\n<li><p>第一个是要监听的信号，我这里是 post_save</p>\n</li>\n<li><p>第二个是所要监听的模型，我这里是 Post 是文章模型，所以这个函数会在每次有文章保存（新建或者更新）的时候触发</p>\n</li>\n<li><p>post_save 在某个Model保存之后调用, 对于每个唯一的dispatch_uid,接收器都只被信号调用一次</p>\n</li>\n</ol>\n<p>这个信号的功能就是每次新建或者更改文章的时候发送一个邮件（邮件函数没写。。）</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>其他的可以参考文档，<em>django</em> 的文档写得确实很好，另外想说的就是 <em>sender</em> 不一定是模型，也可以是函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> django</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.dispatch <span class=\"keyword\">import</span> receiver, Signal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送信号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_sender</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    hostname = request.get_host()</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = <span class=\"string\">&#x27;Django Signal Test&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    time = datetime.date.today()</span><br><span class=\"line\"></span><br><span class=\"line\">    signal_obj.send(sender=signal_sender, hostname=hostname, msg=msg, time=time)     <span class=\"comment\"># 关键一行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;200 OK&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收和处理信号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@receiver(<span class=\"params\">signal_obj, sender=signal_sender</span>)       </span><span class=\"comment\"># 装饰器把处理函数注册成接收器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_handler</span>(<span class=\"params\">sender, **kwargs</span>):　　　　　　   <span class=\"comment\"># 接收到信号后，在此处理。kwargs字典用来传递Signal信号参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;接收到信号内容：&#123;hostname&#125;|&quot;&#123;msg&#125;&quot;|&#123;time&#125;&#x27;</span>.<span class=\"built_in\">format</span>(hostname=kwargs[<span class=\"string\">&#x27;hostname&#x27;</span>], msg=kwargs[<span class=\"string\">&#x27;msg&#x27;</span>], time=kwargs[<span class=\"string\">&#x27;time&#x27;</span>]))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在平时应用中我们经常遇到比如新增加一个用户就发送短信，新增加一条留言就给我们 <strong>发送邮箱</strong> 这种需求，一般来说都可以在视图函数中完成这些操作。但是如果有多个地方都需要类似的操作，比如用户在N个应用中都可以留言，如果在每个视图函数中都写一遍 <strong>发送邮箱</strong> 这种操作无疑是不明智的，好在 <em>django</em> 框架中内置了 <strong>signals(信号)</strong> 机制，可以辅助我们监听某些行为，比如 <em>model</em> 新增，或者请求前和请求后。</p>\n<h3 id=\"信号\"><a href=\"#信号\" class=\"headerlink\" title=\"信号\"></a>信号</h3><p>官方的信号主要分为以下几种，具体介绍详见 <a href=\"https://docs.djangoproject.com/en/2.2/ref/signals/\">Django信号</a>。</p>\n<ol>\n<li>Model signals</li>\n</ol>\n<ul>\n<li><p>pre_init</p>\n</li>\n<li><p>post_init</p>\n</li>\n<li><p>pre_save</p>\n</li>\n<li><p>post_save</p>\n</li>\n<li><p>pre_delete</p>\n</li>\n<li><p>post_delete</p>\n</li>\n<li><p>class_prepared</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Management signals</li>\n</ol>\n<ul>\n<li>post_syncdb</li>\n</ul>\n<ol start=\"3\">\n<li>Request&#x2F;response signals</li>\n</ol>\n<ul>\n<li><p>request_started</p>\n</li>\n<li><p>request_finished</p>\n</li>\n<li><p>got_request_exception</p>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Test signals</li>\n</ol>\n<ul>\n<li>template_rendered</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>这里举一个例子，官方推荐在应用目录下新增一个 signals.py文件</p>\n<ol>\n<li><p>新建并注册app，我这里app名字是 <em>signalapp</em></p>\n</li>\n<li><p>在app下方新建signals.py文件</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20191114002302755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"4\">\n<li>修改 app下面的 apps.py</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.apps <span class=\"keyword\">import</span> AppConfig</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SignalappConfig</span>(<span class=\"title class_ inherited__\">AppConfig</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;signalapp&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 现在</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.apps <span class=\"keyword\">import</span> AppConfig</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SignalappConfig</span>(<span class=\"title class_ inherited__\">AppConfig</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;signalapp&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">ready</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># signals are imported, so that they are defined and can be used</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> signalapp.signals</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编写 signals.py</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># signalapp/signals.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.dispatch <span class=\"keyword\">import</span> receiver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.signals <span class=\"keyword\">import</span> post_save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> signalapp.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;发送邮件&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@receiver(<span class=\"params\">post_save, sender=Post, dispatch_uid=<span class=\"string\">&#x27;Post_post_save&#x27;</span></span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_email</span>(<span class=\"params\">instance, **kwargs</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    send()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后重启服务，接下来在任意地方只要新建了 <strong>Post</strong> 实例并保存了，该函数都将在保存之后执行。与之相对应的是函数是 <strong>pre_save</strong>，显然，这是在保存前执行的。 <em>receiver</em> 装饰器有三个参数：</p>\n<ol>\n<li><p>第一个是要监听的信号，我这里是 post_save</p>\n</li>\n<li><p>第二个是所要监听的模型，我这里是 Post 是文章模型，所以这个函数会在每次有文章保存（新建或者更新）的时候触发</p>\n</li>\n<li><p>post_save 在某个Model保存之后调用, 对于每个唯一的dispatch_uid,接收器都只被信号调用一次</p>\n</li>\n</ol>\n<p>这个信号的功能就是每次新建或者更改文章的时候发送一个邮件（邮件函数没写。。）</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>其他的可以参考文档，<em>django</em> 的文档写得确实很好，另外想说的就是 <em>sender</em> 不一定是模型，也可以是函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> django</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.dispatch <span class=\"keyword\">import</span> receiver, Signal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送信号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_sender</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    hostname = request.get_host()</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = <span class=\"string\">&#x27;Django Signal Test&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    time = datetime.date.today()</span><br><span class=\"line\"></span><br><span class=\"line\">    signal_obj.send(sender=signal_sender, hostname=hostname, msg=msg, time=time)     <span class=\"comment\"># 关键一行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;200 OK&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收和处理信号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@receiver(<span class=\"params\">signal_obj, sender=signal_sender</span>)       </span><span class=\"comment\"># 装饰器把处理函数注册成接收器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_handler</span>(<span class=\"params\">sender, **kwargs</span>):　　　　　　   <span class=\"comment\"># 接收到信号后，在此处理。kwargs字典用来传递Signal信号参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;接收到信号内容：&#123;hostname&#125;|&quot;&#123;msg&#125;&quot;|&#123;time&#125;&#x27;</span>.<span class=\"built_in\">format</span>(hostname=kwargs[<span class=\"string\">&#x27;hostname&#x27;</span>], msg=kwargs[<span class=\"string\">&#x27;msg&#x27;</span>], time=kwargs[<span class=\"string\">&#x27;time&#x27;</span>]))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"django 图片储存七牛云","date":"2019-11-26T18:01:47.000Z","author":"Ginta","img":"http://img.ginta.top/lc3.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/lc3.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n每次给博客添加一篇文章的时候，上传图片的时候总要心痛一下，因为服务器的空间很有限，最主要的还是感觉把博客的图片和代码放到一个地方总有种污染代码的感觉，以前就听说了七牛云很方便，于是就用一下了。\n\n\n\n## 开始\n\n首先我们要新建一个七牛云的储存空间，具体操作如下。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115112528531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n进入这里，点击 **对象存储**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115112615815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n**新建存储空间** ，存储空间的名称随意就好，配置可以仿照这里图片这个样子，然后就OK了，对于新用户首先要实名认证，不过挺快的，我申请了2个小时不到就通过了。\n\n\n\n## 使用\n\n- 首先安装依赖包\n\n`pip install django-qiniu-storage`\n\n- 然后 **settings.py** 配置新增如下\n\n```python\n\n# 七牛云配置\n\n\n\nQINIU_ACCESS_KEY = 'ACCESS_KEY'\n\n# 七牛给开发者分配的AccessKey\n\nQINIU_SECRET_KEY = 'SECRET_KEY'\n\n# 七牛给开发者分配的Secret\n\nQINIU_BUCKET_NAME = 'myblog'  # 就是刚才新建的存储空间名称\n\n# 用来存放文件的七牛空间(bucket)的名字\n\nQINIU_BUCKET_DOMAIN = '*****.bkt.clouddn.com/'\n\n# 七牛空间(bucket)的域名，别遗漏了后面的/\n\nDEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuStorage'\n\n# 只用七牛托管动态生成的文件（例如用户上传的文件）\n\nQINIU_SECURE_URL = False\n\n# 使用http\n\n\n\nPREFIX_URL = 'http://'\n\n# 文件系统更改\n\nMEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN\n\nMEDIA_ROOT = 'media/'\n\n```\n\n**QINIU_BUCKET_DOMAIN** 的位置如下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115113248223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n\n\n我的轮播图 *model* 如下\n\n```python\n\nclass Banner(BaseModel):\n\n    STATUS_NORMAL = 1\n\n    STATUS_DELETE = 0\n\n    STATUS_ITEMS = (\n\n        (STATUS_NORMAL, '正常'),\n\n        (STATUS_DELETE, '删除'),\n\n    )\n\n    \"\"\"\n\n    轮播图\n\n    \"\"\"\n\n    # upload_to 存储子目录，真实存放地址会使用配置中的MADIE_ROOT+upload_to\n\n    image = models.ImageField(upload_to='banner', verbose_name='轮播图', null=True,\n\n                              blank=True, help_text=\"轮播图片的大小规格：1920x720，或者对应的比例的图片\")\n\n    name = models.CharField(max_length=150, verbose_name='轮播图名称')\n\n    desc = models.CharField(max_length=250, verbose_name='描述信息', help_text=\"请填写描述信息\")\n\n    status = models.PositiveIntegerField(default=STATUS_NORMAL,\n\n                                         choices=STATUS_ITEMS, verbose_name='状态')\n\n    link = models.CharField(max_length=150, verbose_name='轮播图广告地址')\n\n\n\n    class Meta:\n\n        db_table = 'home_banner'\n\n        verbose_name = '轮播图'\n\n        verbose_name_plural = verbose_name\n\n\n\n    def __str__(self):\n\n        return self.name\n\n```\n\n注意 **image** 这个字段，我设置了 `upload_to='banner'` ，他就会保存到  **MADIE_ROOT+'banner'** 这个路径下，而 **MADIE_ROOT** 在配置中是 `MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN` ,也就是 `'http://*****.bkt.clouddn.com/'`\n\n于是我们的轮播图图片就会保存到类似这样的url下：\n\n`http://*****.bkt.clouddn.com/banner/20160923084104779_jAQ76Kw.jpg`\n\n\n\n## 总结\n\n基本操作就是这样了，因为网上有很多大佬已经踩过坑了，所以避免了不少麻烦。**七牛云不止可以存储图片，也可以存储其他文件，CDN加速等等，以后有需要会补充上的。**","source":"_posts/django 图片储存七牛云.md","raw":"---\ntitle: django 图片储存七牛云\ndate: 2019-11-27 02:01:47\nauthor: Ginta\nimg: http://img.ginta.top/lc3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/lc3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - python\n  - Django\ncategories: python\npublished: false\n---\n## 前言\n\n每次给博客添加一篇文章的时候，上传图片的时候总要心痛一下，因为服务器的空间很有限，最主要的还是感觉把博客的图片和代码放到一个地方总有种污染代码的感觉，以前就听说了七牛云很方便，于是就用一下了。\n\n\n\n## 开始\n\n首先我们要新建一个七牛云的储存空间，具体操作如下。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115112528531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n进入这里，点击 **对象存储**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115112615815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n**新建存储空间** ，存储空间的名称随意就好，配置可以仿照这里图片这个样子，然后就OK了，对于新用户首先要实名认证，不过挺快的，我申请了2个小时不到就通过了。\n\n\n\n## 使用\n\n- 首先安装依赖包\n\n`pip install django-qiniu-storage`\n\n- 然后 **settings.py** 配置新增如下\n\n```python\n\n# 七牛云配置\n\n\n\nQINIU_ACCESS_KEY = 'ACCESS_KEY'\n\n# 七牛给开发者分配的AccessKey\n\nQINIU_SECRET_KEY = 'SECRET_KEY'\n\n# 七牛给开发者分配的Secret\n\nQINIU_BUCKET_NAME = 'myblog'  # 就是刚才新建的存储空间名称\n\n# 用来存放文件的七牛空间(bucket)的名字\n\nQINIU_BUCKET_DOMAIN = '*****.bkt.clouddn.com/'\n\n# 七牛空间(bucket)的域名，别遗漏了后面的/\n\nDEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuStorage'\n\n# 只用七牛托管动态生成的文件（例如用户上传的文件）\n\nQINIU_SECURE_URL = False\n\n# 使用http\n\n\n\nPREFIX_URL = 'http://'\n\n# 文件系统更改\n\nMEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN\n\nMEDIA_ROOT = 'media/'\n\n```\n\n**QINIU_BUCKET_DOMAIN** 的位置如下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191115113248223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n\n\n\n我的轮播图 *model* 如下\n\n```python\n\nclass Banner(BaseModel):\n\n    STATUS_NORMAL = 1\n\n    STATUS_DELETE = 0\n\n    STATUS_ITEMS = (\n\n        (STATUS_NORMAL, '正常'),\n\n        (STATUS_DELETE, '删除'),\n\n    )\n\n    \"\"\"\n\n    轮播图\n\n    \"\"\"\n\n    # upload_to 存储子目录，真实存放地址会使用配置中的MADIE_ROOT+upload_to\n\n    image = models.ImageField(upload_to='banner', verbose_name='轮播图', null=True,\n\n                              blank=True, help_text=\"轮播图片的大小规格：1920x720，或者对应的比例的图片\")\n\n    name = models.CharField(max_length=150, verbose_name='轮播图名称')\n\n    desc = models.CharField(max_length=250, verbose_name='描述信息', help_text=\"请填写描述信息\")\n\n    status = models.PositiveIntegerField(default=STATUS_NORMAL,\n\n                                         choices=STATUS_ITEMS, verbose_name='状态')\n\n    link = models.CharField(max_length=150, verbose_name='轮播图广告地址')\n\n\n\n    class Meta:\n\n        db_table = 'home_banner'\n\n        verbose_name = '轮播图'\n\n        verbose_name_plural = verbose_name\n\n\n\n    def __str__(self):\n\n        return self.name\n\n```\n\n注意 **image** 这个字段，我设置了 `upload_to='banner'` ，他就会保存到  **MADIE_ROOT+'banner'** 这个路径下，而 **MADIE_ROOT** 在配置中是 `MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN` ,也就是 `'http://*****.bkt.clouddn.com/'`\n\n于是我们的轮播图图片就会保存到类似这样的url下：\n\n`http://*****.bkt.clouddn.com/banner/20160923084104779_jAQ76Kw.jpg`\n\n\n\n## 总结\n\n基本操作就是这样了，因为网上有很多大佬已经踩过坑了，所以避免了不少麻烦。**七牛云不止可以存储图片，也可以存储其他文件，CDN加速等等，以后有需要会补充上的。**","slug":"django 图片储存七牛云","updated":"2023-06-14T10:16:38.181Z","_id":"cl6p618100026tksc3rcw7g5w","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>每次给博客添加一篇文章的时候，上传图片的时候总要心痛一下，因为服务器的空间很有限，最主要的还是感觉把博客的图片和代码放到一个地方总有种污染代码的感觉，以前就听说了七牛云很方便，于是就用一下了。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>首先我们要新建一个七牛云的储存空间，具体操作如下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115112528531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>进入这里，点击 <strong>对象存储</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115112615815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>新建存储空间</strong> ，存储空间的名称随意就好，配置可以仿照这里图片这个样子，然后就OK了，对于新用户首先要实名认证，不过挺快的，我申请了2个小时不到就通过了。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ul>\n<li>首先安装依赖包</li>\n</ul>\n<p><code>pip install django-qiniu-storage</code></p>\n<ul>\n<li>然后 <strong>settings.py</strong> 配置新增如下</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛云配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_ACCESS_KEY = <span class=\"string\">&#x27;ACCESS_KEY&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛给开发者分配的AccessKey</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_SECRET_KEY = <span class=\"string\">&#x27;SECRET_KEY&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛给开发者分配的Secret</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_BUCKET_NAME = <span class=\"string\">&#x27;myblog&#x27;</span>  <span class=\"comment\"># 就是刚才新建的存储空间名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用来存放文件的七牛空间(bucket)的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_BUCKET_DOMAIN = <span class=\"string\">&#x27;*****.bkt.clouddn.com/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛空间(bucket)的域名，别遗漏了后面的/</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FILE_STORAGE = <span class=\"string\">&#x27;qiniustorage.backends.QiniuStorage&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只用七牛托管动态生成的文件（例如用户上传的文件）</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_SECURE_URL = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用http</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PREFIX_URL = <span class=\"string\">&#x27;http://&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件系统更改</span></span><br><span class=\"line\"></span><br><span class=\"line\">MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN</span><br><span class=\"line\"></span><br><span class=\"line\">MEDIA_ROOT = <span class=\"string\">&#x27;media/&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>QINIU_BUCKET_DOMAIN</strong> 的位置如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115113248223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>我的轮播图 <em>model</em> 如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Banner</span>(<span class=\"title class_ inherited__\">BaseModel</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_NORMAL = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_DELETE = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_ITEMS = (</span><br><span class=\"line\"></span><br><span class=\"line\">        (STATUS_NORMAL, <span class=\"string\">&#x27;正常&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        (STATUS_DELETE, <span class=\"string\">&#x27;删除&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    轮播图</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># upload_to 存储子目录，真实存放地址会使用配置中的MADIE_ROOT+upload_to</span></span><br><span class=\"line\"></span><br><span class=\"line\">    image = models.ImageField(upload_to=<span class=\"string\">&#x27;banner&#x27;</span>, verbose_name=<span class=\"string\">&#x27;轮播图&#x27;</span>, null=<span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">                              blank=<span class=\"literal\">True</span>, help_text=<span class=\"string\">&quot;轮播图片的大小规格：1920x720，或者对应的比例的图片&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">150</span>, verbose_name=<span class=\"string\">&#x27;轮播图名称&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    desc = models.CharField(max_length=<span class=\"number\">250</span>, verbose_name=<span class=\"string\">&#x27;描述信息&#x27;</span>, help_text=<span class=\"string\">&quot;请填写描述信息&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    status = models.PositiveIntegerField(default=STATUS_NORMAL,</span><br><span class=\"line\"></span><br><span class=\"line\">                                         choices=STATUS_ITEMS, verbose_name=<span class=\"string\">&#x27;状态&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    link = models.CharField(max_length=<span class=\"number\">150</span>, verbose_name=<span class=\"string\">&#x27;轮播图广告地址&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;home_banner&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name = <span class=\"string\">&#x27;轮播图&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>注意 <strong>image</strong> 这个字段，我设置了 <code>upload_to=&#39;banner&#39;</code> ，他就会保存到  <strong>MADIE_ROOT+’banner’</strong> 这个路径下，而 <strong>MADIE_ROOT</strong> 在配置中是 <code>MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN</code> ,也就是 <code>&#39;http://*****.bkt.clouddn.com/&#39;</code></p>\n<p>于是我们的轮播图图片就会保存到类似这样的url下：</p>\n<p><code>http://*****.bkt.clouddn.com/banner/20160923084104779_jAQ76Kw.jpg</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>基本操作就是这样了，因为网上有很多大佬已经踩过坑了，所以避免了不少麻烦。<strong>七牛云不止可以存储图片，也可以存储其他文件，CDN加速等等，以后有需要会补充上的。</strong></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>每次给博客添加一篇文章的时候，上传图片的时候总要心痛一下，因为服务器的空间很有限，最主要的还是感觉把博客的图片和代码放到一个地方总有种污染代码的感觉，以前就听说了七牛云很方便，于是就用一下了。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>首先我们要新建一个七牛云的储存空间，具体操作如下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115112528531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>进入这里，点击 <strong>对象存储</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115112615815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>新建存储空间</strong> ，存储空间的名称随意就好，配置可以仿照这里图片这个样子，然后就OK了，对于新用户首先要实名认证，不过挺快的，我申请了2个小时不到就通过了。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ul>\n<li>首先安装依赖包</li>\n</ul>\n<p><code>pip install django-qiniu-storage</code></p>\n<ul>\n<li>然后 <strong>settings.py</strong> 配置新增如下</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛云配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_ACCESS_KEY = <span class=\"string\">&#x27;ACCESS_KEY&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛给开发者分配的AccessKey</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_SECRET_KEY = <span class=\"string\">&#x27;SECRET_KEY&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛给开发者分配的Secret</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_BUCKET_NAME = <span class=\"string\">&#x27;myblog&#x27;</span>  <span class=\"comment\"># 就是刚才新建的存储空间名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用来存放文件的七牛空间(bucket)的名字</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_BUCKET_DOMAIN = <span class=\"string\">&#x27;*****.bkt.clouddn.com/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 七牛空间(bucket)的域名，别遗漏了后面的/</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FILE_STORAGE = <span class=\"string\">&#x27;qiniustorage.backends.QiniuStorage&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只用七牛托管动态生成的文件（例如用户上传的文件）</span></span><br><span class=\"line\"></span><br><span class=\"line\">QINIU_SECURE_URL = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用http</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PREFIX_URL = <span class=\"string\">&#x27;http://&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件系统更改</span></span><br><span class=\"line\"></span><br><span class=\"line\">MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN</span><br><span class=\"line\"></span><br><span class=\"line\">MEDIA_ROOT = <span class=\"string\">&#x27;media/&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>QINIU_BUCKET_DOMAIN</strong> 的位置如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191115113248223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>我的轮播图 <em>model</em> 如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Banner</span>(<span class=\"title class_ inherited__\">BaseModel</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_NORMAL = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_DELETE = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    STATUS_ITEMS = (</span><br><span class=\"line\"></span><br><span class=\"line\">        (STATUS_NORMAL, <span class=\"string\">&#x27;正常&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">        (STATUS_DELETE, <span class=\"string\">&#x27;删除&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    轮播图</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># upload_to 存储子目录，真实存放地址会使用配置中的MADIE_ROOT+upload_to</span></span><br><span class=\"line\"></span><br><span class=\"line\">    image = models.ImageField(upload_to=<span class=\"string\">&#x27;banner&#x27;</span>, verbose_name=<span class=\"string\">&#x27;轮播图&#x27;</span>, null=<span class=\"literal\">True</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">                              blank=<span class=\"literal\">True</span>, help_text=<span class=\"string\">&quot;轮播图片的大小规格：1920x720，或者对应的比例的图片&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">150</span>, verbose_name=<span class=\"string\">&#x27;轮播图名称&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    desc = models.CharField(max_length=<span class=\"number\">250</span>, verbose_name=<span class=\"string\">&#x27;描述信息&#x27;</span>, help_text=<span class=\"string\">&quot;请填写描述信息&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    status = models.PositiveIntegerField(default=STATUS_NORMAL,</span><br><span class=\"line\"></span><br><span class=\"line\">                                         choices=STATUS_ITEMS, verbose_name=<span class=\"string\">&#x27;状态&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    link = models.CharField(max_length=<span class=\"number\">150</span>, verbose_name=<span class=\"string\">&#x27;轮播图广告地址&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;home_banner&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name = <span class=\"string\">&#x27;轮播图&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>注意 <strong>image</strong> 这个字段，我设置了 <code>upload_to=&#39;banner&#39;</code> ，他就会保存到  <strong>MADIE_ROOT+’banner’</strong> 这个路径下，而 <strong>MADIE_ROOT</strong> 在配置中是 <code>MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN</code> ,也就是 <code>&#39;http://*****.bkt.clouddn.com/&#39;</code></p>\n<p>于是我们的轮播图图片就会保存到类似这样的url下：</p>\n<p><code>http://*****.bkt.clouddn.com/banner/20160923084104779_jAQ76Kw.jpg</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>基本操作就是这样了，因为网上有很多大佬已经踩过坑了，所以避免了不少麻烦。<strong>七牛云不止可以存储图片，也可以存储其他文件，CDN加速等等，以后有需要会补充上的。</strong></p>\n"},{"title":"django-allauth 阿里云发送邮件出现nginx 504解决方法","date":"2019-11-27T23:08:09.000Z","author":"Ginta","img":"http://img.ginta.top/huoying2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n在博客的认证中使用到了 `django-allauth` 模块进行用户注册登录，但是在注册环节配置邮箱系统的时候出了问题，搞了好几个小时终于解决了\n\n原来我的配置如下\n\n首先是github配置：\n\n```\n\nHomepage URL:\n\nhttp://ginta.top/\n\nAuthorization callback URL:\n\nhttp://ginta.top/accounts/github/login/callback/\n\n```\n\n\n\n这是`settings.py` *django-allauth* 配置\n\n```\n\n# django-allauth配置\n\nACCOUNT_EMAIL_VERIFICATION = 'mandatory' # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)\n\nACCOUNT_AUTHENTICATION_METHOD = \"username_email\"     # 登录方式(选择用户名或者邮箱都能登录)\n\nACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址\n\nACCOUNT_LOGOUT_ON_GET = False           # 用户登出(需要确认)\n\n# smtp 服务器地址\n\nEMAIL_HOST = \"smtp.qq.com\"\n\n# 默认端口25，若请求超时可尝试465\n\nEMAIL_PORT = 25\n\n# 用户名\n\nEMAIL_HOST_USER = \".....@qq.com\"\n\n# 邮箱代理授权码（不是邮箱密码）\n\nEMAIL_HOST_PASSWORD = \"******\"\n\n\n\n# 发送人\n\nEMAIL_FROM = \".....@qq.com\" #\n\n# 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost\n\nDEFAULT_FROM_EMAIL = \".....@qq.com\"\n\n```\n\n\n\n线下测试的时候没有问题，邮件也能发送，但是发布到阿里云上就是不行，一直出现邮件超时，也就是 *nginx 504* 的情况，网上有说把 *nginx* 超时时间改一下，我没尝试，一方面是因为默认已经是一分钟了，用户哪能等那么久，另一个是看到有说 **25端口** 在阿里云默认是关闭的，总之要进行一系列操作什么的，好在还可以用465端口，**但是只把25端口改成465端口还是出现超时状态！！** ，后来有看到有加上一句 `EMAIL_USE_SSL = True`，于是试了一下，解决了。最后附上完整配置, *github* 配置不变，只改 *settings.py* 就好 ：\n\n\n\n```\n\n# django-allauth配置\n\nACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)\n\nACCOUNT_AUTHENTICATION_METHOD = \"username_email\"     # 登录方式(选择用户名或者邮箱都能登录)\n\nACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址\n\nACCOUNT_LOGOUT_ON_GET = False  # 用户登出(需要确认)\n\nSOCIALACCOUNT_EMAIL_VERIFICATION = 'mandatory'\n\n# smtp 服务器地址\n\nEMAIL_HOST = \"smtp.qq.com\"\n\n# 默认端口25，若请求超时可尝试465\n\nEMAIL_PORT = 465\n\nEMAIL_USE_SSL = True\n\n# 用户名\n\nEMAIL_HOST_USER = \"***@qq.com\"\n\n# 邮箱代理授权码（不是邮箱密码）\n\nEMAIL_HOST_PASSWORD = \"****\"\n\n# 发送人\n\nEMAIL_FROM = \"***@qq.com\" #\n\n# 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost\n\nDEFAULT_FROM_EMAIL = \"***@qq.com\"\n\n```","source":"_posts/django-allauth 阿里云发送邮件出现nginx 504解决方法.md","raw":"---\ntitle: django-allauth 阿里云发送邮件出现nginx 504解决方法\ndate: 2019-11-28 07:08:09\nauthor: Ginta\nimg: http://img.ginta.top/huoying2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - Django\n  - 邮件\ncategories: Django\npublished: false\n---\n## 前言\n\n在博客的认证中使用到了 `django-allauth` 模块进行用户注册登录，但是在注册环节配置邮箱系统的时候出了问题，搞了好几个小时终于解决了\n\n原来我的配置如下\n\n首先是github配置：\n\n```\n\nHomepage URL:\n\nhttp://ginta.top/\n\nAuthorization callback URL:\n\nhttp://ginta.top/accounts/github/login/callback/\n\n```\n\n\n\n这是`settings.py` *django-allauth* 配置\n\n```\n\n# django-allauth配置\n\nACCOUNT_EMAIL_VERIFICATION = 'mandatory' # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)\n\nACCOUNT_AUTHENTICATION_METHOD = \"username_email\"     # 登录方式(选择用户名或者邮箱都能登录)\n\nACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址\n\nACCOUNT_LOGOUT_ON_GET = False           # 用户登出(需要确认)\n\n# smtp 服务器地址\n\nEMAIL_HOST = \"smtp.qq.com\"\n\n# 默认端口25，若请求超时可尝试465\n\nEMAIL_PORT = 25\n\n# 用户名\n\nEMAIL_HOST_USER = \".....@qq.com\"\n\n# 邮箱代理授权码（不是邮箱密码）\n\nEMAIL_HOST_PASSWORD = \"******\"\n\n\n\n# 发送人\n\nEMAIL_FROM = \".....@qq.com\" #\n\n# 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost\n\nDEFAULT_FROM_EMAIL = \".....@qq.com\"\n\n```\n\n\n\n线下测试的时候没有问题，邮件也能发送，但是发布到阿里云上就是不行，一直出现邮件超时，也就是 *nginx 504* 的情况，网上有说把 *nginx* 超时时间改一下，我没尝试，一方面是因为默认已经是一分钟了，用户哪能等那么久，另一个是看到有说 **25端口** 在阿里云默认是关闭的，总之要进行一系列操作什么的，好在还可以用465端口，**但是只把25端口改成465端口还是出现超时状态！！** ，后来有看到有加上一句 `EMAIL_USE_SSL = True`，于是试了一下，解决了。最后附上完整配置, *github* 配置不变，只改 *settings.py* 就好 ：\n\n\n\n```\n\n# django-allauth配置\n\nACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)\n\nACCOUNT_AUTHENTICATION_METHOD = \"username_email\"     # 登录方式(选择用户名或者邮箱都能登录)\n\nACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址\n\nACCOUNT_LOGOUT_ON_GET = False  # 用户登出(需要确认)\n\nSOCIALACCOUNT_EMAIL_VERIFICATION = 'mandatory'\n\n# smtp 服务器地址\n\nEMAIL_HOST = \"smtp.qq.com\"\n\n# 默认端口25，若请求超时可尝试465\n\nEMAIL_PORT = 465\n\nEMAIL_USE_SSL = True\n\n# 用户名\n\nEMAIL_HOST_USER = \"***@qq.com\"\n\n# 邮箱代理授权码（不是邮箱密码）\n\nEMAIL_HOST_PASSWORD = \"****\"\n\n# 发送人\n\nEMAIL_FROM = \"***@qq.com\" #\n\n# 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost\n\nDEFAULT_FROM_EMAIL = \"***@qq.com\"\n\n```","slug":"django-allauth 阿里云发送邮件出现nginx 504解决方法","updated":"2023-06-14T10:17:00.846Z","_id":"cl6p61811002atkscgcst4ed9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在博客的认证中使用到了 <code>django-allauth</code> 模块进行用户注册登录，但是在注册环节配置邮箱系统的时候出了问题，搞了好几个小时终于解决了</p>\n<p>原来我的配置如下</p>\n<p>首先是github配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Homepage URL:</span><br><span class=\"line\"></span><br><span class=\"line\">http://ginta.top/</span><br><span class=\"line\"></span><br><span class=\"line\">Authorization callback URL:</span><br><span class=\"line\"></span><br><span class=\"line\">http://ginta.top/accounts/github/login/callback/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>这是<code>settings.py</code> <em>django-allauth</em> 配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># django-allauth配置</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27; # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_AUTHENTICATION_METHOD = &quot;username_email&quot;     # 登录方式(选择用户名或者邮箱都能登录)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_LOGOUT_ON_GET = False           # 用户登出(需要确认)</span><br><span class=\"line\"></span><br><span class=\"line\"># smtp 服务器地址</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST = &quot;smtp.qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认端口25，若请求超时可尝试465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_PORT = 25</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户名</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_USER = &quot;.....@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 邮箱代理授权码（不是邮箱密码）</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = &quot;******&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 发送人</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_FROM = &quot;.....@qq.com&quot; #</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FROM_EMAIL = &quot;.....@qq.com&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>线下测试的时候没有问题，邮件也能发送，但是发布到阿里云上就是不行，一直出现邮件超时，也就是 <em>nginx 504</em> 的情况，网上有说把 <em>nginx</em> 超时时间改一下，我没尝试，一方面是因为默认已经是一分钟了，用户哪能等那么久，另一个是看到有说 <strong>25端口</strong> 在阿里云默认是关闭的，总之要进行一系列操作什么的，好在还可以用465端口，<strong>但是只把25端口改成465端口还是出现超时状态！！</strong> ，后来有看到有加上一句 <code>EMAIL_USE_SSL = True</code>，于是试了一下，解决了。最后附上完整配置, <em>github</em> 配置不变，只改 <em>settings.py</em> 就好 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># django-allauth配置</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27;  # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_AUTHENTICATION_METHOD = &quot;username_email&quot;     # 登录方式(选择用户名或者邮箱都能登录)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_LOGOUT_ON_GET = False  # 用户登出(需要确认)</span><br><span class=\"line\"></span><br><span class=\"line\">SOCIALACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># smtp 服务器地址</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST = &quot;smtp.qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认端口25，若请求超时可尝试465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_PORT = 465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_USE_SSL = True</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户名</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_USER = &quot;***@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 邮箱代理授权码（不是邮箱密码）</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = &quot;****&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 发送人</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_FROM = &quot;***@qq.com&quot; #</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FROM_EMAIL = &quot;***@qq.com&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在博客的认证中使用到了 <code>django-allauth</code> 模块进行用户注册登录，但是在注册环节配置邮箱系统的时候出了问题，搞了好几个小时终于解决了</p>\n<p>原来我的配置如下</p>\n<p>首先是github配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Homepage URL:</span><br><span class=\"line\"></span><br><span class=\"line\">http://ginta.top/</span><br><span class=\"line\"></span><br><span class=\"line\">Authorization callback URL:</span><br><span class=\"line\"></span><br><span class=\"line\">http://ginta.top/accounts/github/login/callback/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>这是<code>settings.py</code> <em>django-allauth</em> 配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># django-allauth配置</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27; # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_AUTHENTICATION_METHOD = &quot;username_email&quot;     # 登录方式(选择用户名或者邮箱都能登录)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_LOGOUT_ON_GET = False           # 用户登出(需要确认)</span><br><span class=\"line\"></span><br><span class=\"line\"># smtp 服务器地址</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST = &quot;smtp.qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认端口25，若请求超时可尝试465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_PORT = 25</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户名</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_USER = &quot;.....@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 邮箱代理授权码（不是邮箱密码）</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = &quot;******&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 发送人</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_FROM = &quot;.....@qq.com&quot; #</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FROM_EMAIL = &quot;.....@qq.com&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>线下测试的时候没有问题，邮件也能发送，但是发布到阿里云上就是不行，一直出现邮件超时，也就是 <em>nginx 504</em> 的情况，网上有说把 <em>nginx</em> 超时时间改一下，我没尝试，一方面是因为默认已经是一分钟了，用户哪能等那么久，另一个是看到有说 <strong>25端口</strong> 在阿里云默认是关闭的，总之要进行一系列操作什么的，好在还可以用465端口，<strong>但是只把25端口改成465端口还是出现超时状态！！</strong> ，后来有看到有加上一句 <code>EMAIL_USE_SSL = True</code>，于是试了一下，解决了。最后附上完整配置, <em>github</em> 配置不变，只改 <em>settings.py</em> 就好 ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># django-allauth配置</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27;  # 强制注册邮箱验证(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_AUTHENTICATION_METHOD = &quot;username_email&quot;     # 登录方式(选择用户名或者邮箱都能登录)</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_EMAIL_REQUIRED = True           # 设置用户注册的时候必须填写邮箱地址</span><br><span class=\"line\"></span><br><span class=\"line\">ACCOUNT_LOGOUT_ON_GET = False  # 用户登出(需要确认)</span><br><span class=\"line\"></span><br><span class=\"line\">SOCIALACCOUNT_EMAIL_VERIFICATION = &#x27;mandatory&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># smtp 服务器地址</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST = &quot;smtp.qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认端口25，若请求超时可尝试465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_PORT = 465</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_USE_SSL = True</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户名</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_USER = &quot;***@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 邮箱代理授权码（不是邮箱密码）</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = &quot;****&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 发送人</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_FROM = &quot;***@qq.com&quot; #</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认显示的发送人，（邮箱地址必须与发送人一致），不设置的话django默认使用的webmaster@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">DEFAULT_FROM_EMAIL = &quot;***@qq.com&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"django3 choices 新特性","date":"2019-12-03T19:43:14.000Z","author":"Ginta","img":"http://img.ginta.top/chaoshou1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/chaoshou1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n等了好久的 **Django3** 正式版本终于发布了！在看官方文档的时候看到有这么一句\n\n>\n\nCustom enumeration types TextChoices, IntegerChoices, and Choices are now available as a way to define Field.choices. TextChoices and IntegerChoices types are provided for text and integer fields\n\n\n\n具体是什么意思呢，解释起来比较麻烦，还是上代码比较清晰：\n\n```\n\nfrom django.db import models\n\n\n\n# Create your models here.\n\n\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = 1\n\n        FEMALE = 2\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n```\n\n这里新建了一个学生模型，里面只有一个性别字段。如果是以前的写法应该是这样：\n\n```\n\nfrom django.db import models\n\n\n\n# Create your models here.\n\n\n\nclass Student(models.Model):\n\n\n\n    gender_choices = (\n\n        (1, '男'),\n\n        (2, '女'),\n\n    )\n\n    gender = models.IntegerField(choices=gender_choices)\n\n```\n\n直接看起来好像并没有方便多少，只是在内部新建了一个类而已，确实如此，不过还是有区别的，比如这里我们要求字段的值是 **整数** ，新的写法会自动进行类型检查：\n\n```\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = \"ga\", gettext_lazy('男')\n\n        FEMALE = 2, gettext_lazy('女')\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n```\n\n如果我们这样写，**MALE** 的值改为 \"ga\"，在执行 `python manage.py makemigrations` 的时候会抛出以下错误：\n\n>\n\nValueError: invalid literal for int() with base 10: 'ga'\n\n\n\n如果是以前的代码则不会报错。\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/2623de9b-3a47-4bca-bed4-3329a738c558.png)\n\n这是后台显示，如果想显示中文也是可以的，把代码改成如下\n\n```\n\nfrom django.db import models\n\nfrom django.utils.translation import gettext_lazy\n\n\n\n# Create your models here.\n\n\n\n\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = 1, gettext_lazy('男')\n\n        FEMALE = 2, gettext_lazy('女')\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n\n\n```\n\n\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/dfa2606d-27a6-4463-822a-8b21fec49121.png)\n\n\n\n这就是效果了。如果是要求值是字符串，同理，只不过继承的类就不是 **models.IntegerChoices** ， 而是 **models.TextChoices** 。","source":"_posts/django3 choices 新特性.md","raw":"---\ntitle: django3 choices 新特性\ndate: 2019-12-04 03:43:14\nauthor: Ginta\nimg: http://img.ginta.top/chaoshou1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/chaoshou1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - django3\ncategories: Django\npublished: false\n---\n## 前言\n\n等了好久的 **Django3** 正式版本终于发布了！在看官方文档的时候看到有这么一句\n\n>\n\nCustom enumeration types TextChoices, IntegerChoices, and Choices are now available as a way to define Field.choices. TextChoices and IntegerChoices types are provided for text and integer fields\n\n\n\n具体是什么意思呢，解释起来比较麻烦，还是上代码比较清晰：\n\n```\n\nfrom django.db import models\n\n\n\n# Create your models here.\n\n\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = 1\n\n        FEMALE = 2\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n```\n\n这里新建了一个学生模型，里面只有一个性别字段。如果是以前的写法应该是这样：\n\n```\n\nfrom django.db import models\n\n\n\n# Create your models here.\n\n\n\nclass Student(models.Model):\n\n\n\n    gender_choices = (\n\n        (1, '男'),\n\n        (2, '女'),\n\n    )\n\n    gender = models.IntegerField(choices=gender_choices)\n\n```\n\n直接看起来好像并没有方便多少，只是在内部新建了一个类而已，确实如此，不过还是有区别的，比如这里我们要求字段的值是 **整数** ，新的写法会自动进行类型检查：\n\n```\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = \"ga\", gettext_lazy('男')\n\n        FEMALE = 2, gettext_lazy('女')\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n```\n\n如果我们这样写，**MALE** 的值改为 \"ga\"，在执行 `python manage.py makemigrations` 的时候会抛出以下错误：\n\n>\n\nValueError: invalid literal for int() with base 10: 'ga'\n\n\n\n如果是以前的代码则不会报错。\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/2623de9b-3a47-4bca-bed4-3329a738c558.png)\n\n这是后台显示，如果想显示中文也是可以的，把代码改成如下\n\n```\n\nfrom django.db import models\n\nfrom django.utils.translation import gettext_lazy\n\n\n\n# Create your models here.\n\n\n\n\n\nclass Student(models.Model):\n\n\n\n    class Gender(models.IntegerChoices):\n\n        MALE = 1, gettext_lazy('男')\n\n        FEMALE = 2, gettext_lazy('女')\n\n\n\n    gender = models.IntegerField(choices=Gender.choices)\n\n\n\n```\n\n\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/dfa2606d-27a6-4463-822a-8b21fec49121.png)\n\n\n\n这就是效果了。如果是要求值是字符串，同理，只不过继承的类就不是 **models.IntegerChoices** ， 而是 **models.TextChoices** 。","slug":"django3 choices 新特性","updated":"2023-06-14T10:17:07.256Z","_id":"cl6p61811002etksc8diu8n26","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>等了好久的 <strong>Django3</strong> 正式版本终于发布了！在看官方文档的时候看到有这么一句</p>\n<blockquote>\n</blockquote>\n<p>Custom enumeration types TextChoices, IntegerChoices, and Choices are now available as a way to define Field.choices. TextChoices and IntegerChoices types are provided for text and integer fields</p>\n<p>具体是什么意思呢，解释起来比较麻烦，还是上代码比较清晰：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = 1</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里新建了一个学生模型，里面只有一个性别字段。如果是以前的写法应该是这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender_choices = (</span><br><span class=\"line\"></span><br><span class=\"line\">        (1, &#x27;男&#x27;),</span><br><span class=\"line\"></span><br><span class=\"line\">        (2, &#x27;女&#x27;),</span><br><span class=\"line\"></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=gender_choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接看起来好像并没有方便多少，只是在内部新建了一个类而已，确实如此，不过还是有区别的，比如这里我们要求字段的值是 <strong>整数</strong> ，新的写法会自动进行类型检查：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = &quot;ga&quot;, gettext_lazy(&#x27;男&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2, gettext_lazy(&#x27;女&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>如果我们这样写，<strong>MALE</strong> 的值改为 “ga”，在执行 <code>python manage.py makemigrations</code> 的时候会抛出以下错误：</p>\n<blockquote>\n</blockquote>\n<p>ValueError: invalid literal for int() with base 10: ‘ga’</p>\n<p>如果是以前的代码则不会报错。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/2623de9b-3a47-4bca-bed4-3329a738c558.png\"></p>\n<p>这是后台显示，如果想显示中文也是可以的，把代码改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\">from django.utils.translation import gettext_lazy</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = 1, gettext_lazy(&#x27;男&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2, gettext_lazy(&#x27;女&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/dfa2606d-27a6-4463-822a-8b21fec49121.png\"></p>\n<p>这就是效果了。如果是要求值是字符串，同理，只不过继承的类就不是 <strong>models.IntegerChoices</strong> ， 而是 <strong>models.TextChoices</strong> 。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>等了好久的 <strong>Django3</strong> 正式版本终于发布了！在看官方文档的时候看到有这么一句</p>\n<blockquote>\n</blockquote>\n<p>Custom enumeration types TextChoices, IntegerChoices, and Choices are now available as a way to define Field.choices. TextChoices and IntegerChoices types are provided for text and integer fields</p>\n<p>具体是什么意思呢，解释起来比较麻烦，还是上代码比较清晰：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = 1</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里新建了一个学生模型，里面只有一个性别字段。如果是以前的写法应该是这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender_choices = (</span><br><span class=\"line\"></span><br><span class=\"line\">        (1, &#x27;男&#x27;),</span><br><span class=\"line\"></span><br><span class=\"line\">        (2, &#x27;女&#x27;),</span><br><span class=\"line\"></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=gender_choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接看起来好像并没有方便多少，只是在内部新建了一个类而已，确实如此，不过还是有区别的，比如这里我们要求字段的值是 <strong>整数</strong> ，新的写法会自动进行类型检查：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = &quot;ga&quot;, gettext_lazy(&#x27;男&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2, gettext_lazy(&#x27;女&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>如果我们这样写，<strong>MALE</strong> 的值改为 “ga”，在执行 <code>python manage.py makemigrations</code> 的时候会抛出以下错误：</p>\n<blockquote>\n</blockquote>\n<p>ValueError: invalid literal for int() with base 10: ‘ga’</p>\n<p>如果是以前的代码则不会报错。</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/2623de9b-3a47-4bca-bed4-3329a738c558.png\"></p>\n<p>这是后台显示，如果想显示中文也是可以的，把代码改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from django.db import models</span><br><span class=\"line\"></span><br><span class=\"line\">from django.utils.translation import gettext_lazy</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Create your models here.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(models.Model):</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    class Gender(models.IntegerChoices):</span><br><span class=\"line\"></span><br><span class=\"line\">        MALE = 1, gettext_lazy(&#x27;男&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        FEMALE = 2, gettext_lazy(&#x27;女&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    gender = models.IntegerField(choices=Gender.choices)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/dfa2606d-27a6-4463-822a-8b21fec49121.png\"></p>\n<p>这就是效果了。如果是要求值是字符串，同理，只不过继承的类就不是 <strong>models.IntegerChoices</strong> ， 而是 <strong>models.TextChoices</strong> 。</p>\n"},{"title":"docker pull更换源","date":"2020-08-30T06:29:59.000Z","author":"Ginta","img":"http://img.ginta.top/chaoshou2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/chaoshou2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 前言\r\n每次使用docker pull的时候总是要等待很久，在不翻墙的情况下建议使用国内的源\r\n\r\n## 步骤\r\n1. 在 /etc/docker/daemon.json 文件中添加以下参数（没有该文件则新建）：\r\n```\r\n{\r\n  \"registry-mirrors\": [\"https://9cpn8tt6.mirror.aliyuncs.com\"]\r\n}\r\n```\r\n2. 服务重启\r\n```\r\nsystemctl daemon-reload\r\nsystemctl restart docker\r\n```","source":"_posts/docker pull更换源.md","raw":"---\ntitle: docker pull更换源\ndate: 2020-08-30 14:29:59\nauthor: Ginta\nimg: http://img.ginta.top/chaoshou2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/chaoshou2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - docker\ncategories: docker\n---\n## 前言\r\n每次使用docker pull的时候总是要等待很久，在不翻墙的情况下建议使用国内的源\r\n\r\n## 步骤\r\n1. 在 /etc/docker/daemon.json 文件中添加以下参数（没有该文件则新建）：\r\n```\r\n{\r\n  \"registry-mirrors\": [\"https://9cpn8tt6.mirror.aliyuncs.com\"]\r\n}\r\n```\r\n2. 服务重启\r\n```\r\nsystemctl daemon-reload\r\nsystemctl restart docker\r\n```","slug":"docker pull更换源","published":1,"updated":"2022-08-11T12:49:48.132Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61811002itksc0y3cg2f5","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>每次使用docker pull的时候总是要等待很久，在不翻墙的情况下建议使用国内的源</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>在 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件中添加以下参数（没有该文件则新建）：</li>\n</ol>\n<pre><code>&#123;\n  &quot;registry-mirrors&quot;: [&quot;https://9cpn8tt6.mirror.aliyuncs.com&quot;]\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>服务重启</li>\n</ol>\n<pre><code>systemctl daemon-reload\nsystemctl restart docker\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>每次使用docker pull的时候总是要等待很久，在不翻墙的情况下建议使用国内的源</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>在 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件中添加以下参数（没有该文件则新建）：</li>\n</ol>\n<pre><code>&#123;\n  &quot;registry-mirrors&quot;: [&quot;https://9cpn8tt6.mirror.aliyuncs.com&quot;]\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>服务重启</li>\n</ol>\n<pre><code>systemctl daemon-reload\nsystemctl restart docker\n</code></pre>\n"},{"title":"do things matters","date":"2021-10-05T08:22:20.000Z","author":"Ginta","img":"https://img.ginta.top/dragon3.jpg","top":false,"hide":false,"cover":false,"coverImg":"https://img.ginta.top/dragon3.jpg","toc":false,"mathjax":false,"summary":null,"_content":"最近在网上看到这么一句话，“do things matters”，后面的解释触发了共鸣：\n\n>这不仅意味着努力去核心岗位做重要的事情，还意味着每一件事都会因为是我做的，而 ‘matters’.\n\n\n\n### 英雄联盟\n\n很多年前玩这个游戏的目的只有一个，上分。随着这款风靡全球的游戏流行，更多的玩家会选择在周末去网吧和朋友放飞自我，即使家用电脑已经普及，去网吧只是为了体验一种氛围。游戏机制导致天梯最多可以双人一起，因而大部分玩家更倾向于可以5人一起的匹配模式。同学几个人一起开黑的时候，我选择了单人Rank，而且选择相对较难的位置。室友曾经调侃：“你看我们大家一起玩多有意思，这游戏对于你来说简直就是孤儿游戏！”\n\n每个人对游戏都有自己的理解，诚然游戏于大部分人来说只是一种释放压力的途径，我也一样，只是挑战更高难度对我来说也是十分重要的。\n\n### 个体经济\n\n周末偶尔和朋友出门约饭，酒过三巡之后总要讨论一些时髦话题，比如哪个明星又怎样了，哪个国家政府被赶下去了，比特币最近又在作妖了......，不过此类话题基本都是几句带过，因为明星太过遥远，而币价也非我等韭菜可以操控的。最终个体经济这类话题占了上风，也往往会讨论很长时间，比如周边哪位同学的家里又帮忙购置不动产了，哪个亲戚又出国了。\n\n对于家庭对个人的经济影响我始终保留自己的意见，天下家庭何其多，富甲终是少数，纵使家里没有条件给予更多的支持，亦或是可以包揽一切，由于着更多是上一辈人的结果，也就不会有更多的感触了。\n\n### do things matters\n\n维护一个开源项目，需要经常回答群里的问题，有人问过我：“为什么喜欢做开源”。\n\n开源的话可以和很多用户沟通，他们会给出很多有趣的想法，有些建议是很有价值的，即使代码没有优化，修改之后产品本身对于用户也会更加友好。\n\n不只是开源，即使是内部项目自己也是更希望能选择更有挑战性，反馈更多的项目去尝试，如果简单的事情太多了，也会和leader申请更具挑战的项目。\n\n又回到开头的那句话了，“do things matters”。\n\n","source":"_posts/do things matters.md","raw":"---\ntitle: do things matters\ndate: 2021-10-05 16:22:20\nauthor: Ginta\nimg: https://img.ginta.top/dragon3.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: https://img.ginta.top/dragon3.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - 生活\ncategories: 生活\n---\n最近在网上看到这么一句话，“do things matters”，后面的解释触发了共鸣：\n\n>这不仅意味着努力去核心岗位做重要的事情，还意味着每一件事都会因为是我做的，而 ‘matters’.\n\n\n\n### 英雄联盟\n\n很多年前玩这个游戏的目的只有一个，上分。随着这款风靡全球的游戏流行，更多的玩家会选择在周末去网吧和朋友放飞自我，即使家用电脑已经普及，去网吧只是为了体验一种氛围。游戏机制导致天梯最多可以双人一起，因而大部分玩家更倾向于可以5人一起的匹配模式。同学几个人一起开黑的时候，我选择了单人Rank，而且选择相对较难的位置。室友曾经调侃：“你看我们大家一起玩多有意思，这游戏对于你来说简直就是孤儿游戏！”\n\n每个人对游戏都有自己的理解，诚然游戏于大部分人来说只是一种释放压力的途径，我也一样，只是挑战更高难度对我来说也是十分重要的。\n\n### 个体经济\n\n周末偶尔和朋友出门约饭，酒过三巡之后总要讨论一些时髦话题，比如哪个明星又怎样了，哪个国家政府被赶下去了，比特币最近又在作妖了......，不过此类话题基本都是几句带过，因为明星太过遥远，而币价也非我等韭菜可以操控的。最终个体经济这类话题占了上风，也往往会讨论很长时间，比如周边哪位同学的家里又帮忙购置不动产了，哪个亲戚又出国了。\n\n对于家庭对个人的经济影响我始终保留自己的意见，天下家庭何其多，富甲终是少数，纵使家里没有条件给予更多的支持，亦或是可以包揽一切，由于着更多是上一辈人的结果，也就不会有更多的感触了。\n\n### do things matters\n\n维护一个开源项目，需要经常回答群里的问题，有人问过我：“为什么喜欢做开源”。\n\n开源的话可以和很多用户沟通，他们会给出很多有趣的想法，有些建议是很有价值的，即使代码没有优化，修改之后产品本身对于用户也会更加友好。\n\n不只是开源，即使是内部项目自己也是更希望能选择更有挑战性，反馈更多的项目去尝试，如果简单的事情太多了，也会和leader申请更具挑战的项目。\n\n又回到开头的那句话了，“do things matters”。\n\n","slug":"do things matters","published":1,"updated":"2022-08-11T12:49:48.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61812002mtkscdsh8fo04","content":"<p>最近在网上看到这么一句话，“do things matters”，后面的解释触发了共鸣：</p>\n<blockquote>\n<p>这不仅意味着努力去核心岗位做重要的事情，还意味着每一件事都会因为是我做的，而 ‘matters’.</p>\n</blockquote>\n<h3 id=\"英雄联盟\"><a href=\"#英雄联盟\" class=\"headerlink\" title=\"英雄联盟\"></a>英雄联盟</h3><p>很多年前玩这个游戏的目的只有一个，上分。随着这款风靡全球的游戏流行，更多的玩家会选择在周末去网吧和朋友放飞自我，即使家用电脑已经普及，去网吧只是为了体验一种氛围。游戏机制导致天梯最多可以双人一起，因而大部分玩家更倾向于可以5人一起的匹配模式。同学几个人一起开黑的时候，我选择了单人Rank，而且选择相对较难的位置。室友曾经调侃：“你看我们大家一起玩多有意思，这游戏对于你来说简直就是孤儿游戏！”</p>\n<p>每个人对游戏都有自己的理解，诚然游戏于大部分人来说只是一种释放压力的途径，我也一样，只是挑战更高难度对我来说也是十分重要的。</p>\n<h3 id=\"个体经济\"><a href=\"#个体经济\" class=\"headerlink\" title=\"个体经济\"></a>个体经济</h3><p>周末偶尔和朋友出门约饭，酒过三巡之后总要讨论一些时髦话题，比如哪个明星又怎样了，哪个国家政府被赶下去了，比特币最近又在作妖了……，不过此类话题基本都是几句带过，因为明星太过遥远，而币价也非我等韭菜可以操控的。最终个体经济这类话题占了上风，也往往会讨论很长时间，比如周边哪位同学的家里又帮忙购置不动产了，哪个亲戚又出国了。</p>\n<p>对于家庭对个人的经济影响我始终保留自己的意见，天下家庭何其多，富甲终是少数，纵使家里没有条件给予更多的支持，亦或是可以包揽一切，由于着更多是上一辈人的结果，也就不会有更多的感触了。</p>\n<h3 id=\"do-things-matters\"><a href=\"#do-things-matters\" class=\"headerlink\" title=\"do things matters\"></a>do things matters</h3><p>维护一个开源项目，需要经常回答群里的问题，有人问过我：“为什么喜欢做开源”。</p>\n<p>开源的话可以和很多用户沟通，他们会给出很多有趣的想法，有些建议是很有价值的，即使代码没有优化，修改之后产品本身对于用户也会更加友好。</p>\n<p>不只是开源，即使是内部项目自己也是更希望能选择更有挑战性，反馈更多的项目去尝试，如果简单的事情太多了，也会和leader申请更具挑战的项目。</p>\n<p>又回到开头的那句话了，“do things matters”。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>最近在网上看到这么一句话，“do things matters”，后面的解释触发了共鸣：</p>\n<blockquote>\n<p>这不仅意味着努力去核心岗位做重要的事情，还意味着每一件事都会因为是我做的，而 ‘matters’.</p>\n</blockquote>\n<h3 id=\"英雄联盟\"><a href=\"#英雄联盟\" class=\"headerlink\" title=\"英雄联盟\"></a>英雄联盟</h3><p>很多年前玩这个游戏的目的只有一个，上分。随着这款风靡全球的游戏流行，更多的玩家会选择在周末去网吧和朋友放飞自我，即使家用电脑已经普及，去网吧只是为了体验一种氛围。游戏机制导致天梯最多可以双人一起，因而大部分玩家更倾向于可以5人一起的匹配模式。同学几个人一起开黑的时候，我选择了单人Rank，而且选择相对较难的位置。室友曾经调侃：“你看我们大家一起玩多有意思，这游戏对于你来说简直就是孤儿游戏！”</p>\n<p>每个人对游戏都有自己的理解，诚然游戏于大部分人来说只是一种释放压力的途径，我也一样，只是挑战更高难度对我来说也是十分重要的。</p>\n<h3 id=\"个体经济\"><a href=\"#个体经济\" class=\"headerlink\" title=\"个体经济\"></a>个体经济</h3><p>周末偶尔和朋友出门约饭，酒过三巡之后总要讨论一些时髦话题，比如哪个明星又怎样了，哪个国家政府被赶下去了，比特币最近又在作妖了……，不过此类话题基本都是几句带过，因为明星太过遥远，而币价也非我等韭菜可以操控的。最终个体经济这类话题占了上风，也往往会讨论很长时间，比如周边哪位同学的家里又帮忙购置不动产了，哪个亲戚又出国了。</p>\n<p>对于家庭对个人的经济影响我始终保留自己的意见，天下家庭何其多，富甲终是少数，纵使家里没有条件给予更多的支持，亦或是可以包揽一切，由于着更多是上一辈人的结果，也就不会有更多的感触了。</p>\n<h3 id=\"do-things-matters\"><a href=\"#do-things-matters\" class=\"headerlink\" title=\"do things matters\"></a>do things matters</h3><p>维护一个开源项目，需要经常回答群里的问题，有人问过我：“为什么喜欢做开源”。</p>\n<p>开源的话可以和很多用户沟通，他们会给出很多有趣的想法，有些建议是很有价值的，即使代码没有优化，修改之后产品本身对于用户也会更加友好。</p>\n<p>不只是开源，即使是内部项目自己也是更希望能选择更有挑战性，反馈更多的项目去尝试，如果简单的事情太多了，也会和leader申请更具挑战的项目。</p>\n<p>又回到开头的那句话了，“do things matters”。</p>\n"},{"title":"drf 一次错误排查","date":"2020-02-12T08:53:52.000Z","author":"Ginta","img":"http://img.ginta.top/chaoshou2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/chaoshou2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 前言\r\n在使用最新版本的 *DRF* 框架时，注册路由阶段报了一个错\r\n>>>\r\n“django.core.exceptions.ImproperlyConfigured: The included URLconf 'bingo.urls' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.” \r\n\r\n找了半天错误，期间反复查看官方文档都没有什么问题，最后使用删减排除了错误,原本用户的路由是这个\r\n```\r\nuser_router.register(\"user\", UserViewSet, base_name=\"user\")\r\n```\r\n结果报错了，我改成以下代码：\r\n```\r\nuser_router.register(\"user\", UserViewSet)\r\n```\r\n问题得到了解决，然而还是睡不着，这个参数在使用中还是很方便的，就这么删掉了肯定不好，于是上 *github* 查看了该项目的 *issues*，最后发现新版本的 *base_name* 已经被替换了：\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2019/12/02/05741e40-c072-41e6-8d32-802e5e201f9b.png)\r\n于是把 *base_name* 改成了 *basename*，问题解决！","source":"_posts/drf 一次错误排查.md","raw":"---\ntitle: drf 一次错误排查\ndate: 2020-02-12 16:53:52\nauthor: Ginta\nimg: http://img.ginta.top/chaoshou2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/chaoshou2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: Django\n---\n## 前言\r\n在使用最新版本的 *DRF* 框架时，注册路由阶段报了一个错\r\n>>>\r\n“django.core.exceptions.ImproperlyConfigured: The included URLconf 'bingo.urls' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.” \r\n\r\n找了半天错误，期间反复查看官方文档都没有什么问题，最后使用删减排除了错误,原本用户的路由是这个\r\n```\r\nuser_router.register(\"user\", UserViewSet, base_name=\"user\")\r\n```\r\n结果报错了，我改成以下代码：\r\n```\r\nuser_router.register(\"user\", UserViewSet)\r\n```\r\n问题得到了解决，然而还是睡不着，这个参数在使用中还是很方便的，就这么删掉了肯定不好，于是上 *github* 查看了该项目的 *issues*，最后发现新版本的 *base_name* 已经被替换了：\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2019/12/02/05741e40-c072-41e6-8d32-802e5e201f9b.png)\r\n于是把 *base_name* 改成了 *basename*，问题解决！","slug":"drf 一次错误排查","published":1,"updated":"2022-08-11T12:49:48.132Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61812002qtkscejgt6h1x","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在使用最新版本的 <em>DRF</em> 框架时，注册路由阶段报了一个错</p>\n<blockquote>\n<blockquote>\n<blockquote>\n</blockquote>\n<p>“django.core.exceptions.ImproperlyConfigured: The included URLconf ‘bingo.urls’ does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.” </p>\n</blockquote>\n</blockquote>\n<p>找了半天错误，期间反复查看官方文档都没有什么问题，最后使用删减排除了错误,原本用户的路由是这个</p>\n<pre><code>user_router.register(&quot;user&quot;, UserViewSet, base_name=&quot;user&quot;)\n</code></pre>\n<p>结果报错了，我改成以下代码：</p>\n<pre><code>user_router.register(&quot;user&quot;, UserViewSet)\n</code></pre>\n<p>问题得到了解决，然而还是睡不着，这个参数在使用中还是很方便的，就这么删掉了肯定不好，于是上 <em>github</em> 查看了该项目的 <em>issues</em>，最后发现新版本的 <em>base_name</em> 已经被替换了：</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/05741e40-c072-41e6-8d32-802e5e201f9b.png\"><br>于是把 <em>base_name</em> 改成了 <em>basename</em>，问题解决！</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在使用最新版本的 <em>DRF</em> 框架时，注册路由阶段报了一个错</p>\n<blockquote>\n<blockquote>\n<blockquote>\n</blockquote>\n<p>“django.core.exceptions.ImproperlyConfigured: The included URLconf ‘bingo.urls’ does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.” </p>\n</blockquote>\n</blockquote>\n<p>找了半天错误，期间反复查看官方文档都没有什么问题，最后使用删减排除了错误,原本用户的路由是这个</p>\n<pre><code>user_router.register(&quot;user&quot;, UserViewSet, base_name=&quot;user&quot;)\n</code></pre>\n<p>结果报错了，我改成以下代码：</p>\n<pre><code>user_router.register(&quot;user&quot;, UserViewSet)\n</code></pre>\n<p>问题得到了解决，然而还是睡不着，这个参数在使用中还是很方便的，就这么删掉了肯定不好，于是上 <em>github</em> 查看了该项目的 <em>issues</em>，最后发现新版本的 <em>base_name</em> 已经被替换了：</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/05741e40-c072-41e6-8d32-802e5e201f9b.png\"><br>于是把 <em>base_name</em> 改成了 <em>basename</em>，问题解决！</p>\n"},{"title":"路明非","date":"2021-07-06T16:09:03.000Z","author":"Ginta","img":"http://img.ginta.top/huoying1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying1.jpg","toc":false,"mathjax":false,"summary":"这是一个衰小孩","_content":"\n\n### 衰小孩\n```angular2html\n1、所谓弃族的命运，就是要穿越荒原，再次竖起战旗，返回故乡。死不可怕，只是一场长眠。在我可以吞噬这个世界之前，与其孤独跋涉，不如安然沉睡。我们仍会醒来。\n\n2、同一条路，和某些人一起走，就长得离谱，和另外一些人走，就短得让人舍不得迈开脚步。\n\n3、可人不是断气的时候才真的死了。有人说人会死三次，第一次是他断气的时候，从生物学上他死了；第二次是他下葬的时候，人们来参加他的葬礼，怀念他的一生，然后在社会上他死了，不再会有他的位置；第三次是最后一个记得他的人把他忘记的时候，那时候他才真正的死了。\n\n4、这个世界其实从不曾有一个人能取代另一个人的位置，所谓的取代，只是以前的那个人被遗忘了。\n\n5、比孤独更可悲的事情，就是根本不知道自己很孤独，或者分明很孤独，却把自己都骗得相信自己不孤独。\n\n6、不需要计划，在我们的战场上是没有计划的。用绝对的力量，抹掉它。\n```","source":"_posts/first.md","raw":"---\ntitle: 路明非\ndate: 2021-07-07 00:09:03\nauthor: Ginta\nimg: http://img.ginta.top/huoying1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying1.jpg\ntoc: false\nmathjax: false\nsummary: 这是一个衰小孩\ncategories: Markdown\ntags:\n  - Typora\n  - Markdown\n---\n\n\n### 衰小孩\n```angular2html\n1、所谓弃族的命运，就是要穿越荒原，再次竖起战旗，返回故乡。死不可怕，只是一场长眠。在我可以吞噬这个世界之前，与其孤独跋涉，不如安然沉睡。我们仍会醒来。\n\n2、同一条路，和某些人一起走，就长得离谱，和另外一些人走，就短得让人舍不得迈开脚步。\n\n3、可人不是断气的时候才真的死了。有人说人会死三次，第一次是他断气的时候，从生物学上他死了；第二次是他下葬的时候，人们来参加他的葬礼，怀念他的一生，然后在社会上他死了，不再会有他的位置；第三次是最后一个记得他的人把他忘记的时候，那时候他才真正的死了。\n\n4、这个世界其实从不曾有一个人能取代另一个人的位置，所谓的取代，只是以前的那个人被遗忘了。\n\n5、比孤独更可悲的事情，就是根本不知道自己很孤独，或者分明很孤独，却把自己都骗得相信自己不孤独。\n\n6、不需要计划，在我们的战场上是没有计划的。用绝对的力量，抹掉它。\n```","slug":"first","published":1,"updated":"2022-08-11T12:49:48.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61813002vtksc7van54go","content":"<h3 id=\"衰小孩\"><a href=\"#衰小孩\" class=\"headerlink\" title=\"衰小孩\"></a>衰小孩</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、所谓弃族的命运，就是要穿越荒原，再次竖起战旗，返回故乡。死不可怕，只是一场长眠。在我可以吞噬这个世界之前，与其孤独跋涉，不如安然沉睡。我们仍会醒来。</span><br><span class=\"line\"></span><br><span class=\"line\">2、同一条路，和某些人一起走，就长得离谱，和另外一些人走，就短得让人舍不得迈开脚步。</span><br><span class=\"line\"></span><br><span class=\"line\">3、可人不是断气的时候才真的死了。有人说人会死三次，第一次是他断气的时候，从生物学上他死了；第二次是他下葬的时候，人们来参加他的葬礼，怀念他的一生，然后在社会上他死了，不再会有他的位置；第三次是最后一个记得他的人把他忘记的时候，那时候他才真正的死了。</span><br><span class=\"line\"></span><br><span class=\"line\">4、这个世界其实从不曾有一个人能取代另一个人的位置，所谓的取代，只是以前的那个人被遗忘了。</span><br><span class=\"line\"></span><br><span class=\"line\">5、比孤独更可悲的事情，就是根本不知道自己很孤独，或者分明很孤独，却把自己都骗得相信自己不孤独。</span><br><span class=\"line\"></span><br><span class=\"line\">6、不需要计划，在我们的战场上是没有计划的。用绝对的力量，抹掉它。</span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"衰小孩\"><a href=\"#衰小孩\" class=\"headerlink\" title=\"衰小孩\"></a>衰小孩</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、所谓弃族的命运，就是要穿越荒原，再次竖起战旗，返回故乡。死不可怕，只是一场长眠。在我可以吞噬这个世界之前，与其孤独跋涉，不如安然沉睡。我们仍会醒来。</span><br><span class=\"line\"></span><br><span class=\"line\">2、同一条路，和某些人一起走，就长得离谱，和另外一些人走，就短得让人舍不得迈开脚步。</span><br><span class=\"line\"></span><br><span class=\"line\">3、可人不是断气的时候才真的死了。有人说人会死三次，第一次是他断气的时候，从生物学上他死了；第二次是他下葬的时候，人们来参加他的葬礼，怀念他的一生，然后在社会上他死了，不再会有他的位置；第三次是最后一个记得他的人把他忘记的时候，那时候他才真正的死了。</span><br><span class=\"line\"></span><br><span class=\"line\">4、这个世界其实从不曾有一个人能取代另一个人的位置，所谓的取代，只是以前的那个人被遗忘了。</span><br><span class=\"line\"></span><br><span class=\"line\">5、比孤独更可悲的事情，就是根本不知道自己很孤独，或者分明很孤独，却把自己都骗得相信自己不孤独。</span><br><span class=\"line\"></span><br><span class=\"line\">6、不需要计划，在我们的战场上是没有计划的。用绝对的力量，抹掉它。</span><br></pre></td></tr></table></figure>"},{"title":"supervisor + pipenv + uwsgi","date":"2019-11-19T19:28:48.000Z","author":"Ginta","img":"http://img.ginta.top/dm2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dm2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n目前我部署 *django* 项目的方式是 *uwsgi + nginx* ，*uwsgi* 重启也很方便，只需要写一句 *uwsgi --reload xxx.pid* 即可，但是即使是一句我也不想输入了，就是比较懒，于是乎就有了 **supervisor** 管理 *uwsgi* 进程，配置好以后通过 *web* 网页点一下即可。\n\n## 开始\n\n至于怎么配置 *uwsgi* 网上教程有很多，这里只讲一下怎么用 *supervisor* 启动。\n\n通过网上的教程可以先安装好 *supervisor* ，我这里有一篇 **[ubuntu python3 配置 supervisor](https://blog.csdn.net/qq_35068933/article/details/103087914)** 可供参考。我的 *supervisor* 配置目录结构如下：\n\n```\n\nsupervisor/\n\n├── conf.d\n\n│   ├── myblog.ini   # 自己配的\n\n├── supervisord.conf   # 初始化生成的配置文件（一开始就有，网上可以找到如何生成）\n\n└── var\n\n    ├── log\n\n    │   ├── myblog-stderr.log      # 后续生成的\n\n    │   ├── myblog-stdout.log\t   # 后续生成的\n\n    │   └── supervisord.log   # 后续生成的\n\n    ├── supervisord.pid   # 后续生成的\n\n    └── supervisor.sock   # 后续生成的\n\n\n\n```\n\n*supervisor* 文件夹是在 **/etc** 下面。\n\n首先配置 **supervisor/supervisord.conf** 文件，有几个地方改了一下：\n\n1.  让 socket 文件生成在 ~/etc/supervisor/var/ 目录下。**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 *root* 用户，这样直接写就可以，其他用户的路径类似于 /home/username/etc/supervisor...****\n\n```\n\n[unix_http_server]\n\nfile=/etc/supervisor/var/supervisor.sock   ; the path to the socket file\n\n```\n\n2. 修改 [inet_http_server] ，这一步主要是可以通过外部浏览器来进行控制 supervisor 进程，其中 端口号像我这样配置成 port=*:9001 ，就可以在外网通过服务器的域名下的 *9001* 端口来控制，默认是没有密码的，但是最好配置一下\n\n```\n\n[inet_http_server]         ; inet (TCP) server disabled by default\n\nport=*:9001        ; ip_address:port specifier, *:port for all iface\n\n;username=user              ; default is no username (open server)\n\n;password=123               ; default is no password (open server)\n\n```\n\n3.  类似的修改 [supervisord] 板块下的 logfile 和 pidfile 文件的路径，还有 user 改为系统用户，这样 supervisor 启动的进程将以系统用户运行，避免可能的权限问题,**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 *root* 用户，这样直接写就可以，其他用户的路径类似于 /home/username/etc/supervisor...**：\n\n```\n\n[supervisord]\n\nlogfile=/etc/supervisor/var/log/supervisord.log ; main log file; default $CWD/supervisord.log\n\npidfile=/etc/supervisor/var/supervisord.pid ; supervisord pidfile; default supervisord.pid\n\nuser=root            ; setuid to this UNIX account at startup; recommended if root\n\n```\n\n4.   [supervisorctl]板块下：\n\n```\n\n[supervisorctl]\n\nserverurl=unix:///etc/supervisor/var/supervisor.sock ; use a unix:// URL  for a unix socket\n\n```\n\n5. [include] 版块,将 /etc/supervisor/conf.d/ 目录下所有以 .ini 结尾的文件内容包含到配置中来，这样便于配置的模块化管理。\n\n```\n\n[include]\n\nfiles = /etc/supervisor/conf.d/*.ini\n\n```\n\n7. 配置 **管理uwsgi进程** 的配置文件\n\n在 **/etc/supervisor/conf.d/** 目录下新建一个配置文件，名字以 *.ini* 结尾就好，是因为我们在 *supervisor.conf* 文件中修改了配置 [include] ，所以 *supervisor* 会搜索  */etc/supervisor/conf.d/* 目录下所有以 *.ini* 结尾的文件。\n\n这是我的配置文件\n\n```\n\n[program:myblog]\n\ncommand=pipenv run uwsgi --ini /root/mysite_uwsgi/myblog.ini\n\ndirectory=/root/code/Workspace/ginta.top\n\nautostart=true\n\nautorestart=unexpected\n\nuser=root\n\nstdout_logfile=/etc/supervisor/var/log/myblog-stdout.log\n\nstderr_logfile=/etc/supervisor/var/log/myblog-stderr.log\n\n```\n\nprogram:hellodjango-blog-tutorial] 指明运行应用的进程，名为 hellodjango-blog-tutorial。\n\n\n\ncommand 为进程启动时执行的命令， 我的环境是用 pipenv 来进行包管理的所以要这样执行，如果没有用包管理直接执行 `uwsgi --ini /root/mysite_uwsgi/myblog.ini` 即可，也就是 *uwsgi* 的启动命令。\n\n\n\ndirectory 指定执行命令时所在的目录。\n\n\n\nautostart 随 Supervisor 启动自动启动进程。\n\n\n\nautorestart 进程意外退出时重启。\n\n\n\nuser 进程运行的用户，防止权限问题。\n\n\n\nstdout_logfile，stderr_logfile 日志输出文件。\n\n6. 启动 Supervisor\n\n```\n\nsupervisord -c ~/etc/supervisord.conf\n\n```\n\n7. 进入 supervisorctl 进程管理控制台：\n\n```\n\nsupervisorctl -c ~/etc/supervisord.conf\n\n```\n\n执行 update 命令更新配置文件并启动应用。\n\n\n\n浏览器输入域名，可以看到服务已经正常启动了。\n\n\n\n## 注意\n\n1. 由于我们 **supervisor** 有配置项目的日志，所以如果在 **uwsgi.ini** 中配置有日志，请把它注释掉\n\n```\n\n# myblog.ini （项目的uwsgi配置）\n\n# daemonize = /root/mysite_uwsgi/myblog.log             # 日志管理\n\n```\n\n2. **如果之前就已经运行了 uwsgi，请一定要先退出再重启 supervisor**\n\n3. *supervisor/supervisord.conf* 文件的注释符号是 **;**，比如 *;[eventlistener:theeventlistenername]*，所以我们所有的配置前面如果有 **;** ，请删掉，比如把 *;[eventlistener:theeventlistenername]* 改成 *[eventlistener:theeventlistenername]* ，不然会视作没有配置。\n\n\n\n本文配置参考了[追梦人物的博客](https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/materials/74/)。","source":"_posts/supervisor + pipenv + uwsgi.md","raw":"---\ntitle: supervisor + pipenv + uwsgi\ndate: 2019-11-20 03:28:48\nauthor: Ginta\nimg: http://img.ginta.top/dm2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dm2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - python\n  - Django\n  - 自动化\ncategories: Django\npublished: false\n---\n## 前言\n\n目前我部署 *django* 项目的方式是 *uwsgi + nginx* ，*uwsgi* 重启也很方便，只需要写一句 *uwsgi --reload xxx.pid* 即可，但是即使是一句我也不想输入了，就是比较懒，于是乎就有了 **supervisor** 管理 *uwsgi* 进程，配置好以后通过 *web* 网页点一下即可。\n\n## 开始\n\n至于怎么配置 *uwsgi* 网上教程有很多，这里只讲一下怎么用 *supervisor* 启动。\n\n通过网上的教程可以先安装好 *supervisor* ，我这里有一篇 **[ubuntu python3 配置 supervisor](https://blog.csdn.net/qq_35068933/article/details/103087914)** 可供参考。我的 *supervisor* 配置目录结构如下：\n\n```\n\nsupervisor/\n\n├── conf.d\n\n│   ├── myblog.ini   # 自己配的\n\n├── supervisord.conf   # 初始化生成的配置文件（一开始就有，网上可以找到如何生成）\n\n└── var\n\n    ├── log\n\n    │   ├── myblog-stderr.log      # 后续生成的\n\n    │   ├── myblog-stdout.log\t   # 后续生成的\n\n    │   └── supervisord.log   # 后续生成的\n\n    ├── supervisord.pid   # 后续生成的\n\n    └── supervisor.sock   # 后续生成的\n\n\n\n```\n\n*supervisor* 文件夹是在 **/etc** 下面。\n\n首先配置 **supervisor/supervisord.conf** 文件，有几个地方改了一下：\n\n1.  让 socket 文件生成在 ~/etc/supervisor/var/ 目录下。**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 *root* 用户，这样直接写就可以，其他用户的路径类似于 /home/username/etc/supervisor...****\n\n```\n\n[unix_http_server]\n\nfile=/etc/supervisor/var/supervisor.sock   ; the path to the socket file\n\n```\n\n2. 修改 [inet_http_server] ，这一步主要是可以通过外部浏览器来进行控制 supervisor 进程，其中 端口号像我这样配置成 port=*:9001 ，就可以在外网通过服务器的域名下的 *9001* 端口来控制，默认是没有密码的，但是最好配置一下\n\n```\n\n[inet_http_server]         ; inet (TCP) server disabled by default\n\nport=*:9001        ; ip_address:port specifier, *:port for all iface\n\n;username=user              ; default is no username (open server)\n\n;password=123               ; default is no password (open server)\n\n```\n\n3.  类似的修改 [supervisord] 板块下的 logfile 和 pidfile 文件的路径，还有 user 改为系统用户，这样 supervisor 启动的进程将以系统用户运行，避免可能的权限问题,**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 *root* 用户，这样直接写就可以，其他用户的路径类似于 /home/username/etc/supervisor...**：\n\n```\n\n[supervisord]\n\nlogfile=/etc/supervisor/var/log/supervisord.log ; main log file; default $CWD/supervisord.log\n\npidfile=/etc/supervisor/var/supervisord.pid ; supervisord pidfile; default supervisord.pid\n\nuser=root            ; setuid to this UNIX account at startup; recommended if root\n\n```\n\n4.   [supervisorctl]板块下：\n\n```\n\n[supervisorctl]\n\nserverurl=unix:///etc/supervisor/var/supervisor.sock ; use a unix:// URL  for a unix socket\n\n```\n\n5. [include] 版块,将 /etc/supervisor/conf.d/ 目录下所有以 .ini 结尾的文件内容包含到配置中来，这样便于配置的模块化管理。\n\n```\n\n[include]\n\nfiles = /etc/supervisor/conf.d/*.ini\n\n```\n\n7. 配置 **管理uwsgi进程** 的配置文件\n\n在 **/etc/supervisor/conf.d/** 目录下新建一个配置文件，名字以 *.ini* 结尾就好，是因为我们在 *supervisor.conf* 文件中修改了配置 [include] ，所以 *supervisor* 会搜索  */etc/supervisor/conf.d/* 目录下所有以 *.ini* 结尾的文件。\n\n这是我的配置文件\n\n```\n\n[program:myblog]\n\ncommand=pipenv run uwsgi --ini /root/mysite_uwsgi/myblog.ini\n\ndirectory=/root/code/Workspace/ginta.top\n\nautostart=true\n\nautorestart=unexpected\n\nuser=root\n\nstdout_logfile=/etc/supervisor/var/log/myblog-stdout.log\n\nstderr_logfile=/etc/supervisor/var/log/myblog-stderr.log\n\n```\n\nprogram:hellodjango-blog-tutorial] 指明运行应用的进程，名为 hellodjango-blog-tutorial。\n\n\n\ncommand 为进程启动时执行的命令， 我的环境是用 pipenv 来进行包管理的所以要这样执行，如果没有用包管理直接执行 `uwsgi --ini /root/mysite_uwsgi/myblog.ini` 即可，也就是 *uwsgi* 的启动命令。\n\n\n\ndirectory 指定执行命令时所在的目录。\n\n\n\nautostart 随 Supervisor 启动自动启动进程。\n\n\n\nautorestart 进程意外退出时重启。\n\n\n\nuser 进程运行的用户，防止权限问题。\n\n\n\nstdout_logfile，stderr_logfile 日志输出文件。\n\n6. 启动 Supervisor\n\n```\n\nsupervisord -c ~/etc/supervisord.conf\n\n```\n\n7. 进入 supervisorctl 进程管理控制台：\n\n```\n\nsupervisorctl -c ~/etc/supervisord.conf\n\n```\n\n执行 update 命令更新配置文件并启动应用。\n\n\n\n浏览器输入域名，可以看到服务已经正常启动了。\n\n\n\n## 注意\n\n1. 由于我们 **supervisor** 有配置项目的日志，所以如果在 **uwsgi.ini** 中配置有日志，请把它注释掉\n\n```\n\n# myblog.ini （项目的uwsgi配置）\n\n# daemonize = /root/mysite_uwsgi/myblog.log             # 日志管理\n\n```\n\n2. **如果之前就已经运行了 uwsgi，请一定要先退出再重启 supervisor**\n\n3. *supervisor/supervisord.conf* 文件的注释符号是 **;**，比如 *;[eventlistener:theeventlistenername]*，所以我们所有的配置前面如果有 **;** ，请删掉，比如把 *;[eventlistener:theeventlistenername]* 改成 *[eventlistener:theeventlistenername]* ，不然会视作没有配置。\n\n\n\n本文配置参考了[追梦人物的博客](https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/materials/74/)。","slug":"supervisor + pipenv + uwsgi","updated":"2023-06-14T10:18:23.537Z","_id":"cl6p61814003btkscd5c592jp","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前我部署 <em>django</em> 项目的方式是 <em>uwsgi + nginx</em> ，<em>uwsgi</em> 重启也很方便，只需要写一句 <em>uwsgi –reload xxx.pid</em> 即可，但是即使是一句我也不想输入了，就是比较懒，于是乎就有了 <strong>supervisor</strong> 管理 <em>uwsgi</em> 进程，配置好以后通过 <em>web</em> 网页点一下即可。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>至于怎么配置 <em>uwsgi</em> 网上教程有很多，这里只讲一下怎么用 <em>supervisor</em> 启动。</p>\n<p>通过网上的教程可以先安装好 <em>supervisor</em> ，我这里有一篇 <strong><a href=\"https://blog.csdn.net/qq_35068933/article/details/103087914\">ubuntu python3 配置 supervisor</a></strong> 可供参考。我的 <em>supervisor</em> 配置目录结构如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisor/</span><br><span class=\"line\"></span><br><span class=\"line\">├── conf.d</span><br><span class=\"line\"></span><br><span class=\"line\">│   ├── myblog.ini   # 自己配的</span><br><span class=\"line\"></span><br><span class=\"line\">├── supervisord.conf   # 初始化生成的配置文件（一开始就有，网上可以找到如何生成）</span><br><span class=\"line\"></span><br><span class=\"line\">└── var</span><br><span class=\"line\"></span><br><span class=\"line\">    ├── log</span><br><span class=\"line\"></span><br><span class=\"line\">    │   ├── myblog-stderr.log      # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    │   ├── myblog-stdout.log\t   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    │   └── supervisord.log   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    ├── supervisord.pid   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    └── supervisor.sock   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><em>supervisor</em> 文件夹是在 <strong>&#x2F;etc</strong> 下面。</p>\n<p>首先配置 <strong>supervisor&#x2F;supervisord.conf</strong> 文件，有几个地方改了一下：</p>\n<ol>\n<li>让 socket 文件生成在 ~&#x2F;etc&#x2F;supervisor&#x2F;var&#x2F; 目录下。<strong>注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 <em>root</em> 用户，这样直接写就可以，其他用户的路径类似于 &#x2F;home&#x2F;username&#x2F;etc&#x2F;supervisor…</strong>**</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[unix_http_server]</span><br><span class=\"line\"></span><br><span class=\"line\">file=/etc/supervisor/var/supervisor.sock   ; the path to the socket file</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改 [inet_http_server] ，这一步主要是可以通过外部浏览器来进行控制 supervisor 进程，其中 端口号像我这样配置成 port&#x3D;*:9001 ，就可以在外网通过服务器的域名下的 <em>9001</em> 端口来控制，默认是没有密码的，但是最好配置一下</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class=\"line\"></span><br><span class=\"line\">port=*:9001        ; ip_address:port specifier, *:port for all iface</span><br><span class=\"line\"></span><br><span class=\"line\">;username=user              ; default is no username (open server)</span><br><span class=\"line\"></span><br><span class=\"line\">;password=123               ; default is no password (open server)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>类似的修改 [supervisord] 板块下的 logfile 和 pidfile 文件的路径，还有 user 改为系统用户，这样 supervisor 启动的进程将以系统用户运行，避免可能的权限问题,**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 <em>root</em> 用户，这样直接写就可以，其他用户的路径类似于 &#x2F;home&#x2F;username&#x2F;etc&#x2F;supervisor…**：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[supervisord]</span><br><span class=\"line\"></span><br><span class=\"line\">logfile=/etc/supervisor/var/log/supervisord.log ; main log file; default $CWD/supervisord.log</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile=/etc/supervisor/var/supervisord.pid ; supervisord pidfile; default supervisord.pid</span><br><span class=\"line\"></span><br><span class=\"line\">user=root            ; setuid to this UNIX account at startup; recommended if root</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>[supervisorctl]板块下：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[supervisorctl]</span><br><span class=\"line\"></span><br><span class=\"line\">serverurl=unix:///etc/supervisor/var/supervisor.sock ; use a unix:// URL  for a unix socket</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>[include] 版块,将 &#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F; 目录下所有以 .ini 结尾的文件内容包含到配置中来，这样便于配置的模块化管理。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[include]</span><br><span class=\"line\"></span><br><span class=\"line\">files = /etc/supervisor/conf.d/*.ini</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>配置 <strong>管理uwsgi进程</strong> 的配置文件</li>\n</ol>\n<p>在 <strong>&#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F;</strong> 目录下新建一个配置文件，名字以 <em>.ini</em> 结尾就好，是因为我们在 <em>supervisor.conf</em> 文件中修改了配置 [include] ，所以 <em>supervisor</em> 会搜索  <em>&#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F;</em> 目录下所有以 <em>.ini</em> 结尾的文件。</p>\n<p>这是我的配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[program:myblog]</span><br><span class=\"line\"></span><br><span class=\"line\">command=pipenv run uwsgi --ini /root/mysite_uwsgi/myblog.ini</span><br><span class=\"line\"></span><br><span class=\"line\">directory=/root/code/Workspace/ginta.top</span><br><span class=\"line\"></span><br><span class=\"line\">autostart=true</span><br><span class=\"line\"></span><br><span class=\"line\">autorestart=unexpected</span><br><span class=\"line\"></span><br><span class=\"line\">user=root</span><br><span class=\"line\"></span><br><span class=\"line\">stdout_logfile=/etc/supervisor/var/log/myblog-stdout.log</span><br><span class=\"line\"></span><br><span class=\"line\">stderr_logfile=/etc/supervisor/var/log/myblog-stderr.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>program:hellodjango-blog-tutorial] 指明运行应用的进程，名为 hellodjango-blog-tutorial。</p>\n<p>command 为进程启动时执行的命令， 我的环境是用 pipenv 来进行包管理的所以要这样执行，如果没有用包管理直接执行 <code>uwsgi --ini /root/mysite_uwsgi/myblog.ini</code> 即可，也就是 <em>uwsgi</em> 的启动命令。</p>\n<p>directory 指定执行命令时所在的目录。</p>\n<p>autostart 随 Supervisor 启动自动启动进程。</p>\n<p>autorestart 进程意外退出时重启。</p>\n<p>user 进程运行的用户，防止权限问题。</p>\n<p>stdout_logfile，stderr_logfile 日志输出文件。</p>\n<ol start=\"6\">\n<li>启动 Supervisor</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisord -c ~/etc/supervisord.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>进入 supervisorctl 进程管理控制台：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisorctl -c ~/etc/supervisord.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>执行 update 命令更新配置文件并启动应用。</p>\n<p>浏览器输入域名，可以看到服务已经正常启动了。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ol>\n<li>由于我们 <strong>supervisor</strong> 有配置项目的日志，所以如果在 <strong>uwsgi.ini</strong> 中配置有日志，请把它注释掉</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># myblog.ini （项目的uwsgi配置）</span><br><span class=\"line\"></span><br><span class=\"line\"># daemonize = /root/mysite_uwsgi/myblog.log             # 日志管理</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p><strong>如果之前就已经运行了 uwsgi，请一定要先退出再重启 supervisor</strong></p>\n</li>\n<li><p><em>supervisor&#x2F;supervisord.conf</em> 文件的注释符号是 **;**，比如 *;[eventlistener:theeventlistenername]*，所以我们所有的配置前面如果有 <strong>;</strong> ，请删掉，比如把 <em>;[eventlistener:theeventlistenername]</em> 改成 <em>[eventlistener:theeventlistenername]</em> ，不然会视作没有配置。</p>\n</li>\n</ol>\n<p>本文配置参考了<a href=\"https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/materials/74/\">追梦人物的博客</a>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前我部署 <em>django</em> 项目的方式是 <em>uwsgi + nginx</em> ，<em>uwsgi</em> 重启也很方便，只需要写一句 <em>uwsgi –reload xxx.pid</em> 即可，但是即使是一句我也不想输入了，就是比较懒，于是乎就有了 <strong>supervisor</strong> 管理 <em>uwsgi</em> 进程，配置好以后通过 <em>web</em> 网页点一下即可。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>至于怎么配置 <em>uwsgi</em> 网上教程有很多，这里只讲一下怎么用 <em>supervisor</em> 启动。</p>\n<p>通过网上的教程可以先安装好 <em>supervisor</em> ，我这里有一篇 <strong><a href=\"https://blog.csdn.net/qq_35068933/article/details/103087914\">ubuntu python3 配置 supervisor</a></strong> 可供参考。我的 <em>supervisor</em> 配置目录结构如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisor/</span><br><span class=\"line\"></span><br><span class=\"line\">├── conf.d</span><br><span class=\"line\"></span><br><span class=\"line\">│   ├── myblog.ini   # 自己配的</span><br><span class=\"line\"></span><br><span class=\"line\">├── supervisord.conf   # 初始化生成的配置文件（一开始就有，网上可以找到如何生成）</span><br><span class=\"line\"></span><br><span class=\"line\">└── var</span><br><span class=\"line\"></span><br><span class=\"line\">    ├── log</span><br><span class=\"line\"></span><br><span class=\"line\">    │   ├── myblog-stderr.log      # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    │   ├── myblog-stdout.log\t   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    │   └── supervisord.log   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    ├── supervisord.pid   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\">    └── supervisor.sock   # 后续生成的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><em>supervisor</em> 文件夹是在 <strong>&#x2F;etc</strong> 下面。</p>\n<p>首先配置 <strong>supervisor&#x2F;supervisord.conf</strong> 文件，有几个地方改了一下：</p>\n<ol>\n<li>让 socket 文件生成在 ~&#x2F;etc&#x2F;supervisor&#x2F;var&#x2F; 目录下。<strong>注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 <em>root</em> 用户，这样直接写就可以，其他用户的路径类似于 &#x2F;home&#x2F;username&#x2F;etc&#x2F;supervisor…</strong>**</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[unix_http_server]</span><br><span class=\"line\"></span><br><span class=\"line\">file=/etc/supervisor/var/supervisor.sock   ; the path to the socket file</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改 [inet_http_server] ，这一步主要是可以通过外部浏览器来进行控制 supervisor 进程，其中 端口号像我这样配置成 port&#x3D;*:9001 ，就可以在外网通过服务器的域名下的 <em>9001</em> 端口来控制，默认是没有密码的，但是最好配置一下</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class=\"line\"></span><br><span class=\"line\">port=*:9001        ; ip_address:port specifier, *:port for all iface</span><br><span class=\"line\"></span><br><span class=\"line\">;username=user              ; default is no username (open server)</span><br><span class=\"line\"></span><br><span class=\"line\">;password=123               ; default is no password (open server)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>类似的修改 [supervisord] 板块下的 logfile 和 pidfile 文件的路径，还有 user 改为系统用户，这样 supervisor 启动的进程将以系统用户运行，避免可能的权限问题,**注意 supervisor 不支持将 ~ 展开为用户 home 目录，所以要用绝对路径指定。我这里是 <em>root</em> 用户，这样直接写就可以，其他用户的路径类似于 &#x2F;home&#x2F;username&#x2F;etc&#x2F;supervisor…**：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[supervisord]</span><br><span class=\"line\"></span><br><span class=\"line\">logfile=/etc/supervisor/var/log/supervisord.log ; main log file; default $CWD/supervisord.log</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile=/etc/supervisor/var/supervisord.pid ; supervisord pidfile; default supervisord.pid</span><br><span class=\"line\"></span><br><span class=\"line\">user=root            ; setuid to this UNIX account at startup; recommended if root</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>[supervisorctl]板块下：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[supervisorctl]</span><br><span class=\"line\"></span><br><span class=\"line\">serverurl=unix:///etc/supervisor/var/supervisor.sock ; use a unix:// URL  for a unix socket</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>[include] 版块,将 &#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F; 目录下所有以 .ini 结尾的文件内容包含到配置中来，这样便于配置的模块化管理。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[include]</span><br><span class=\"line\"></span><br><span class=\"line\">files = /etc/supervisor/conf.d/*.ini</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>配置 <strong>管理uwsgi进程</strong> 的配置文件</li>\n</ol>\n<p>在 <strong>&#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F;</strong> 目录下新建一个配置文件，名字以 <em>.ini</em> 结尾就好，是因为我们在 <em>supervisor.conf</em> 文件中修改了配置 [include] ，所以 <em>supervisor</em> 会搜索  <em>&#x2F;etc&#x2F;supervisor&#x2F;conf.d&#x2F;</em> 目录下所有以 <em>.ini</em> 结尾的文件。</p>\n<p>这是我的配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[program:myblog]</span><br><span class=\"line\"></span><br><span class=\"line\">command=pipenv run uwsgi --ini /root/mysite_uwsgi/myblog.ini</span><br><span class=\"line\"></span><br><span class=\"line\">directory=/root/code/Workspace/ginta.top</span><br><span class=\"line\"></span><br><span class=\"line\">autostart=true</span><br><span class=\"line\"></span><br><span class=\"line\">autorestart=unexpected</span><br><span class=\"line\"></span><br><span class=\"line\">user=root</span><br><span class=\"line\"></span><br><span class=\"line\">stdout_logfile=/etc/supervisor/var/log/myblog-stdout.log</span><br><span class=\"line\"></span><br><span class=\"line\">stderr_logfile=/etc/supervisor/var/log/myblog-stderr.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>program:hellodjango-blog-tutorial] 指明运行应用的进程，名为 hellodjango-blog-tutorial。</p>\n<p>command 为进程启动时执行的命令， 我的环境是用 pipenv 来进行包管理的所以要这样执行，如果没有用包管理直接执行 <code>uwsgi --ini /root/mysite_uwsgi/myblog.ini</code> 即可，也就是 <em>uwsgi</em> 的启动命令。</p>\n<p>directory 指定执行命令时所在的目录。</p>\n<p>autostart 随 Supervisor 启动自动启动进程。</p>\n<p>autorestart 进程意外退出时重启。</p>\n<p>user 进程运行的用户，防止权限问题。</p>\n<p>stdout_logfile，stderr_logfile 日志输出文件。</p>\n<ol start=\"6\">\n<li>启动 Supervisor</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisord -c ~/etc/supervisord.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>进入 supervisorctl 进程管理控制台：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">supervisorctl -c ~/etc/supervisord.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>执行 update 命令更新配置文件并启动应用。</p>\n<p>浏览器输入域名，可以看到服务已经正常启动了。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ol>\n<li>由于我们 <strong>supervisor</strong> 有配置项目的日志，所以如果在 <strong>uwsgi.ini</strong> 中配置有日志，请把它注释掉</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># myblog.ini （项目的uwsgi配置）</span><br><span class=\"line\"></span><br><span class=\"line\"># daemonize = /root/mysite_uwsgi/myblog.log             # 日志管理</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p><strong>如果之前就已经运行了 uwsgi，请一定要先退出再重启 supervisor</strong></p>\n</li>\n<li><p><em>supervisor&#x2F;supervisord.conf</em> 文件的注释符号是 **;**，比如 *;[eventlistener:theeventlistenername]*，所以我们所有的配置前面如果有 <strong>;</strong> ，请删掉，比如把 <em>;[eventlistener:theeventlistenername]</em> 改成 <em>[eventlistener:theeventlistenername]</em> ，不然会视作没有配置。</p>\n</li>\n</ol>\n<p>本文配置参考了<a href=\"https://www.zmrenwu.com/courses/hellodjango-blog-tutorial/materials/74/\">追梦人物的博客</a>。</p>\n"},{"title":"ubuntu python3.7 安装uwsgi 常见错误","date":"2019-11-26T18:03:56.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"### 前言\n\n由于需要在 *ubuntu18.04* 系统部署 *django* 项目，用到了 *uWSGI* 库，在安装的时候遇到了几个问题在这里记录一下原因，并附上解决方法。\n\n\n\n### Retrying (Retry(total=4, connect=None....\n\n这是比较常见的问题，原因是安装超时，因为我们下载的库的源一般都是在国外，涉及到翻墙问题，解决方法是更换国内的源，注明的有阿里，豆瓣等，这里我用到的是豆瓣源:\n\n```pip install -i https://pypi.doubanio.com/simple uwsgi```\n\n前面 **-i** 是指明更换源路径，最后的 **uwsgi** 就是本次我要安装的 **uWSGI** 库\n\n\n\n### error: invalid command 'bdist_wheel'\n\n这个问题一般是 **pip** 版本比较老了，更新一下即可\n\n尝试用以下命令升级以下pip版本后再试一下:\n\npython -m pip install --upgrade pip\n\n如果装着python3.X ，那么就用:\n\npython3 -m pip install --upgrade pip\n\n\n\n\n\n### fatal error: Python.h\n\n网上说的是因为环境不完整，安装如下这个包：\n\npython2：\n\n```sudo apt-get install python-dev```\n\npython3:\n\n```sudo apt-get install python3-dev```\n\n确实是这个问题，不过可能是我的 *python* 版本比较新吧，是 *python3.7.2* ，也可能是其他原因总之最后安装 *uWSGI* 还是失败了，网上还有一个库是真的比较新版本的 *python3.7+* ：\n\n```sudo apt install python3.7-dev```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190824103651540.png)\n\n安装成功~","source":"_posts/ubuntu python3.7 安装uwsgi 常见错误.md","raw":"---\ntitle: ubuntu python3.7 安装uwsgi 常见错误\ndate: 2019-11-27 02:03:56\nauthor: Ginta\nimg: http://img.ginta.top/fantasy2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - python\ncategories: python\npublished: false\n---\n### 前言\n\n由于需要在 *ubuntu18.04* 系统部署 *django* 项目，用到了 *uWSGI* 库，在安装的时候遇到了几个问题在这里记录一下原因，并附上解决方法。\n\n\n\n### Retrying (Retry(total=4, connect=None....\n\n这是比较常见的问题，原因是安装超时，因为我们下载的库的源一般都是在国外，涉及到翻墙问题，解决方法是更换国内的源，注明的有阿里，豆瓣等，这里我用到的是豆瓣源:\n\n```pip install -i https://pypi.doubanio.com/simple uwsgi```\n\n前面 **-i** 是指明更换源路径，最后的 **uwsgi** 就是本次我要安装的 **uWSGI** 库\n\n\n\n### error: invalid command 'bdist_wheel'\n\n这个问题一般是 **pip** 版本比较老了，更新一下即可\n\n尝试用以下命令升级以下pip版本后再试一下:\n\npython -m pip install --upgrade pip\n\n如果装着python3.X ，那么就用:\n\npython3 -m pip install --upgrade pip\n\n\n\n\n\n### fatal error: Python.h\n\n网上说的是因为环境不完整，安装如下这个包：\n\npython2：\n\n```sudo apt-get install python-dev```\n\npython3:\n\n```sudo apt-get install python3-dev```\n\n确实是这个问题，不过可能是我的 *python* 版本比较新吧，是 *python3.7.2* ，也可能是其他原因总之最后安装 *uWSGI* 还是失败了，网上还有一个库是真的比较新版本的 *python3.7+* ：\n\n```sudo apt install python3.7-dev```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190824103651540.png)\n\n安装成功~","slug":"ubuntu python3.7 安装uwsgi 常见错误","updated":"2023-06-14T10:18:20.016Z","_id":"cl6p61814003gtksc3z1v2rwu","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>由于需要在 <em>ubuntu18.04</em> 系统部署 <em>django</em> 项目，用到了 <em>uWSGI</em> 库，在安装的时候遇到了几个问题在这里记录一下原因，并附上解决方法。</p>\n<h3 id=\"Retrying-Retry-total-x3D-4-connect-x3D-None…\"><a href=\"#Retrying-Retry-total-x3D-4-connect-x3D-None…\" class=\"headerlink\" title=\"Retrying (Retry(total&#x3D;4, connect&#x3D;None….\"></a>Retrying (Retry(total&#x3D;4, connect&#x3D;None….</h3><p>这是比较常见的问题，原因是安装超时，因为我们下载的库的源一般都是在国外，涉及到翻墙问题，解决方法是更换国内的源，注明的有阿里，豆瓣等，这里我用到的是豆瓣源:</p>\n<p><code>pip install -i https://pypi.doubanio.com/simple uwsgi</code></p>\n<p>前面 <strong>-i</strong> 是指明更换源路径，最后的 <strong>uwsgi</strong> 就是本次我要安装的 <strong>uWSGI</strong> 库</p>\n<h3 id=\"error-invalid-command-‘bdist-wheel’\"><a href=\"#error-invalid-command-‘bdist-wheel’\" class=\"headerlink\" title=\"error: invalid command ‘bdist_wheel’\"></a>error: invalid command ‘bdist_wheel’</h3><p>这个问题一般是 <strong>pip</strong> 版本比较老了，更新一下即可</p>\n<p>尝试用以下命令升级以下pip版本后再试一下:</p>\n<p>python -m pip install –upgrade pip</p>\n<p>如果装着python3.X ，那么就用:</p>\n<p>python3 -m pip install –upgrade pip</p>\n<h3 id=\"fatal-error-Python-h\"><a href=\"#fatal-error-Python-h\" class=\"headerlink\" title=\"fatal error: Python.h\"></a>fatal error: Python.h</h3><p>网上说的是因为环境不完整，安装如下这个包：</p>\n<p>python2：</p>\n<p><code>sudo apt-get install python-dev</code></p>\n<p>python3:</p>\n<p><code>sudo apt-get install python3-dev</code></p>\n<p>确实是这个问题，不过可能是我的 <em>python</em> 版本比较新吧，是 <em>python3.7.2</em> ，也可能是其他原因总之最后安装 <em>uWSGI</em> 还是失败了，网上还有一个库是真的比较新版本的 <em>python3.7+</em> ：</p>\n<p><code>sudo apt install python3.7-dev</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190824103651540.png\" alt=\"在这里插入图片描述\"></p>\n<p>安装成功~</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>由于需要在 <em>ubuntu18.04</em> 系统部署 <em>django</em> 项目，用到了 <em>uWSGI</em> 库，在安装的时候遇到了几个问题在这里记录一下原因，并附上解决方法。</p>\n<h3 id=\"Retrying-Retry-total-x3D-4-connect-x3D-None…\"><a href=\"#Retrying-Retry-total-x3D-4-connect-x3D-None…\" class=\"headerlink\" title=\"Retrying (Retry(total&#x3D;4, connect&#x3D;None….\"></a>Retrying (Retry(total&#x3D;4, connect&#x3D;None….</h3><p>这是比较常见的问题，原因是安装超时，因为我们下载的库的源一般都是在国外，涉及到翻墙问题，解决方法是更换国内的源，注明的有阿里，豆瓣等，这里我用到的是豆瓣源:</p>\n<p><code>pip install -i https://pypi.doubanio.com/simple uwsgi</code></p>\n<p>前面 <strong>-i</strong> 是指明更换源路径，最后的 <strong>uwsgi</strong> 就是本次我要安装的 <strong>uWSGI</strong> 库</p>\n<h3 id=\"error-invalid-command-‘bdist-wheel’\"><a href=\"#error-invalid-command-‘bdist-wheel’\" class=\"headerlink\" title=\"error: invalid command ‘bdist_wheel’\"></a>error: invalid command ‘bdist_wheel’</h3><p>这个问题一般是 <strong>pip</strong> 版本比较老了，更新一下即可</p>\n<p>尝试用以下命令升级以下pip版本后再试一下:</p>\n<p>python -m pip install –upgrade pip</p>\n<p>如果装着python3.X ，那么就用:</p>\n<p>python3 -m pip install –upgrade pip</p>\n<h3 id=\"fatal-error-Python-h\"><a href=\"#fatal-error-Python-h\" class=\"headerlink\" title=\"fatal error: Python.h\"></a>fatal error: Python.h</h3><p>网上说的是因为环境不完整，安装如下这个包：</p>\n<p>python2：</p>\n<p><code>sudo apt-get install python-dev</code></p>\n<p>python3:</p>\n<p><code>sudo apt-get install python3-dev</code></p>\n<p>确实是这个问题，不过可能是我的 <em>python</em> 版本比较新吧，是 <em>python3.7.2</em> ，也可能是其他原因总之最后安装 <em>uWSGI</em> 还是失败了，网上还有一个库是真的比较新版本的 <em>python3.7+</em> ：</p>\n<p><code>sudo apt install python3.7-dev</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190824103651540.png\" alt=\"在这里插入图片描述\"></p>\n<p>安装成功~</p>\n"},{"title":"ubuntu 部署 django2.0 + uwsgi + nginx","date":"2019-11-26T19:02:12.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"###\n\n*django* 默认的服务是单进程的，而且处理静态文件也比较慢，我们采用 **django + uwsgi + nginx** 来提高并发数的同时减少静态文件的访问时间。\n\n\n\n### nginx\n\n1. 安装nginx\n\n`apt-get install nginx`\n\n2. 进入 **/etc/nginx** 路径下可以看到两个文件夹，**sites-available** 和 **sites-enabled**，前者是网站的可用配置文件夹，后者是启用的配置，一般都是把配置文件放到 **sites-available** 再通过软链接的方式在 **sites-enabled** 中启用配置。\n\n3. 进入 **sites-available** 文件夹中，新建配置文件arrange.conf，内容如下\n\n```\n\nserver {\n\n    listen 80;     # 网站对外的端口为80\n\n    server_name ginta.top;  # 服务名字（一般是用域名方便理解）\n\n    charset utf-8;   # 字符编码\n\n\n\n    client_max_body_size 75M;     # 上传文件的最大尺寸\n\n\n\n    location /static {\n\n        alias /home/admin/code/Workspace/arrange/static;      # 静态文件的访问路径\n\n    }\n\n    \n\n    location /media{\n\n        alias /home/admin/code/Workspace/arrange/media;      # 媒体资源的访问路径\n\n    }\n\n\n\n    location / {                  # 发送请求给django，nginx处理不了，我们要转发给uwsgi，除了 static 和 media 其他的转发给uwsgi\n\n        uwsgi_pass 127.0.0.1:8001;\n\n        include /etc/nginx/uwsgi_params;  # uwsgi协议配置文件，类似于nginx.conf，django没有，但是nginx下有个这样的文件\n\n    }\n\n}\n\n```\n\n4. 删除 **sites-enabled** 文件夹下的default文件，否则服务可能无法启动，卡在nginx欢迎界面\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826214047909.png)\n\n\n\n\n\n### uWSGI\n\n1. 安装uWSGI，可能出现的错误在这里有 [解决方式](https://blog.csdn.net/qq_35068933/article/details/100049788). \n\n```pip install uwsgi```\n\n2. 测试，创建一个 **foobar.py** 的文件，内容如下 :\n\n```\n\ndef application(env, start_response):\n\n    start_response('200 OK', [('Content-Type','text/html')])\n\n    return [b\"Hello World\"]\n\n```\n\n然后通过服务器的 *9090* 端口进行测试\n\n`uwsgi --http :9090 --wsgi-file foobar.py`\n\n访问成功即可。\n\n3. 编写项目uwsgi配置文件\n\n然后选择一个目录新建个文件作为项目的 *uwsgi* 配置文件,我这里是 **arrange.ini**\n\n```\n\n[uwsgi]\n\nchdir = /home/admin/code/Workspace/arrange  # 项目的绝对路径\n\nvirtualenv = /home/admin/code/Envs/blog       # 我这里用的是虚拟环境\n\nmodule = arrange.wsgi:application     # 项目的wsgi，我的项目名是 **arrange**\n\n\n\nmaster = True   #  启动主程序\n\nprocesses = 4  # 使用的进程数\n\nharakiri = 60   # 请求60s超时关闭\n\nmax-requests = 5000    # 请求超过5000进程重启防止内存泄漏\n\n \n\nsocket = 127.0.0.1:8001   # 监听的端口\n\nuid = nginx  #  使用nginx代替root用户 （安全一些）      \n\ngid = nginx  #  使用nginx代替root用户     \n\n\n\npidfile = /home/admin/mysite_uwsgi/master.pid     # 通过 pidfile 对主进程进行关闭，启动或者重启操作\n\ndaemonize = /home/admin/mysite_uwsgi/arrange.log  # 指定日志存放路径\n\nvacuum = True # 当服务器关闭会自动把pidfile和daemonize进程回收\n\n```\n\n4. 启动项目uwsgi\n\n`uwsgi --ini arrange.ini`\n\n5. 进入 **/etc/nginx/** 路径，简历配置文件软链接\n\n`sudo ln -s /etc/nginx/sites-available/arrange.conf /etc/nginx/sites-enabled/arrange.conf`\n\n6. 测试一下nginx有没有问题\n\n`sudo nginx -t`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826214422441.png)\n\n出现 **successful** 表示没有问题\n\n7. 重启nginx\n\n`sudo service nginx restart`\n\n\n\n### 补充\n\n**uwsgi** 重启服务,由于我们配置了pidfile路径，所以可以很快捷地重启\n\n`uwsgi --reload /home/admin/mysite_uwsgi/master.pid`\n\n想看看启动没有可以通过 **ps** 指令\n\n`ps -aux | grep uwsgi`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826215035845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)","source":"_posts/ubuntu 部署 django2.0 + uwsgi + nginx.md","raw":"---\ntitle: ubuntu 部署 django2.0 + uwsgi + nginx\ndate: 2019-11-27 03:02:12\nauthor: Ginta\nimg: http://img.ginta.top/fantasy2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - Django\n  - 自动化\n  - uwsgi\ncategories: Django\npublished: false\n---\n###\n\n*django* 默认的服务是单进程的，而且处理静态文件也比较慢，我们采用 **django + uwsgi + nginx** 来提高并发数的同时减少静态文件的访问时间。\n\n\n\n### nginx\n\n1. 安装nginx\n\n`apt-get install nginx`\n\n2. 进入 **/etc/nginx** 路径下可以看到两个文件夹，**sites-available** 和 **sites-enabled**，前者是网站的可用配置文件夹，后者是启用的配置，一般都是把配置文件放到 **sites-available** 再通过软链接的方式在 **sites-enabled** 中启用配置。\n\n3. 进入 **sites-available** 文件夹中，新建配置文件arrange.conf，内容如下\n\n```\n\nserver {\n\n    listen 80;     # 网站对外的端口为80\n\n    server_name ginta.top;  # 服务名字（一般是用域名方便理解）\n\n    charset utf-8;   # 字符编码\n\n\n\n    client_max_body_size 75M;     # 上传文件的最大尺寸\n\n\n\n    location /static {\n\n        alias /home/admin/code/Workspace/arrange/static;      # 静态文件的访问路径\n\n    }\n\n    \n\n    location /media{\n\n        alias /home/admin/code/Workspace/arrange/media;      # 媒体资源的访问路径\n\n    }\n\n\n\n    location / {                  # 发送请求给django，nginx处理不了，我们要转发给uwsgi，除了 static 和 media 其他的转发给uwsgi\n\n        uwsgi_pass 127.0.0.1:8001;\n\n        include /etc/nginx/uwsgi_params;  # uwsgi协议配置文件，类似于nginx.conf，django没有，但是nginx下有个这样的文件\n\n    }\n\n}\n\n```\n\n4. 删除 **sites-enabled** 文件夹下的default文件，否则服务可能无法启动，卡在nginx欢迎界面\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826214047909.png)\n\n\n\n\n\n### uWSGI\n\n1. 安装uWSGI，可能出现的错误在这里有 [解决方式](https://blog.csdn.net/qq_35068933/article/details/100049788). \n\n```pip install uwsgi```\n\n2. 测试，创建一个 **foobar.py** 的文件，内容如下 :\n\n```\n\ndef application(env, start_response):\n\n    start_response('200 OK', [('Content-Type','text/html')])\n\n    return [b\"Hello World\"]\n\n```\n\n然后通过服务器的 *9090* 端口进行测试\n\n`uwsgi --http :9090 --wsgi-file foobar.py`\n\n访问成功即可。\n\n3. 编写项目uwsgi配置文件\n\n然后选择一个目录新建个文件作为项目的 *uwsgi* 配置文件,我这里是 **arrange.ini**\n\n```\n\n[uwsgi]\n\nchdir = /home/admin/code/Workspace/arrange  # 项目的绝对路径\n\nvirtualenv = /home/admin/code/Envs/blog       # 我这里用的是虚拟环境\n\nmodule = arrange.wsgi:application     # 项目的wsgi，我的项目名是 **arrange**\n\n\n\nmaster = True   #  启动主程序\n\nprocesses = 4  # 使用的进程数\n\nharakiri = 60   # 请求60s超时关闭\n\nmax-requests = 5000    # 请求超过5000进程重启防止内存泄漏\n\n \n\nsocket = 127.0.0.1:8001   # 监听的端口\n\nuid = nginx  #  使用nginx代替root用户 （安全一些）      \n\ngid = nginx  #  使用nginx代替root用户     \n\n\n\npidfile = /home/admin/mysite_uwsgi/master.pid     # 通过 pidfile 对主进程进行关闭，启动或者重启操作\n\ndaemonize = /home/admin/mysite_uwsgi/arrange.log  # 指定日志存放路径\n\nvacuum = True # 当服务器关闭会自动把pidfile和daemonize进程回收\n\n```\n\n4. 启动项目uwsgi\n\n`uwsgi --ini arrange.ini`\n\n5. 进入 **/etc/nginx/** 路径，简历配置文件软链接\n\n`sudo ln -s /etc/nginx/sites-available/arrange.conf /etc/nginx/sites-enabled/arrange.conf`\n\n6. 测试一下nginx有没有问题\n\n`sudo nginx -t`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826214422441.png)\n\n出现 **successful** 表示没有问题\n\n7. 重启nginx\n\n`sudo service nginx restart`\n\n\n\n### 补充\n\n**uwsgi** 重启服务,由于我们配置了pidfile路径，所以可以很快捷地重启\n\n`uwsgi --reload /home/admin/mysite_uwsgi/master.pid`\n\n想看看启动没有可以通过 **ps** 指令\n\n`ps -aux | grep uwsgi`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190826215035845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)","slug":"ubuntu 部署 django2.0 + uwsgi + nginx","updated":"2023-06-14T10:18:16.995Z","_id":"cl6p61814003jtkscb44l5aba","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><p><em>django</em> 默认的服务是单进程的，而且处理静态文件也比较慢，我们采用 <strong>django + uwsgi + nginx</strong> 来提高并发数的同时减少静态文件的访问时间。</p>\n<h3 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h3><ol>\n<li>安装nginx</li>\n</ol>\n<p><code>apt-get install nginx</code></p>\n<ol start=\"2\">\n<li><p>进入 <strong>&#x2F;etc&#x2F;nginx</strong> 路径下可以看到两个文件夹，<strong>sites-available</strong> 和 <strong>sites-enabled</strong>，前者是网站的可用配置文件夹，后者是启用的配置，一般都是把配置文件放到 <strong>sites-available</strong> 再通过软链接的方式在 <strong>sites-enabled</strong> 中启用配置。</p>\n</li>\n<li><p>进入 <strong>sites-available</strong> 文件夹中，新建配置文件arrange.conf，内容如下</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80;     # 网站对外的端口为80</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name ginta.top;  # 服务名字（一般是用域名方便理解）</span><br><span class=\"line\"></span><br><span class=\"line\">    charset utf-8;   # 字符编码</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    client_max_body_size 75M;     # 上传文件的最大尺寸</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    location /static &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        alias /home/admin/code/Workspace/arrange/static;      # 静态文件的访问路径</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    location /media&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        alias /home/admin/code/Workspace/arrange/media;      # 媒体资源的访问路径</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;                  # 发送请求给django，nginx处理不了，我们要转发给uwsgi，除了 static 和 media 其他的转发给uwsgi</span><br><span class=\"line\"></span><br><span class=\"line\">        uwsgi_pass 127.0.0.1:8001;</span><br><span class=\"line\"></span><br><span class=\"line\">        include /etc/nginx/uwsgi_params;  # uwsgi协议配置文件，类似于nginx.conf，django没有，但是nginx下有个这样的文件</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>删除 <strong>sites-enabled</strong> 文件夹下的default文件，否则服务可能无法启动，卡在nginx欢迎界面</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826214047909.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"uWSGI\"><a href=\"#uWSGI\" class=\"headerlink\" title=\"uWSGI\"></a>uWSGI</h3><ol>\n<li>安装uWSGI，可能出现的错误在这里有 <a href=\"https://blog.csdn.net/qq_35068933/article/details/100049788\">解决方式</a>.</li>\n</ol>\n<p><code>pip install uwsgi</code></p>\n<ol start=\"2\">\n<li>测试，创建一个 <strong>foobar.py</strong> 的文件，内容如下 :</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\"></span><br><span class=\"line\">    start_response(&#x27;200 OK&#x27;, [(&#x27;Content-Type&#x27;,&#x27;text/html&#x27;)])</span><br><span class=\"line\"></span><br><span class=\"line\">    return [b&quot;Hello World&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后通过服务器的 <em>9090</em> 端口进行测试</p>\n<p><code>uwsgi --http :9090 --wsgi-file foobar.py</code></p>\n<p>访问成功即可。</p>\n<ol start=\"3\">\n<li>编写项目uwsgi配置文件</li>\n</ol>\n<p>然后选择一个目录新建个文件作为项目的 <em>uwsgi</em> 配置文件,我这里是 <strong>arrange.ini</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"></span><br><span class=\"line\">chdir = /home/admin/code/Workspace/arrange  # 项目的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">virtualenv = /home/admin/code/Envs/blog       # 我这里用的是虚拟环境</span><br><span class=\"line\"></span><br><span class=\"line\">module = arrange.wsgi:application     # 项目的wsgi，我的项目名是 **arrange**</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">master = True   #  启动主程序</span><br><span class=\"line\"></span><br><span class=\"line\">processes = 4  # 使用的进程数</span><br><span class=\"line\"></span><br><span class=\"line\">harakiri = 60   # 请求60s超时关闭</span><br><span class=\"line\"></span><br><span class=\"line\">max-requests = 5000    # 请求超过5000进程重启防止内存泄漏</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">socket = 127.0.0.1:8001   # 监听的端口</span><br><span class=\"line\"></span><br><span class=\"line\">uid = nginx  #  使用nginx代替root用户 （安全一些）      </span><br><span class=\"line\"></span><br><span class=\"line\">gid = nginx  #  使用nginx代替root用户     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pidfile = /home/admin/mysite_uwsgi/master.pid     # 通过 pidfile 对主进程进行关闭，启动或者重启操作</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize = /home/admin/mysite_uwsgi/arrange.log  # 指定日志存放路径</span><br><span class=\"line\"></span><br><span class=\"line\">vacuum = True # 当服务器关闭会自动把pidfile和daemonize进程回收</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>启动项目uwsgi</li>\n</ol>\n<p><code>uwsgi --ini arrange.ini</code></p>\n<ol start=\"5\">\n<li>进入 <strong>&#x2F;etc&#x2F;nginx&#x2F;</strong> 路径，简历配置文件软链接</li>\n</ol>\n<p><code>sudo ln -s /etc/nginx/sites-available/arrange.conf /etc/nginx/sites-enabled/arrange.conf</code></p>\n<ol start=\"6\">\n<li>测试一下nginx有没有问题</li>\n</ol>\n<p><code>sudo nginx -t</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826214422441.png\" alt=\"在这里插入图片描述\"></p>\n<p>出现 <strong>successful</strong> 表示没有问题</p>\n<ol start=\"7\">\n<li>重启nginx</li>\n</ol>\n<p><code>sudo service nginx restart</code></p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p><strong>uwsgi</strong> 重启服务,由于我们配置了pidfile路径，所以可以很快捷地重启</p>\n<p><code>uwsgi --reload /home/admin/mysite_uwsgi/master.pid</code></p>\n<p>想看看启动没有可以通过 <strong>ps</strong> 指令</p>\n<p><code>ps -aux | grep uwsgi</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826215035845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><p><em>django</em> 默认的服务是单进程的，而且处理静态文件也比较慢，我们采用 <strong>django + uwsgi + nginx</strong> 来提高并发数的同时减少静态文件的访问时间。</p>\n<h3 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h3><ol>\n<li>安装nginx</li>\n</ol>\n<p><code>apt-get install nginx</code></p>\n<ol start=\"2\">\n<li><p>进入 <strong>&#x2F;etc&#x2F;nginx</strong> 路径下可以看到两个文件夹，<strong>sites-available</strong> 和 <strong>sites-enabled</strong>，前者是网站的可用配置文件夹，后者是启用的配置，一般都是把配置文件放到 <strong>sites-available</strong> 再通过软链接的方式在 <strong>sites-enabled</strong> 中启用配置。</p>\n</li>\n<li><p>进入 <strong>sites-available</strong> 文件夹中，新建配置文件arrange.conf，内容如下</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80;     # 网站对外的端口为80</span><br><span class=\"line\"></span><br><span class=\"line\">    server_name ginta.top;  # 服务名字（一般是用域名方便理解）</span><br><span class=\"line\"></span><br><span class=\"line\">    charset utf-8;   # 字符编码</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    client_max_body_size 75M;     # 上传文件的最大尺寸</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    location /static &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        alias /home/admin/code/Workspace/arrange/static;      # 静态文件的访问路径</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    location /media&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        alias /home/admin/code/Workspace/arrange/media;      # 媒体资源的访问路径</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;                  # 发送请求给django，nginx处理不了，我们要转发给uwsgi，除了 static 和 media 其他的转发给uwsgi</span><br><span class=\"line\"></span><br><span class=\"line\">        uwsgi_pass 127.0.0.1:8001;</span><br><span class=\"line\"></span><br><span class=\"line\">        include /etc/nginx/uwsgi_params;  # uwsgi协议配置文件，类似于nginx.conf，django没有，但是nginx下有个这样的文件</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>删除 <strong>sites-enabled</strong> 文件夹下的default文件，否则服务可能无法启动，卡在nginx欢迎界面</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826214047909.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"uWSGI\"><a href=\"#uWSGI\" class=\"headerlink\" title=\"uWSGI\"></a>uWSGI</h3><ol>\n<li>安装uWSGI，可能出现的错误在这里有 <a href=\"https://blog.csdn.net/qq_35068933/article/details/100049788\">解决方式</a>.</li>\n</ol>\n<p><code>pip install uwsgi</code></p>\n<ol start=\"2\">\n<li>测试，创建一个 <strong>foobar.py</strong> 的文件，内容如下 :</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\"></span><br><span class=\"line\">    start_response(&#x27;200 OK&#x27;, [(&#x27;Content-Type&#x27;,&#x27;text/html&#x27;)])</span><br><span class=\"line\"></span><br><span class=\"line\">    return [b&quot;Hello World&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后通过服务器的 <em>9090</em> 端口进行测试</p>\n<p><code>uwsgi --http :9090 --wsgi-file foobar.py</code></p>\n<p>访问成功即可。</p>\n<ol start=\"3\">\n<li>编写项目uwsgi配置文件</li>\n</ol>\n<p>然后选择一个目录新建个文件作为项目的 <em>uwsgi</em> 配置文件,我这里是 <strong>arrange.ini</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"></span><br><span class=\"line\">chdir = /home/admin/code/Workspace/arrange  # 项目的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">virtualenv = /home/admin/code/Envs/blog       # 我这里用的是虚拟环境</span><br><span class=\"line\"></span><br><span class=\"line\">module = arrange.wsgi:application     # 项目的wsgi，我的项目名是 **arrange**</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">master = True   #  启动主程序</span><br><span class=\"line\"></span><br><span class=\"line\">processes = 4  # 使用的进程数</span><br><span class=\"line\"></span><br><span class=\"line\">harakiri = 60   # 请求60s超时关闭</span><br><span class=\"line\"></span><br><span class=\"line\">max-requests = 5000    # 请求超过5000进程重启防止内存泄漏</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">socket = 127.0.0.1:8001   # 监听的端口</span><br><span class=\"line\"></span><br><span class=\"line\">uid = nginx  #  使用nginx代替root用户 （安全一些）      </span><br><span class=\"line\"></span><br><span class=\"line\">gid = nginx  #  使用nginx代替root用户     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pidfile = /home/admin/mysite_uwsgi/master.pid     # 通过 pidfile 对主进程进行关闭，启动或者重启操作</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize = /home/admin/mysite_uwsgi/arrange.log  # 指定日志存放路径</span><br><span class=\"line\"></span><br><span class=\"line\">vacuum = True # 当服务器关闭会自动把pidfile和daemonize进程回收</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>启动项目uwsgi</li>\n</ol>\n<p><code>uwsgi --ini arrange.ini</code></p>\n<ol start=\"5\">\n<li>进入 <strong>&#x2F;etc&#x2F;nginx&#x2F;</strong> 路径，简历配置文件软链接</li>\n</ol>\n<p><code>sudo ln -s /etc/nginx/sites-available/arrange.conf /etc/nginx/sites-enabled/arrange.conf</code></p>\n<ol start=\"6\">\n<li>测试一下nginx有没有问题</li>\n</ol>\n<p><code>sudo nginx -t</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826214422441.png\" alt=\"在这里插入图片描述\"></p>\n<p>出现 <strong>successful</strong> 表示没有问题</p>\n<ol start=\"7\">\n<li>重启nginx</li>\n</ol>\n<p><code>sudo service nginx restart</code></p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p><strong>uwsgi</strong> 重启服务,由于我们配置了pidfile路径，所以可以很快捷地重启</p>\n<p><code>uwsgi --reload /home/admin/mysite_uwsgi/master.pid</code></p>\n<p>想看看启动没有可以通过 <strong>ps</strong> 指令</p>\n<p><code>ps -aux | grep uwsgi</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190826215035845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"win10 osg.js 使用","date":"2019-12-03T01:02:07.000Z","author":"Ginta","img":"http://img.ginta.top/dragin1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dragin1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 引言\n\n有位朋友希望可以在win10上部署一个 *osg.js* 服务，虽然在这之前我也没用过 *osg.js* ，不过看了下官方基本的 doc，由于是涉及到美术行业内容不是很懂，不过部署貌似也不复杂。\n\n\n\n## 安装依赖\n\n该工程一共需要2个依赖，一个是 *Git* ，另外就是 *npm*。\n\n首先安装 **Git** ，点击此处的[下载链接](https://github.com/git-for-windows/git/releases/download/v2.24.0.windows.2/Git-2.24.0.2-64-bit.exe)下载安装包，一直下一步就好。其次安装 **npm**，这里参考[廖雪峰教程](https://www.liaoxuefeng.com/wiki/1022910821149312/1023025597810528)就可以。\n\n\n\n## 下一步\n\n这是[官方链接](http://osgjs.org)，部署非常简单，首先在电脑上安装一个 *git* 把代码 *clone* 下来，找一个存放工程的目录，右键，点击 *Git Bash Here*：\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/d520a651-7ef9-416e-8653-2f32b628c933.png)\n\n\n\n然后执行 `$ git clone git://github.com/cedricpinson/osgjs.git`，接下来就可以在目录下看到一个 **osgjs** 文件夹。接下来进入这个文件夹 `$ cd osgjs/`，依次执行四条命令：\n\n\n\n- `npm install -g grunt-cli`\n\n- `npm install`\n\n- `grunt build`\n\n- `grunt serve`\n\n不出意外可以看到这个界面\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/57c92fc4-0753-4b90-8308-899de31ad4fd.png)\n\n打开浏览器访问 `http://localhost:9000/` ，然后就可以体验了\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/244e4c99-6b42-4d73-adb6-18dba844ca5a.png)\n\n\n\n虽然不是这个方向，但感觉还是挺不错的。\n\n\n\n## 小结\n\n整个过程还是挺简单的，最费时间的是执行 `grunt serve` 这一步，因为要从其他仓库下载模型，而且还是外网，所以非常耗时，建议采用 **科学上网** 的方式执行。我当时执行这一步的时候真的是失败了N次，但是想着答应要尽力的，最终还是耐心多尝试，最后成功了，挺高兴的。","source":"_posts/win10 osg.js 使用.md","raw":"---\ntitle: win10 osg.js 使用\ndate: 2019-12-03 09:02:07\nauthor: Ginta\nimg: http://img.ginta.top/dragin1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dragin1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 其他\npublished: false\n---\n## 引言\n\n有位朋友希望可以在win10上部署一个 *osg.js* 服务，虽然在这之前我也没用过 *osg.js* ，不过看了下官方基本的 doc，由于是涉及到美术行业内容不是很懂，不过部署貌似也不复杂。\n\n\n\n## 安装依赖\n\n该工程一共需要2个依赖，一个是 *Git* ，另外就是 *npm*。\n\n首先安装 **Git** ，点击此处的[下载链接](https://github.com/git-for-windows/git/releases/download/v2.24.0.windows.2/Git-2.24.0.2-64-bit.exe)下载安装包，一直下一步就好。其次安装 **npm**，这里参考[廖雪峰教程](https://www.liaoxuefeng.com/wiki/1022910821149312/1023025597810528)就可以。\n\n\n\n## 下一步\n\n这是[官方链接](http://osgjs.org)，部署非常简单，首先在电脑上安装一个 *git* 把代码 *clone* 下来，找一个存放工程的目录，右键，点击 *Git Bash Here*：\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/d520a651-7ef9-416e-8653-2f32b628c933.png)\n\n\n\n然后执行 `$ git clone git://github.com/cedricpinson/osgjs.git`，接下来就可以在目录下看到一个 **osgjs** 文件夹。接下来进入这个文件夹 `$ cd osgjs/`，依次执行四条命令：\n\n\n\n- `npm install -g grunt-cli`\n\n- `npm install`\n\n- `grunt build`\n\n- `grunt serve`\n\n不出意外可以看到这个界面\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/57c92fc4-0753-4b90-8308-899de31ad4fd.png)\n\n打开浏览器访问 `http://localhost:9000/` ，然后就可以体验了\n\n\n\n\n\n![](http://img.ginta.top/markdownx/2019/12/02/244e4c99-6b42-4d73-adb6-18dba844ca5a.png)\n\n\n\n虽然不是这个方向，但感觉还是挺不错的。\n\n\n\n## 小结\n\n整个过程还是挺简单的，最费时间的是执行 `grunt serve` 这一步，因为要从其他仓库下载模型，而且还是外网，所以非常耗时，建议采用 **科学上网** 的方式执行。我当时执行这一步的时候真的是失败了N次，但是想着答应要尽力的，最终还是耐心多尝试，最后成功了，挺高兴的。","slug":"win10 osg.js 使用","updated":"2023-06-14T10:17:55.714Z","_id":"cl6p61815003otksc84f341z1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>有位朋友希望可以在win10上部署一个 <em>osg.js</em> 服务，虽然在这之前我也没用过 <em>osg.js</em> ，不过看了下官方基本的 doc，由于是涉及到美术行业内容不是很懂，不过部署貌似也不复杂。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>该工程一共需要2个依赖，一个是 <em>Git</em> ，另外就是 <em>npm</em>。</p>\n<p>首先安装 <strong>Git</strong> ，点击此处的<a href=\"https://github.com/git-for-windows/git/releases/download/v2.24.0.windows.2/Git-2.24.0.2-64-bit.exe\">下载链接</a>下载安装包，一直下一步就好。其次安装 <strong>npm</strong>，这里参考<a href=\"https://www.liaoxuefeng.com/wiki/1022910821149312/1023025597810528\">廖雪峰教程</a>就可以。</p>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>这是<a href=\"http://osgjs.org/\">官方链接</a>，部署非常简单，首先在电脑上安装一个 <em>git</em> 把代码 <em>clone</em> 下来，找一个存放工程的目录，右键，点击 <em>Git Bash Here</em>：</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/d520a651-7ef9-416e-8653-2f32b628c933.png\"></p>\n<p>然后执行 <code>$ git clone git://github.com/cedricpinson/osgjs.git</code>，接下来就可以在目录下看到一个 <strong>osgjs</strong> 文件夹。接下来进入这个文件夹 <code>$ cd osgjs/</code>，依次执行四条命令：</p>\n<ul>\n<li><p><code>npm install -g grunt-cli</code></p>\n</li>\n<li><p><code>npm install</code></p>\n</li>\n<li><p><code>grunt build</code></p>\n</li>\n<li><p><code>grunt serve</code></p>\n</li>\n</ul>\n<p>不出意外可以看到这个界面</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/57c92fc4-0753-4b90-8308-899de31ad4fd.png\"></p>\n<p>打开浏览器访问 <code>http://localhost:9000/</code> ，然后就可以体验了</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/244e4c99-6b42-4d73-adb6-18dba844ca5a.png\"></p>\n<p>虽然不是这个方向，但感觉还是挺不错的。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>整个过程还是挺简单的，最费时间的是执行 <code>grunt serve</code> 这一步，因为要从其他仓库下载模型，而且还是外网，所以非常耗时，建议采用 <strong>科学上网</strong> 的方式执行。我当时执行这一步的时候真的是失败了N次，但是想着答应要尽力的，最终还是耐心多尝试，最后成功了，挺高兴的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>有位朋友希望可以在win10上部署一个 <em>osg.js</em> 服务，虽然在这之前我也没用过 <em>osg.js</em> ，不过看了下官方基本的 doc，由于是涉及到美术行业内容不是很懂，不过部署貌似也不复杂。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>该工程一共需要2个依赖，一个是 <em>Git</em> ，另外就是 <em>npm</em>。</p>\n<p>首先安装 <strong>Git</strong> ，点击此处的<a href=\"https://github.com/git-for-windows/git/releases/download/v2.24.0.windows.2/Git-2.24.0.2-64-bit.exe\">下载链接</a>下载安装包，一直下一步就好。其次安装 <strong>npm</strong>，这里参考<a href=\"https://www.liaoxuefeng.com/wiki/1022910821149312/1023025597810528\">廖雪峰教程</a>就可以。</p>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>这是<a href=\"http://osgjs.org/\">官方链接</a>，部署非常简单，首先在电脑上安装一个 <em>git</em> 把代码 <em>clone</em> 下来，找一个存放工程的目录，右键，点击 <em>Git Bash Here</em>：</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/d520a651-7ef9-416e-8653-2f32b628c933.png\"></p>\n<p>然后执行 <code>$ git clone git://github.com/cedricpinson/osgjs.git</code>，接下来就可以在目录下看到一个 <strong>osgjs</strong> 文件夹。接下来进入这个文件夹 <code>$ cd osgjs/</code>，依次执行四条命令：</p>\n<ul>\n<li><p><code>npm install -g grunt-cli</code></p>\n</li>\n<li><p><code>npm install</code></p>\n</li>\n<li><p><code>grunt build</code></p>\n</li>\n<li><p><code>grunt serve</code></p>\n</li>\n</ul>\n<p>不出意外可以看到这个界面</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/57c92fc4-0753-4b90-8308-899de31ad4fd.png\"></p>\n<p>打开浏览器访问 <code>http://localhost:9000/</code> ，然后就可以体验了</p>\n<p><img src=\"http://img.ginta.top/markdownx/2019/12/02/244e4c99-6b42-4d73-adb6-18dba844ca5a.png\"></p>\n<p>虽然不是这个方向，但感觉还是挺不错的。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>整个过程还是挺简单的，最费时间的是执行 <code>grunt serve</code> 这一步，因为要从其他仓库下载模型，而且还是外网，所以非常耗时，建议采用 <strong>科学上网</strong> 的方式执行。我当时执行这一步的时候真的是失败了N次，但是想着答应要尽力的，最终还是耐心多尝试，最后成功了，挺高兴的。</p>\n"},{"title":"windows 安装 helm","date":"2021-07-01T14:59:28.000Z","author":"Ginta","img":"http://img.ginta.top/fantasy2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/fantasy2.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 安装\n到 [helm的Github仓库](https://github.com/helm/helm/releases) 找到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n解压后把这个目录加入环境变量就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","source":"_posts/windows 安装 helm.md","raw":"---\ntitle: windows 安装 helm\ndate: 2021-07-01 22:59:28\nauthor: Ginta\nimg: http://img.ginta.top/fantasy2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/fantasy2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - docker\n  - windows\n  - k8s\ncategories: 其他\npublished: false\n---\n## 安装\n到 [helm的Github仓库](https://github.com/helm/helm/releases) 找到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n解压后把这个目录加入环境变量就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","slug":"windows 安装 helm","updated":"2023-06-14T10:17:59.700Z","_id":"cl6p61815003rtksc9pp998th","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>到 <a href=\"https://github.com/helm/helm/releases\">helm的Github仓库</a> 找到<br><img src=\"https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解压后把这个目录加入环境变量就可以了<br><img src=\"https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>到 <a href=\"https://github.com/helm/helm/releases\">helm的Github仓库</a> 找到<br><img src=\"https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解压后把这个目录加入环境变量就可以了<br><img src=\"https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"windows终端命令行下使用网络代理","date":"2020-05-04T18:44:02.000Z","author":"Ginta","img":"http://img.ginta.top/huoying1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"1. 右键打开 *ShadowsocksR* 的 **选项设置**\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/05/02/71045421-767e-438f-91a1-3e3d5be60fff.png)\r\n\r\n\r\n2. 设置你的HTTP和HTTPS的代理端口\r\n\r\n![](http://img.ginta.top/markdownx/2020/05/02/59a20c57-2d53-40fb-b559-93881dbe6f56.png)\r\n\r\n\r\n3. 打开cmd窗口，设置代理变量\r\n```\r\nset HTTP_PROXY=http://127.0.0.1:1080\r\nset HTTPS_PROXY=http://127.0.0.1:1080\r\n```\r\n如果设置了用户名和密码\r\n```\r\nset HTTP_PROXY=http://proxy.com:port\r\nset HTTP_PROXY_USER=username\r\nset HTTP_PROXY_PASS=password\r\n\r\nset HTTPS_PROXY=http://proxy.com:port\r\nset HTTPS_PROXY_USER=username\r\nset HTTPS_PROXY_PASS=password\r\n```\r\n上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。\r\n\r\n如何取消代理呢:\r\n```\r\nnetsh winhttp reset proxy\r\n```","source":"_posts/windows终端命令行下使用网络代理.md","raw":"---\ntitle: windows终端命令行下使用网络代理\ndate: 2020-05-05 02:44:02\nauthor: Ginta\nimg: http://img.ginta.top/huoying1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 其他\n---\n1. 右键打开 *ShadowsocksR* 的 **选项设置**\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/05/02/71045421-767e-438f-91a1-3e3d5be60fff.png)\r\n\r\n\r\n2. 设置你的HTTP和HTTPS的代理端口\r\n\r\n![](http://img.ginta.top/markdownx/2020/05/02/59a20c57-2d53-40fb-b559-93881dbe6f56.png)\r\n\r\n\r\n3. 打开cmd窗口，设置代理变量\r\n```\r\nset HTTP_PROXY=http://127.0.0.1:1080\r\nset HTTPS_PROXY=http://127.0.0.1:1080\r\n```\r\n如果设置了用户名和密码\r\n```\r\nset HTTP_PROXY=http://proxy.com:port\r\nset HTTP_PROXY_USER=username\r\nset HTTP_PROXY_PASS=password\r\n\r\nset HTTPS_PROXY=http://proxy.com:port\r\nset HTTPS_PROXY_USER=username\r\nset HTTPS_PROXY_PASS=password\r\n```\r\n上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。\r\n\r\n如何取消代理呢:\r\n```\r\nnetsh winhttp reset proxy\r\n```","slug":"windows终端命令行下使用网络代理","published":1,"updated":"2022-08-11T12:49:48.141Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61815003utkschguwc3dc","content":"<ol>\n<li>右键打开 <em>ShadowsocksR</em> 的 <strong>选项设置</strong></li>\n</ol>\n<p><img src=\"http://img.ginta.top/markdownx/2020/05/02/71045421-767e-438f-91a1-3e3d5be60fff.png\"></p>\n<ol start=\"2\">\n<li>设置你的HTTP和HTTPS的代理端口</li>\n</ol>\n<p><img src=\"http://img.ginta.top/markdownx/2020/05/02/59a20c57-2d53-40fb-b559-93881dbe6f56.png\"></p>\n<ol start=\"3\">\n<li>打开cmd窗口，设置代理变量</li>\n</ol>\n<pre><code>set HTTP_PROXY=http://127.0.0.1:1080\nset HTTPS_PROXY=http://127.0.0.1:1080\n</code></pre>\n<p>如果设置了用户名和密码</p>\n<pre><code>set HTTP_PROXY=http://proxy.com:port\nset HTTP_PROXY_USER=username\nset HTTP_PROXY_PASS=password\n\nset HTTPS_PROXY=http://proxy.com:port\nset HTTPS_PROXY_USER=username\nset HTTPS_PROXY_PASS=password\n</code></pre>\n<p>上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。</p>\n<p>如何取消代理呢:</p>\n<pre><code>netsh winhttp reset proxy\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<ol>\n<li>右键打开 <em>ShadowsocksR</em> 的 <strong>选项设置</strong></li>\n</ol>\n<p><img src=\"http://img.ginta.top/markdownx/2020/05/02/71045421-767e-438f-91a1-3e3d5be60fff.png\"></p>\n<ol start=\"2\">\n<li>设置你的HTTP和HTTPS的代理端口</li>\n</ol>\n<p><img src=\"http://img.ginta.top/markdownx/2020/05/02/59a20c57-2d53-40fb-b559-93881dbe6f56.png\"></p>\n<ol start=\"3\">\n<li>打开cmd窗口，设置代理变量</li>\n</ol>\n<pre><code>set HTTP_PROXY=http://127.0.0.1:1080\nset HTTPS_PROXY=http://127.0.0.1:1080\n</code></pre>\n<p>如果设置了用户名和密码</p>\n<pre><code>set HTTP_PROXY=http://proxy.com:port\nset HTTP_PROXY_USER=username\nset HTTP_PROXY_PASS=password\n\nset HTTPS_PROXY=http://proxy.com:port\nset HTTPS_PROXY_USER=username\nset HTTPS_PROXY_PASS=password\n</code></pre>\n<p>上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。</p>\n<p>如何取消代理呢:</p>\n<pre><code>netsh winhttp reset proxy\n</code></pre>\n"},{"title":"wsl2 安装 Centos8","date":"2021-07-04T03:07:37.000Z","author":"Ginta","img":"http://img.ginta.top/huoying2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 前言\n由于开发需要安装 *centos* 版本的 *wsl*， 但 *Windows Store* 里只有 *Ubuntu*、*Debian* 等 *kernel*，好消息是 *Github* 上可以找到对应版本的安装包。\n\n### 安装 Chocolatey\nNuGet（读作New Get）是用于微软.NET开发平台的软件包管理器，是一个Visual Studio的扩展。Chocolatey 是基于 NuGet 的一个软件包管理器，就像 Linux 中的 yum 或 apt 一样，在 Windows10 中也可以用命令行安装程序了。\n\n右键单击开始菜单，选择 Windows PowerShell(管理员)，打开一个具有管理员权限的 PowerShell 窗口，输入命令并回车：\n```\nSet-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n完成后，输入命令：choco ，如果能正确显示版本号，说明安装成功。\n\n详情请查看官网文档安装说明\n\n### LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。\n\n在 PowerShell 窗口中输入命令安装LxRunOffline，安装完成后重启 PowerShell。\n```\nchoco install lxrunoffline -y\n```\n### 安装 Centos8 wsl\n[打开链接](https://github.com/mishamosher/CentOS-WSL/releases/tag/8-stream-20210603)，这里直接下载 [CentOS8-stream.zip\n](https://github.com/mishamosher/CentOS-WSL/releases/download/8-stream-20210603/CentOS8-stream.zip)，解压后会发现有一个 **rootfs.tar.gz** 文件，使用 ` lxrunoffline install -n CentOS -d F:/centos -f E:\\CentOS8-stream\\rootfs.tar.gz` 命令来安装，其中 **-d** 后面是 *kernel* 想要安装到的位置，**-f** 的参数是 **rootfs.tar.gz** 的所有路径。\n然后将这个发行版设置为 **WSL2**：`wsl --set-version CentOS 2`\n\n### 换源\n由于默认源都用的国外安装路径，下载东西很慢，需要换成阿里源\n1. 备份原文件\n```\ncd /etc/yum.repos.d\nmv CentOS-Base.repo CentOS-Base.repo.bak\nmv CentOS-extras.repo CentOS-extras.repo.bak\nmv CentOS-centosplus.repo CentOS-centosplus.repo.bak\nmv CentOS-PowerTools.repo CentOS-PowerTools.repo.bak\nmv CentOS-AppStream.repo CentOS-AppStream.repo.bak\n```\n2.  下载\n```\n# wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\nvi CentOS-Stream-BaseOS.repo\n```\n这里有两点需要解释一下，目前安装的 *centos8* 没有内置 *wget* 和 *vim* ，不过上边只是一个文件，可以用 *windows* 下载完之后将里面的内容复制一下，然后粘贴到 **CentOS-Stream-BaseOS.repo** 保存就好。\n3. 删除缓存并生成新的缓存\n```\ndnf clean all\ndnf makecache\n```\n\n### wsl2配置使用windows网络代理\n我想要在 *wsl2* 上安装 *helm* ，脚本中有需要访问外网，这就需要一个代理。不过我的 *windows* 已经有代理了，只需要让它使用 *windows* 的代理就好。\n\n- wsl2获取win10 ip\n  - cat /etc/resolv.conf|grep nameserver|awk '{print $2}' => 例如：172.20.192.1\n注：由于windows防火墙的存在，此时可能出现ping 172.20.192.1失败\n- 新建防火墙入站规则\n\n  - 打开控制面板\\系统和安全\\Windows Defender 防火墙\n  - 点击入站规则->新建规则\n  - 规则类型：自定义\n  - 程序：所有程序\n  - 协议和端口：默认即可\n  - 作用域：\n    - 本地ip处选择“任何IP地址”\n    - 远程ip处选择“下列IP地址”，并将wsl2的IP添加进去。（请根据自己wsl2的ip进行计算，我这里添加了172.20.192.1/20）（掩码一般是20位）\n  - 操作：允许连接\n  - 配置文件：三个全选\n  - 名称描述：请自定义\n  - 注意：这一步完成后，从wsl2 ping主机的ip应该可以ping通了。\n- 防火墙配置\n  - 打开控制面板\\系统和安全\\Windows Defender 防火墙\\允许的应用。\n  - 将与代理相关的应用程序均设置为：允许其进行专用、公用网络通信。\n  - 特别注意的是：将Privoxy也配置为允许\n  \n- windows端代理软件配置\n  - 启用“允许来自局域网的连接”\n- 测试\n  - 在wsl2中配置http代理，如export http_proxy=\"http://172.20.192.1:1080\"。注意：端口号请结合自己的代理设置进行修改\n  - 执行命令curl cip.cc查看ip地址\n\n## 部分资料参数文章\n1. [arp命令 centos 安装_WSL2子系统安装CentOS8及源码编译Nginx1.18+PHP7.4+MySql8.0开发环境...](https://blog.51cto.com/u_15057852/2567230)\n2. [wsl2配置使用windows网络代理](https://blog.csdn.net/nick_young_qu/article/details/113709768)\n\n","source":"_posts/wsl2 安装 Centos8.md","raw":"---\ntitle: wsl2 安装 Centos8\ndate: 2021-07-04 11:07:37\nauthor: Ginta\nimg: http://img.ginta.top/huoying2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - WSL2\ncategories: 其他\n---\n## 前言\n由于开发需要安装 *centos* 版本的 *wsl*， 但 *Windows Store* 里只有 *Ubuntu*、*Debian* 等 *kernel*，好消息是 *Github* 上可以找到对应版本的安装包。\n\n### 安装 Chocolatey\nNuGet（读作New Get）是用于微软.NET开发平台的软件包管理器，是一个Visual Studio的扩展。Chocolatey 是基于 NuGet 的一个软件包管理器，就像 Linux 中的 yum 或 apt 一样，在 Windows10 中也可以用命令行安装程序了。\n\n右键单击开始菜单，选择 Windows PowerShell(管理员)，打开一个具有管理员权限的 PowerShell 窗口，输入命令并回车：\n```\nSet-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n完成后，输入命令：choco ，如果能正确显示版本号，说明安装成功。\n\n详情请查看官网文档安装说明\n\n### LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。\n\n在 PowerShell 窗口中输入命令安装LxRunOffline，安装完成后重启 PowerShell。\n```\nchoco install lxrunoffline -y\n```\n### 安装 Centos8 wsl\n[打开链接](https://github.com/mishamosher/CentOS-WSL/releases/tag/8-stream-20210603)，这里直接下载 [CentOS8-stream.zip\n](https://github.com/mishamosher/CentOS-WSL/releases/download/8-stream-20210603/CentOS8-stream.zip)，解压后会发现有一个 **rootfs.tar.gz** 文件，使用 ` lxrunoffline install -n CentOS -d F:/centos -f E:\\CentOS8-stream\\rootfs.tar.gz` 命令来安装，其中 **-d** 后面是 *kernel* 想要安装到的位置，**-f** 的参数是 **rootfs.tar.gz** 的所有路径。\n然后将这个发行版设置为 **WSL2**：`wsl --set-version CentOS 2`\n\n### 换源\n由于默认源都用的国外安装路径，下载东西很慢，需要换成阿里源\n1. 备份原文件\n```\ncd /etc/yum.repos.d\nmv CentOS-Base.repo CentOS-Base.repo.bak\nmv CentOS-extras.repo CentOS-extras.repo.bak\nmv CentOS-centosplus.repo CentOS-centosplus.repo.bak\nmv CentOS-PowerTools.repo CentOS-PowerTools.repo.bak\nmv CentOS-AppStream.repo CentOS-AppStream.repo.bak\n```\n2.  下载\n```\n# wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\nvi CentOS-Stream-BaseOS.repo\n```\n这里有两点需要解释一下，目前安装的 *centos8* 没有内置 *wget* 和 *vim* ，不过上边只是一个文件，可以用 *windows* 下载完之后将里面的内容复制一下，然后粘贴到 **CentOS-Stream-BaseOS.repo** 保存就好。\n3. 删除缓存并生成新的缓存\n```\ndnf clean all\ndnf makecache\n```\n\n### wsl2配置使用windows网络代理\n我想要在 *wsl2* 上安装 *helm* ，脚本中有需要访问外网，这就需要一个代理。不过我的 *windows* 已经有代理了，只需要让它使用 *windows* 的代理就好。\n\n- wsl2获取win10 ip\n  - cat /etc/resolv.conf|grep nameserver|awk '{print $2}' => 例如：172.20.192.1\n注：由于windows防火墙的存在，此时可能出现ping 172.20.192.1失败\n- 新建防火墙入站规则\n\n  - 打开控制面板\\系统和安全\\Windows Defender 防火墙\n  - 点击入站规则->新建规则\n  - 规则类型：自定义\n  - 程序：所有程序\n  - 协议和端口：默认即可\n  - 作用域：\n    - 本地ip处选择“任何IP地址”\n    - 远程ip处选择“下列IP地址”，并将wsl2的IP添加进去。（请根据自己wsl2的ip进行计算，我这里添加了172.20.192.1/20）（掩码一般是20位）\n  - 操作：允许连接\n  - 配置文件：三个全选\n  - 名称描述：请自定义\n  - 注意：这一步完成后，从wsl2 ping主机的ip应该可以ping通了。\n- 防火墙配置\n  - 打开控制面板\\系统和安全\\Windows Defender 防火墙\\允许的应用。\n  - 将与代理相关的应用程序均设置为：允许其进行专用、公用网络通信。\n  - 特别注意的是：将Privoxy也配置为允许\n  \n- windows端代理软件配置\n  - 启用“允许来自局域网的连接”\n- 测试\n  - 在wsl2中配置http代理，如export http_proxy=\"http://172.20.192.1:1080\"。注意：端口号请结合自己的代理设置进行修改\n  - 执行命令curl cip.cc查看ip地址\n\n## 部分资料参数文章\n1. [arp命令 centos 安装_WSL2子系统安装CentOS8及源码编译Nginx1.18+PHP7.4+MySql8.0开发环境...](https://blog.51cto.com/u_15057852/2567230)\n2. [wsl2配置使用windows网络代理](https://blog.csdn.net/nick_young_qu/article/details/113709768)\n\n","slug":"wsl2 安装 Centos8","published":1,"updated":"2022-08-11T12:49:48.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p61818003ztksc5uyd3u86","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>由于开发需要安装 <em>centos</em> 版本的 <em>wsl</em>， 但 <em>Windows Store</em> 里只有 <em>Ubuntu</em>、<em>Debian</em> 等 <em>kernel</em>，好消息是 <em>Github</em> 上可以找到对应版本的安装包。</p>\n<h3 id=\"安装-Chocolatey\"><a href=\"#安装-Chocolatey\" class=\"headerlink\" title=\"安装 Chocolatey\"></a>安装 Chocolatey</h3><p>NuGet（读作New Get）是用于微软.NET开发平台的软件包管理器，是一个Visual Studio的扩展。Chocolatey 是基于 NuGet 的一个软件包管理器，就像 Linux 中的 yum 或 apt 一样，在 Windows10 中也可以用命令行安装程序了。</p>\n<p>右键单击开始菜单，选择 Windows PowerShell(管理员)，打开一个具有管理员权限的 PowerShell 窗口，输入命令并回车：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure>\n<p>完成后，输入命令：choco ，如果能正确显示版本号，说明安装成功。</p>\n<p>详情请查看官网文档安装说明</p>\n<h3 id=\"LxRunOffline-是非常实用的-WSL-管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配-WSL-的任何-Linux-发行版，可以将-WSL-子系统安装到任意目录中。\"><a href=\"#LxRunOffline-是非常实用的-WSL-管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配-WSL-的任何-Linux-发行版，可以将-WSL-子系统安装到任意目录中。\" class=\"headerlink\" title=\"LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。\"></a>LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。</h3><p>在 PowerShell 窗口中输入命令安装LxRunOffline，安装完成后重启 PowerShell。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install lxrunoffline -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-Centos8-wsl\"><a href=\"#安装-Centos8-wsl\" class=\"headerlink\" title=\"安装 Centos8 wsl\"></a>安装 Centos8 wsl</h3><p><a href=\"https://github.com/mishamosher/CentOS-WSL/releases/tag/8-stream-20210603\">打开链接</a>，这里直接下载 <a href=\"https://github.com/mishamosher/CentOS-WSL/releases/download/8-stream-20210603/CentOS8-stream.zip\">CentOS8-stream.zip\n</a>，解压后会发现有一个 <strong>rootfs.tar.gz</strong> 文件，使用 <code> lxrunoffline install -n CentOS -d F:/centos -f E:\\CentOS8-stream\\rootfs.tar.gz</code> 命令来安装，其中 <strong>-d</strong> 后面是 <em>kernel</em> 想要安装到的位置，**-f** 的参数是 <strong>rootfs.tar.gz</strong> 的所有路径。<br>然后将这个发行版设置为 <strong>WSL2</strong>：<code>wsl --set-version CentOS 2</code></p>\n<h3 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h3><p>由于默认源都用的国外安装路径，下载东西很慢，需要换成阿里源</p>\n<ol>\n<li>备份原文件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/yum.repos.d</span><br><span class=\"line\">mv CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class=\"line\">mv CentOS-extras.repo CentOS-extras.repo.bak</span><br><span class=\"line\">mv CentOS-centosplus.repo CentOS-centosplus.repo.bak</span><br><span class=\"line\">mv CentOS-PowerTools.repo CentOS-PowerTools.repo.bak</span><br><span class=\"line\">mv CentOS-AppStream.repo CentOS-AppStream.repo.bak</span><br></pre></td></tr></table></figure></li>\n<li>下载<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class=\"line\">vi CentOS-Stream-BaseOS.repo</span><br></pre></td></tr></table></figure>\n这里有两点需要解释一下，目前安装的 <em>centos8</em> 没有内置 <em>wget</em> 和 <em>vim</em> ，不过上边只是一个文件，可以用 <em>windows</em> 下载完之后将里面的内容复制一下，然后粘贴到 <strong>CentOS-Stream-BaseOS.repo</strong> 保存就好。</li>\n<li>删除缓存并生成新的缓存<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf clean all</span><br><span class=\"line\">dnf makecache</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"wsl2配置使用windows网络代理\"><a href=\"#wsl2配置使用windows网络代理\" class=\"headerlink\" title=\"wsl2配置使用windows网络代理\"></a>wsl2配置使用windows网络代理</h3><p>我想要在 <em>wsl2</em> 上安装 <em>helm</em> ，脚本中有需要访问外网，这就需要一个代理。不过我的 <em>windows</em> 已经有代理了，只需要让它使用 <em>windows</em> 的代理就好。</p>\n<ul>\n<li><p>wsl2获取win10 ip</p>\n<ul>\n<li>cat &#x2F;etc&#x2F;resolv.conf|grep nameserver|awk ‘{print $2}’ &#x3D;&gt; 例如：172.20.192.1<br>注：由于windows防火墙的存在，此时可能出现ping 172.20.192.1失败</li>\n</ul>\n</li>\n<li><p>新建防火墙入站规则</p>\n<ul>\n<li>打开控制面板\\系统和安全\\Windows Defender 防火墙</li>\n<li>点击入站规则-&gt;新建规则</li>\n<li>规则类型：自定义</li>\n<li>程序：所有程序</li>\n<li>协议和端口：默认即可</li>\n<li>作用域：<ul>\n<li>本地ip处选择“任何IP地址”</li>\n<li>远程ip处选择“下列IP地址”，并将wsl2的IP添加进去。（请根据自己wsl2的ip进行计算，我这里添加了172.20.192.1&#x2F;20）（掩码一般是20位）</li>\n</ul>\n</li>\n<li>操作：允许连接</li>\n<li>配置文件：三个全选</li>\n<li>名称描述：请自定义</li>\n<li>注意：这一步完成后，从wsl2 ping主机的ip应该可以ping通了。</li>\n</ul>\n</li>\n<li><p>防火墙配置</p>\n<ul>\n<li>打开控制面板\\系统和安全\\Windows Defender 防火墙\\允许的应用。</li>\n<li>将与代理相关的应用程序均设置为：允许其进行专用、公用网络通信。</li>\n<li>特别注意的是：将Privoxy也配置为允许</li>\n</ul>\n</li>\n<li><p>windows端代理软件配置</p>\n<ul>\n<li>启用“允许来自局域网的连接”</li>\n</ul>\n</li>\n<li><p>测试</p>\n<ul>\n<li>在wsl2中配置http代理，如export http_proxy&#x3D;”<a href=\"http://172.20.192.1:1080&quot;。注意：端口号请结合自己的代理设置进行修改\">http://172.20.192.1:1080&quot;。注意：端口号请结合自己的代理设置进行修改</a></li>\n<li>执行命令curl cip.cc查看ip地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"部分资料参数文章\"><a href=\"#部分资料参数文章\" class=\"headerlink\" title=\"部分资料参数文章\"></a>部分资料参数文章</h2><ol>\n<li><a href=\"https://blog.51cto.com/u_15057852/2567230\">arp命令 centos 安装_WSL2子系统安装CentOS8及源码编译Nginx1.18+PHP7.4+MySql8.0开发环境…</a></li>\n<li><a href=\"https://blog.csdn.net/nick_young_qu/article/details/113709768\">wsl2配置使用windows网络代理</a></li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>由于开发需要安装 <em>centos</em> 版本的 <em>wsl</em>， 但 <em>Windows Store</em> 里只有 <em>Ubuntu</em>、<em>Debian</em> 等 <em>kernel</em>，好消息是 <em>Github</em> 上可以找到对应版本的安装包。</p>\n<h3 id=\"安装-Chocolatey\"><a href=\"#安装-Chocolatey\" class=\"headerlink\" title=\"安装 Chocolatey\"></a>安装 Chocolatey</h3><p>NuGet（读作New Get）是用于微软.NET开发平台的软件包管理器，是一个Visual Studio的扩展。Chocolatey 是基于 NuGet 的一个软件包管理器，就像 Linux 中的 yum 或 apt 一样，在 Windows10 中也可以用命令行安装程序了。</p>\n<p>右键单击开始菜单，选择 Windows PowerShell(管理员)，打开一个具有管理员权限的 PowerShell 窗口，输入命令并回车：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure>\n<p>完成后，输入命令：choco ，如果能正确显示版本号，说明安装成功。</p>\n<p>详情请查看官网文档安装说明</p>\n<h3 id=\"LxRunOffline-是非常实用的-WSL-管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配-WSL-的任何-Linux-发行版，可以将-WSL-子系统安装到任意目录中。\"><a href=\"#LxRunOffline-是非常实用的-WSL-管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配-WSL-的任何-Linux-发行版，可以将-WSL-子系统安装到任意目录中。\" class=\"headerlink\" title=\"LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。\"></a>LxRunOffline 是非常实用的 WSL 管理软件，可以备份、创建、恢复、导出WSL子系统，也可以安装适配 WSL 的任何 Linux 发行版，可以将 WSL 子系统安装到任意目录中。</h3><p>在 PowerShell 窗口中输入命令安装LxRunOffline，安装完成后重启 PowerShell。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install lxrunoffline -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-Centos8-wsl\"><a href=\"#安装-Centos8-wsl\" class=\"headerlink\" title=\"安装 Centos8 wsl\"></a>安装 Centos8 wsl</h3><p><a href=\"https://github.com/mishamosher/CentOS-WSL/releases/tag/8-stream-20210603\">打开链接</a>，这里直接下载 <a href=\"https://github.com/mishamosher/CentOS-WSL/releases/download/8-stream-20210603/CentOS8-stream.zip\">CentOS8-stream.zip\n</a>，解压后会发现有一个 <strong>rootfs.tar.gz</strong> 文件，使用 <code> lxrunoffline install -n CentOS -d F:/centos -f E:\\CentOS8-stream\\rootfs.tar.gz</code> 命令来安装，其中 <strong>-d</strong> 后面是 <em>kernel</em> 想要安装到的位置，**-f** 的参数是 <strong>rootfs.tar.gz</strong> 的所有路径。<br>然后将这个发行版设置为 <strong>WSL2</strong>：<code>wsl --set-version CentOS 2</code></p>\n<h3 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h3><p>由于默认源都用的国外安装路径，下载东西很慢，需要换成阿里源</p>\n<ol>\n<li>备份原文件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/yum.repos.d</span><br><span class=\"line\">mv CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class=\"line\">mv CentOS-extras.repo CentOS-extras.repo.bak</span><br><span class=\"line\">mv CentOS-centosplus.repo CentOS-centosplus.repo.bak</span><br><span class=\"line\">mv CentOS-PowerTools.repo CentOS-PowerTools.repo.bak</span><br><span class=\"line\">mv CentOS-AppStream.repo CentOS-AppStream.repo.bak</span><br></pre></td></tr></table></figure></li>\n<li>下载<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class=\"line\">vi CentOS-Stream-BaseOS.repo</span><br></pre></td></tr></table></figure>\n这里有两点需要解释一下，目前安装的 <em>centos8</em> 没有内置 <em>wget</em> 和 <em>vim</em> ，不过上边只是一个文件，可以用 <em>windows</em> 下载完之后将里面的内容复制一下，然后粘贴到 <strong>CentOS-Stream-BaseOS.repo</strong> 保存就好。</li>\n<li>删除缓存并生成新的缓存<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf clean all</span><br><span class=\"line\">dnf makecache</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"wsl2配置使用windows网络代理\"><a href=\"#wsl2配置使用windows网络代理\" class=\"headerlink\" title=\"wsl2配置使用windows网络代理\"></a>wsl2配置使用windows网络代理</h3><p>我想要在 <em>wsl2</em> 上安装 <em>helm</em> ，脚本中有需要访问外网，这就需要一个代理。不过我的 <em>windows</em> 已经有代理了，只需要让它使用 <em>windows</em> 的代理就好。</p>\n<ul>\n<li><p>wsl2获取win10 ip</p>\n<ul>\n<li>cat &#x2F;etc&#x2F;resolv.conf|grep nameserver|awk ‘{print $2}’ &#x3D;&gt; 例如：172.20.192.1<br>注：由于windows防火墙的存在，此时可能出现ping 172.20.192.1失败</li>\n</ul>\n</li>\n<li><p>新建防火墙入站规则</p>\n<ul>\n<li>打开控制面板\\系统和安全\\Windows Defender 防火墙</li>\n<li>点击入站规则-&gt;新建规则</li>\n<li>规则类型：自定义</li>\n<li>程序：所有程序</li>\n<li>协议和端口：默认即可</li>\n<li>作用域：<ul>\n<li>本地ip处选择“任何IP地址”</li>\n<li>远程ip处选择“下列IP地址”，并将wsl2的IP添加进去。（请根据自己wsl2的ip进行计算，我这里添加了172.20.192.1&#x2F;20）（掩码一般是20位）</li>\n</ul>\n</li>\n<li>操作：允许连接</li>\n<li>配置文件：三个全选</li>\n<li>名称描述：请自定义</li>\n<li>注意：这一步完成后，从wsl2 ping主机的ip应该可以ping通了。</li>\n</ul>\n</li>\n<li><p>防火墙配置</p>\n<ul>\n<li>打开控制面板\\系统和安全\\Windows Defender 防火墙\\允许的应用。</li>\n<li>将与代理相关的应用程序均设置为：允许其进行专用、公用网络通信。</li>\n<li>特别注意的是：将Privoxy也配置为允许</li>\n</ul>\n</li>\n<li><p>windows端代理软件配置</p>\n<ul>\n<li>启用“允许来自局域网的连接”</li>\n</ul>\n</li>\n<li><p>测试</p>\n<ul>\n<li>在wsl2中配置http代理，如export http_proxy&#x3D;”<a href=\"http://172.20.192.1:1080&quot;。注意：端口号请结合自己的代理设置进行修改\">http://172.20.192.1:1080&quot;。注意：端口号请结合自己的代理设置进行修改</a></li>\n<li>执行命令curl cip.cc查看ip地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"部分资料参数文章\"><a href=\"#部分资料参数文章\" class=\"headerlink\" title=\"部分资料参数文章\"></a>部分资料参数文章</h2><ol>\n<li><a href=\"https://blog.51cto.com/u_15057852/2567230\">arp命令 centos 安装_WSL2子系统安装CentOS8及源码编译Nginx1.18+PHP7.4+MySql8.0开发环境…</a></li>\n<li><a href=\"https://blog.csdn.net/nick_young_qu/article/details/113709768\">wsl2配置使用windows网络代理</a></li>\n</ol>\n"},{"title":"《大秦帝国》终于到了","date":"2020-04-02T05:52:30.000Z","author":"Ginta","img":"http://img.ginta.top/qinshi2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/qinshi2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### NNQI\r\n前天下单的书终于到了！！！\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/04/01/5a84814f-d5bd-48d6-93b3-8fa97600dd3d.jpg)\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/04/01/d20e997d-8d84-4ac6-9747-45a83b67c7e4.jpg)\r\n\r\n\r\n\r\n\r\n### 一度\r\n上次看**《大秦帝国》** 还是在四川。那时周末会在成都图书馆做志愿者，一般休息的时候都会看看杂志，读者、格言、意林、青年文摘，有时也会看看达芬奇和梵高的作品，虽然始终无法领会他们的境界。偶尔到借阅区转了一圈，就在书架最上层看到了一本《大秦帝国》，当时第一部已经外借出去了，只留下一本第二部的“国命纵横”，大致翻了一下感觉还行，讲的是纵横家苏秦和张仪各自选择不同的国家实现自己的抱负，书中用词没有让我感到浮夸的地方，整体印象就是行文恰到好处。回家的时候顺便也就借走了，不过那一个月也比较忙，没看完就还回去了。\r\n\r\n###  二重\r\n平时在公司午休的时候也基本都是看看杂志，周末的话会多睡几个小时。一段时间没有认真地阅读一部小说总是会感到有些不安，前两天考虑了一下还是决定把之前没有读完的《大秦帝国》通读一遍，至于读完以后再买什么书就是之后的事情了。\r\n\r\n>>>当我还是个孩子的时候，我吃过很多食物，现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经成长为我的骨头和肉。  --三毛","source":"_posts/《大秦帝国》终于到了.md","raw":"---\ntitle: 《大秦帝国》终于到了\ndate: 2020-04-02 13:52:30\nauthor: Ginta\nimg: http://img.ginta.top/qinshi2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/qinshi2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - 历史相关\ncategories: 阅读\n---\n### NNQI\r\n前天下单的书终于到了！！！\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/04/01/5a84814f-d5bd-48d6-93b3-8fa97600dd3d.jpg)\r\n\r\n\r\n![](http://img.ginta.top/markdownx/2020/04/01/d20e997d-8d84-4ac6-9747-45a83b67c7e4.jpg)\r\n\r\n\r\n\r\n\r\n### 一度\r\n上次看**《大秦帝国》** 还是在四川。那时周末会在成都图书馆做志愿者，一般休息的时候都会看看杂志，读者、格言、意林、青年文摘，有时也会看看达芬奇和梵高的作品，虽然始终无法领会他们的境界。偶尔到借阅区转了一圈，就在书架最上层看到了一本《大秦帝国》，当时第一部已经外借出去了，只留下一本第二部的“国命纵横”，大致翻了一下感觉还行，讲的是纵横家苏秦和张仪各自选择不同的国家实现自己的抱负，书中用词没有让我感到浮夸的地方，整体印象就是行文恰到好处。回家的时候顺便也就借走了，不过那一个月也比较忙，没看完就还回去了。\r\n\r\n###  二重\r\n平时在公司午休的时候也基本都是看看杂志，周末的话会多睡几个小时。一段时间没有认真地阅读一部小说总是会感到有些不安，前两天考虑了一下还是决定把之前没有读完的《大秦帝国》通读一遍，至于读完以后再买什么书就是之后的事情了。\r\n\r\n>>>当我还是个孩子的时候，我吃过很多食物，现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经成长为我的骨头和肉。  --三毛","slug":"《大秦帝国》终于到了","published":1,"updated":"2022-08-11T12:49:48.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p618180042tksc9ari0xde","content":"<h3 id=\"NNQI\"><a href=\"#NNQI\" class=\"headerlink\" title=\"NNQI\"></a>NNQI</h3><p>前天下单的书终于到了！！！</p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/04/01/5a84814f-d5bd-48d6-93b3-8fa97600dd3d.jpg\"></p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/04/01/d20e997d-8d84-4ac6-9747-45a83b67c7e4.jpg\"></p>\n<h3 id=\"一度\"><a href=\"#一度\" class=\"headerlink\" title=\"一度\"></a>一度</h3><p>上次看<strong>《大秦帝国》</strong> 还是在四川。那时周末会在成都图书馆做志愿者，一般休息的时候都会看看杂志，读者、格言、意林、青年文摘，有时也会看看达芬奇和梵高的作品，虽然始终无法领会他们的境界。偶尔到借阅区转了一圈，就在书架最上层看到了一本《大秦帝国》，当时第一部已经外借出去了，只留下一本第二部的“国命纵横”，大致翻了一下感觉还行，讲的是纵横家苏秦和张仪各自选择不同的国家实现自己的抱负，书中用词没有让我感到浮夸的地方，整体印象就是行文恰到好处。回家的时候顺便也就借走了，不过那一个月也比较忙，没看完就还回去了。</p>\n<h3 id=\"二重\"><a href=\"#二重\" class=\"headerlink\" title=\"二重\"></a>二重</h3><p>平时在公司午休的时候也基本都是看看杂志，周末的话会多睡几个小时。一段时间没有认真地阅读一部小说总是会感到有些不安，前两天考虑了一下还是决定把之前没有读完的《大秦帝国》通读一遍，至于读完以后再买什么书就是之后的事情了。</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>当我还是个孩子的时候，我吃过很多食物，现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经成长为我的骨头和肉。  –三毛</p>\n</blockquote>\n</blockquote>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"NNQI\"><a href=\"#NNQI\" class=\"headerlink\" title=\"NNQI\"></a>NNQI</h3><p>前天下单的书终于到了！！！</p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/04/01/5a84814f-d5bd-48d6-93b3-8fa97600dd3d.jpg\"></p>\n<p><img src=\"http://img.ginta.top/markdownx/2020/04/01/d20e997d-8d84-4ac6-9747-45a83b67c7e4.jpg\"></p>\n<h3 id=\"一度\"><a href=\"#一度\" class=\"headerlink\" title=\"一度\"></a>一度</h3><p>上次看<strong>《大秦帝国》</strong> 还是在四川。那时周末会在成都图书馆做志愿者，一般休息的时候都会看看杂志，读者、格言、意林、青年文摘，有时也会看看达芬奇和梵高的作品，虽然始终无法领会他们的境界。偶尔到借阅区转了一圈，就在书架最上层看到了一本《大秦帝国》，当时第一部已经外借出去了，只留下一本第二部的“国命纵横”，大致翻了一下感觉还行，讲的是纵横家苏秦和张仪各自选择不同的国家实现自己的抱负，书中用词没有让我感到浮夸的地方，整体印象就是行文恰到好处。回家的时候顺便也就借走了，不过那一个月也比较忙，没看完就还回去了。</p>\n<h3 id=\"二重\"><a href=\"#二重\" class=\"headerlink\" title=\"二重\"></a>二重</h3><p>平时在公司午休的时候也基本都是看看杂志，周末的话会多睡几个小时。一段时间没有认真地阅读一部小说总是会感到有些不安，前两天考虑了一下还是决定把之前没有读完的《大秦帝国》通读一遍，至于读完以后再买什么书就是之后的事情了。</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>当我还是个孩子的时候，我吃过很多食物，现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经成长为我的骨头和肉。  –三毛</p>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"title":"删除排序数组中的重复项","date":"2019-12-21T01:06:53.000Z","author":"Ginta","img":"http://img.ginta.top/huoying1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。\n\n\n\n不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。\n\n\n\n>给定数组 nums = [1,1,2], \n\n函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 \n\n你不需要考虑数组中超出新长度后面的元素。\n\n\n\n## 思路\n\n使用双游标方法 *flag* 来记录当前数组不重复的位置，而变量 *j* 控制整个数组的遍历；当 *flag* 位置的数据和 *j* 位置的数据不同时则说明有新的，也就是有效变量进入，此时 *flag* 加 1，同时也要把 *j* 位置的值给 *flag* 位置。\n\n\n\n```\n\nclass Solution:\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        flag = 0\n\n        for j in range(1, len(nums)):\n\n            if nums[j] != nums[flag]:\n\n                flag += 1\n\n                nums[flag] = nums[j]\n\n        return flag+1\n\n```","source":"_posts/删除排序数组中的重复项.md","raw":"---\ntitle: 删除排序数组中的重复项\ndate: 2019-12-21 09:06:53\nauthor: Ginta\nimg: http://img.ginta.top/huoying1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 算法\npublished: false\n---\n给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。\n\n\n\n不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。\n\n\n\n>给定数组 nums = [1,1,2], \n\n函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 \n\n你不需要考虑数组中超出新长度后面的元素。\n\n\n\n## 思路\n\n使用双游标方法 *flag* 来记录当前数组不重复的位置，而变量 *j* 控制整个数组的遍历；当 *flag* 位置的数据和 *j* 位置的数据不同时则说明有新的，也就是有效变量进入，此时 *flag* 加 1，同时也要把 *j* 位置的值给 *flag* 位置。\n\n\n\n```\n\nclass Solution:\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        flag = 0\n\n        for j in range(1, len(nums)):\n\n            if nums[j] != nums[flag]:\n\n                flag += 1\n\n                nums[flag] = nums[j]\n\n        return flag+1\n\n```","slug":"删除排序数组中的重复项","updated":"2023-06-14T10:17:47.924Z","_id":"cl6p61819004etksc0teu65qk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p>\n<p>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>\n<blockquote>\n<p>给定数组 nums &#x3D; [1,1,2], </p>\n</blockquote>\n<p>函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 </p>\n<p>你不需要考虑数组中超出新长度后面的元素。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>使用双游标方法 <em>flag</em> 来记录当前数组不重复的位置，而变量 <em>j</em> 控制整个数组的遍历；当 <em>flag</em> 位置的数据和 <em>j</em> 位置的数据不同时则说明有新的，也就是有效变量进入，此时 <em>flag</em> 加 1，同时也要把 <em>j</em> 位置的值给 <em>flag</em> 位置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\"></span><br><span class=\"line\">    def removeDuplicates(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\"></span><br><span class=\"line\">        flag = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        for j in range(1, len(nums)):</span><br><span class=\"line\"></span><br><span class=\"line\">            if nums[j] != nums[flag]:</span><br><span class=\"line\"></span><br><span class=\"line\">                flag += 1</span><br><span class=\"line\"></span><br><span class=\"line\">                nums[flag] = nums[j]</span><br><span class=\"line\"></span><br><span class=\"line\">        return flag+1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p>\n<p>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>\n<blockquote>\n<p>给定数组 nums &#x3D; [1,1,2], </p>\n</blockquote>\n<p>函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 </p>\n<p>你不需要考虑数组中超出新长度后面的元素。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>使用双游标方法 <em>flag</em> 来记录当前数组不重复的位置，而变量 <em>j</em> 控制整个数组的遍历；当 <em>flag</em> 位置的数据和 <em>j</em> 位置的数据不同时则说明有新的，也就是有效变量进入，此时 <em>flag</em> 加 1，同时也要把 <em>j</em> 位置的值给 <em>flag</em> 位置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\"></span><br><span class=\"line\">    def removeDuplicates(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\"></span><br><span class=\"line\">        flag = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        for j in range(1, len(nums)):</span><br><span class=\"line\"></span><br><span class=\"line\">            if nums[j] != nums[flag]:</span><br><span class=\"line\"></span><br><span class=\"line\">                flag += 1</span><br><span class=\"line\"></span><br><span class=\"line\">                nums[flag] = nums[j]</span><br><span class=\"line\"></span><br><span class=\"line\">        return flag+1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"围棋第一次胜局","date":"2021-07-08T14:50:21.000Z","author":"Ginta","img":"http://img.ginta.top/weiqi2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/weiqi2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 心血来潮\n前几天弟弟说考试比上次进步了，想让得到茫茫多的零食大礼包作为鼓励。考虑到现在的学生也是蛮辛苦的，于是果断奖励了三本课外书，除了《活着》是应付老妈的，《禁区法则》和《天局》一如既往地中二。其中《天局》讲的就是凡人与天人下围棋最终以半子取胜的故事。\n\n### 入门\n给他普及了《天局》故事后顺手就下了个围棋app，百度了一下教程就算入门了。开始是和玩家对弈，想了想不恶心别人了，就人机互啄，难度从入门级降到了儿童级。几天之内下了10几局吧，无一例外全输了，直到今天晚上，终于赢了一局，万分感动。\n附上图以作记录\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210708224624978.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n### 其他想说的\n事实证明围棋入门并不难，只是想要精通还是不容易的。比较考验大局观，一子的得失有时候并不重要，总之能赢第一局还是挺高兴的。","source":"_posts/围棋第一次胜局.md","raw":"---\ntitle: 围棋第一次胜局\ndate: 2021-07-08 22:50:21\nauthor: Ginta\nimg: http://img.ginta.top/weiqi2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/weiqi2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - 生活\ncategories: 生活\n---\n### 心血来潮\n前几天弟弟说考试比上次进步了，想让得到茫茫多的零食大礼包作为鼓励。考虑到现在的学生也是蛮辛苦的，于是果断奖励了三本课外书，除了《活着》是应付老妈的，《禁区法则》和《天局》一如既往地中二。其中《天局》讲的就是凡人与天人下围棋最终以半子取胜的故事。\n\n### 入门\n给他普及了《天局》故事后顺手就下了个围棋app，百度了一下教程就算入门了。开始是和玩家对弈，想了想不恶心别人了，就人机互啄，难度从入门级降到了儿童级。几天之内下了10几局吧，无一例外全输了，直到今天晚上，终于赢了一局，万分感动。\n附上图以作记录\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210708224624978.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center)\n### 其他想说的\n事实证明围棋入门并不难，只是想要精通还是不容易的。比较考验大局观，一子的得失有时候并不重要，总之能赢第一局还是挺高兴的。","slug":"围棋第一次胜局","published":1,"updated":"2022-08-11T12:49:48.142Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181a004htksc5d9470jn","content":"<h3 id=\"心血来潮\"><a href=\"#心血来潮\" class=\"headerlink\" title=\"心血来潮\"></a>心血来潮</h3><p>前几天弟弟说考试比上次进步了，想让得到茫茫多的零食大礼包作为鼓励。考虑到现在的学生也是蛮辛苦的，于是果断奖励了三本课外书，除了《活着》是应付老妈的，《禁区法则》和《天局》一如既往地中二。其中《天局》讲的就是凡人与天人下围棋最终以半子取胜的故事。</p>\n<h3 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h3><p>给他普及了《天局》故事后顺手就下了个围棋app，百度了一下教程就算入门了。开始是和玩家对弈，想了想不恶心别人了，就人机互啄，难度从入门级降到了儿童级。几天之内下了10几局吧，无一例外全输了，直到今天晚上，终于赢了一局，万分感动。<br>附上图以作记录<br><img src=\"https://img-blog.csdnimg.cn/20210708224624978.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"其他想说的\"><a href=\"#其他想说的\" class=\"headerlink\" title=\"其他想说的\"></a>其他想说的</h3><p>事实证明围棋入门并不难，只是想要精通还是不容易的。比较考验大局观，一子的得失有时候并不重要，总之能赢第一局还是挺高兴的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"心血来潮\"><a href=\"#心血来潮\" class=\"headerlink\" title=\"心血来潮\"></a>心血来潮</h3><p>前几天弟弟说考试比上次进步了，想让得到茫茫多的零食大礼包作为鼓励。考虑到现在的学生也是蛮辛苦的，于是果断奖励了三本课外书，除了《活着》是应付老妈的，《禁区法则》和《天局》一如既往地中二。其中《天局》讲的就是凡人与天人下围棋最终以半子取胜的故事。</p>\n<h3 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h3><p>给他普及了《天局》故事后顺手就下了个围棋app，百度了一下教程就算入门了。开始是和玩家对弈，想了想不恶心别人了，就人机互啄，难度从入门级降到了儿童级。几天之内下了10几局吧，无一例外全输了，直到今天晚上，终于赢了一局，万分感动。<br>附上图以作记录<br><img src=\"https://img-blog.csdnimg.cn/20210708224624978.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"其他想说的\"><a href=\"#其他想说的\" class=\"headerlink\" title=\"其他想说的\"></a>其他想说的</h3><p>事实证明围棋入门并不难，只是想要精通还是不容易的。比较考验大局观，一子的得失有时候并不重要，总之能赢第一局还是挺高兴的。</p>\n"},{"title":"数据库定时备份任务","date":"2020-03-28T08:41:52.000Z","author":"Ginta","img":"http://img.ginta.top/lc1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/lc1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"## 前言\n\n最近因为一次误操作不小心把博客的数据库文件删除了，当时感觉自然是难受的。不过幸运的是之前移动博客文件的时候曾把数据和项目打包了，所以文件又找回来了！！！\n\n虽然文件是找回来了，不过这种情况难免再次发生，而且下次就不一定能找回来了。于是决定写一个定时任务每天备份一下数据库文件。\n\n\n\n使用的第三方库是 **apscheduler**，简单的介绍可以看 [apscheduler](http://ginta.top/detail/41/)，更具体的请参考 [文档](https://apscheduler.readthedocs.io/en/stable/)\n\n\n\n代码如下：\n\n\n\n```\n\n# backup_db.py \n\nimport os\n\nimport datetime\n\n\n\nfrom apscheduler.schedulers.blocking import BlockingScheduler\n\n\n\n\n\nfile_path = \"/root/Workspace/ginta.top/myblog/myblog/db.sqlite3\"\n\nbackup_dir = \"/root/data/backup_blog_db\"\n\n\n\n\n\ndef backup_db(file_path, backup_dir):\n\n    now = datetime.datetime.now()\n\n    date = datetime.datetime.strftime(now, \"%Y-%m-%d\")\n\n    backup_dir = os.path.join(backup_dir, date)\n\n\n\n    os.system(\"mkdir {}\".format(backup_dir))\n\n\n\n    backup_file_dir = os.path.join(backup_dir)\n\n    os.system(\"cp {} {}\".format(file_path, backup_file_dir))\n\n    print(\"{} backup_finished\".format(date))\n\n\n\nif __name__ == \"__main__\":\n\n    print(\"backup_script start!\")\n\n    sched = BlockingScheduler()\n\n    sched.add_job(backup_db, 'interval', [file_path, backup_dir], seconds=60 * 60 * 24)\n\n    sched.start()\n\n```\n\n然后执行 `nohup python -u backup_db.py > /root/data/log/back_db/backup_db.log 2>&1 &` 就放到后台了\n\n\n\n### 总结\n\n实现了每天定时备份一次数据库，但是也很不优雅。\n\n1. 在 *python* 脚本中执行 *mkdir* 和 *cp* 命令是很不好的.\n\n2. 以后脚本多了就很不好管理，问了一下公司我带的大佬推荐了两种管理方式，分别是 **jenkins** 和 **crontab**.","source":"_posts/数据库定时备份任务.md","raw":"---\ntitle: 数据库定时备份任务\ndate: 2020-03-28 16:41:52\nauthor: Ginta\nimg: http://img.ginta.top/lc1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/lc1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - python\ncategories: python\npublished: false\n---\n## 前言\n\n最近因为一次误操作不小心把博客的数据库文件删除了，当时感觉自然是难受的。不过幸运的是之前移动博客文件的时候曾把数据和项目打包了，所以文件又找回来了！！！\n\n虽然文件是找回来了，不过这种情况难免再次发生，而且下次就不一定能找回来了。于是决定写一个定时任务每天备份一下数据库文件。\n\n\n\n使用的第三方库是 **apscheduler**，简单的介绍可以看 [apscheduler](http://ginta.top/detail/41/)，更具体的请参考 [文档](https://apscheduler.readthedocs.io/en/stable/)\n\n\n\n代码如下：\n\n\n\n```\n\n# backup_db.py \n\nimport os\n\nimport datetime\n\n\n\nfrom apscheduler.schedulers.blocking import BlockingScheduler\n\n\n\n\n\nfile_path = \"/root/Workspace/ginta.top/myblog/myblog/db.sqlite3\"\n\nbackup_dir = \"/root/data/backup_blog_db\"\n\n\n\n\n\ndef backup_db(file_path, backup_dir):\n\n    now = datetime.datetime.now()\n\n    date = datetime.datetime.strftime(now, \"%Y-%m-%d\")\n\n    backup_dir = os.path.join(backup_dir, date)\n\n\n\n    os.system(\"mkdir {}\".format(backup_dir))\n\n\n\n    backup_file_dir = os.path.join(backup_dir)\n\n    os.system(\"cp {} {}\".format(file_path, backup_file_dir))\n\n    print(\"{} backup_finished\".format(date))\n\n\n\nif __name__ == \"__main__\":\n\n    print(\"backup_script start!\")\n\n    sched = BlockingScheduler()\n\n    sched.add_job(backup_db, 'interval', [file_path, backup_dir], seconds=60 * 60 * 24)\n\n    sched.start()\n\n```\n\n然后执行 `nohup python -u backup_db.py > /root/data/log/back_db/backup_db.log 2>&1 &` 就放到后台了\n\n\n\n### 总结\n\n实现了每天定时备份一次数据库，但是也很不优雅。\n\n1. 在 *python* 脚本中执行 *mkdir* 和 *cp* 命令是很不好的.\n\n2. 以后脚本多了就很不好管理，问了一下公司我带的大佬推荐了两种管理方式，分别是 **jenkins** 和 **crontab**.","slug":"数据库定时备份任务","updated":"2023-06-14T10:17:39.359Z","_id":"cl6p6181a004ltksc9ze72hgi","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近因为一次误操作不小心把博客的数据库文件删除了，当时感觉自然是难受的。不过幸运的是之前移动博客文件的时候曾把数据和项目打包了，所以文件又找回来了！！！</p>\n<p>虽然文件是找回来了，不过这种情况难免再次发生，而且下次就不一定能找回来了。于是决定写一个定时任务每天备份一下数据库文件。</p>\n<p>使用的第三方库是 <strong>apscheduler</strong>，简单的介绍可以看 <a href=\"http://ginta.top/detail/41/\">apscheduler</a>，更具体的请参考 <a href=\"https://apscheduler.readthedocs.io/en/stable/\">文档</a></p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># backup_db.py </span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">from apscheduler.schedulers.blocking import BlockingScheduler</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">file_path = &quot;/root/Workspace/ginta.top/myblog/myblog/db.sqlite3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">backup_dir = &quot;/root/data/backup_blog_db&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def backup_db(file_path, backup_dir):</span><br><span class=\"line\"></span><br><span class=\"line\">    now = datetime.datetime.now()</span><br><span class=\"line\"></span><br><span class=\"line\">    date = datetime.datetime.strftime(now, &quot;%Y-%m-%d&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    backup_dir = os.path.join(backup_dir, date)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    os.system(&quot;mkdir &#123;&#125;&quot;.format(backup_dir))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    backup_file_dir = os.path.join(backup_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">    os.system(&quot;cp &#123;&#125; &#123;&#125;&quot;.format(file_path, backup_file_dir))</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;&#123;&#125; backup_finished&quot;.format(date))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;backup_script start!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sched = BlockingScheduler()</span><br><span class=\"line\"></span><br><span class=\"line\">    sched.add_job(backup_db, &#x27;interval&#x27;, [file_path, backup_dir], seconds=60 * 60 * 24)</span><br><span class=\"line\"></span><br><span class=\"line\">    sched.start()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后执行 <code>nohup python -u backup_db.py &gt; /root/data/log/back_db/backup_db.log 2&gt;&amp;1 &amp;</code> 就放到后台了</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>实现了每天定时备份一次数据库，但是也很不优雅。</p>\n<ol>\n<li><p>在 <em>python</em> 脚本中执行 <em>mkdir</em> 和 <em>cp</em> 命令是很不好的.</p>\n</li>\n<li><p>以后脚本多了就很不好管理，问了一下公司我带的大佬推荐了两种管理方式，分别是 <strong>jenkins</strong> 和 <strong>crontab</strong>.</p>\n</li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近因为一次误操作不小心把博客的数据库文件删除了，当时感觉自然是难受的。不过幸运的是之前移动博客文件的时候曾把数据和项目打包了，所以文件又找回来了！！！</p>\n<p>虽然文件是找回来了，不过这种情况难免再次发生，而且下次就不一定能找回来了。于是决定写一个定时任务每天备份一下数据库文件。</p>\n<p>使用的第三方库是 <strong>apscheduler</strong>，简单的介绍可以看 <a href=\"http://ginta.top/detail/41/\">apscheduler</a>，更具体的请参考 <a href=\"https://apscheduler.readthedocs.io/en/stable/\">文档</a></p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># backup_db.py </span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">from apscheduler.schedulers.blocking import BlockingScheduler</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">file_path = &quot;/root/Workspace/ginta.top/myblog/myblog/db.sqlite3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">backup_dir = &quot;/root/data/backup_blog_db&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def backup_db(file_path, backup_dir):</span><br><span class=\"line\"></span><br><span class=\"line\">    now = datetime.datetime.now()</span><br><span class=\"line\"></span><br><span class=\"line\">    date = datetime.datetime.strftime(now, &quot;%Y-%m-%d&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    backup_dir = os.path.join(backup_dir, date)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    os.system(&quot;mkdir &#123;&#125;&quot;.format(backup_dir))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    backup_file_dir = os.path.join(backup_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">    os.system(&quot;cp &#123;&#125; &#123;&#125;&quot;.format(file_path, backup_file_dir))</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;&#123;&#125; backup_finished&quot;.format(date))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;backup_script start!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sched = BlockingScheduler()</span><br><span class=\"line\"></span><br><span class=\"line\">    sched.add_job(backup_db, &#x27;interval&#x27;, [file_path, backup_dir], seconds=60 * 60 * 24)</span><br><span class=\"line\"></span><br><span class=\"line\">    sched.start()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后执行 <code>nohup python -u backup_db.py &gt; /root/data/log/back_db/backup_db.log 2&gt;&amp;1 &amp;</code> 就放到后台了</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>实现了每天定时备份一次数据库，但是也很不优雅。</p>\n<ol>\n<li><p>在 <em>python</em> 脚本中执行 <em>mkdir</em> 和 <em>cp</em> 命令是很不好的.</p>\n</li>\n<li><p>以后脚本多了就很不好管理，问了一下公司我带的大佬推荐了两种管理方式，分别是 <strong>jenkins</strong> 和 <strong>crontab</strong>.</p>\n</li>\n</ol>\n"},{"title":"来到深圳","date":"2019-12-15T19:17:09.000Z","author":"Ginta","img":"http://img.ginta.top/qinshi1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/qinshi1.jpg","toc":false,"mathjax":false,"summary":null,"published":0,"_content":"很早以前，还是上大二的时候就一直想到深圳发展，后来毕业了就在成都工作。想了很久最后还是来到了深圳，虽然没有亲戚和同学，幸运的是仍有朋友在我刚到深圳的时候招待了一天，还帮我一起去租房。虽然今后怎样还是个未知数，但想想曾经帮助过我的人，还是有了奋斗的动力！！","source":"_posts/来到深圳.md","raw":"---\ntitle: 来到深圳\ndate: 2019-12-16 03:17:09\nauthor: Ginta\nimg: http://img.ginta.top/qinshi1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/qinshi1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 生活\npublished: false\n---\n很早以前，还是上大二的时候就一直想到深圳发展，后来毕业了就在成都工作。想了很久最后还是来到了深圳，虽然没有亲戚和同学，幸运的是仍有朋友在我刚到深圳的时候招待了一天，还帮我一起去租房。虽然今后怎样还是个未知数，但想想曾经帮助过我的人，还是有了奋斗的动力！！","slug":"来到深圳","updated":"2023-06-14T10:16:19.088Z","_id":"cl6p6181a004otkscaoap81am","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很早以前，还是上大二的时候就一直想到深圳发展，后来毕业了就在成都工作。想了很久最后还是来到了深圳，虽然没有亲戚和同学，幸运的是仍有朋友在我刚到深圳的时候招待了一天，还帮我一起去租房。虽然今后怎样还是个未知数，但想想曾经帮助过我的人，还是有了奋斗的动力！！</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>很早以前，还是上大二的时候就一直想到深圳发展，后来毕业了就在成都工作。想了很久最后还是来到了深圳，虽然没有亲戚和同学，幸运的是仍有朋友在我刚到深圳的时候招待了一天，还帮我一起去租房。虽然今后怎样还是个未知数，但想想曾经帮助过我的人，还是有了奋斗的动力！！</p>\n"},{"title":"树莓派4b ubuntu 20 设置阿里源","date":"2020-09-05T09:55:01.000Z","author":"Ginta","img":"http://img.ginta.top/chaoshou2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/chaoshou2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 前言\r\n设置国内源其实很简单，但是由于我是下载的 64位 操作系统，并且树莓派是arm架构，所以有一点不同\r\n执行 `lsb_release -a` 查看发行版本\r\n```\r\nubuntu@ubuntu:/etc/netplan$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 20.04.1 LTS\r\nRelease:\t20.04\r\nCodename:\tfocal\r\n```\r\n所以修改配置文件 `sudo vim /etc/apt/sources.list`:\r\n```\r\n## Note, this file is written by cloud-init on first boot of an instance\r\n## modifications made here will not survive a re-bundle.\r\n## if you wish to make changes you can:\r\n## a.) add 'apt_preserve_sources_list: true' to /etc/cloud/cloud.cfg\r\n##     or do the same in user-data\r\n## b.) add sources in /etc/apt/sources.list.d\r\n## c.) make changes to template file /etc/cloud/templates/sources.list.tmpl\r\n\r\n# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\r\n# newer versions of the distribution.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal main restricted\r\n\r\n## Major bug fix updates produced after the final release of the\r\n## distribution.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\r\n\r\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\r\n## team. Also, please note that software in universe WILL NOT receive any\r\n## review or updates from the Ubuntu security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal universe\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\r\n\r\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\r\n## team, and may not be under a free licence. Please satisfy yourself as to\r\n## your rights to use the software. Also, please note that software in\r\n## multiverse WILL NOT receive any review or updates from the Ubuntu\r\n## security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\r\n\r\n## N.B. software from this repository may not have been tested as\r\n## extensively as that contained in the main release, although it includes\r\n## newer versions of some applications which may provide useful features.\r\n## Also, please note that software in backports WILL NOT receive any review\r\n## or updates from the Ubuntu security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\r\n\r\n## Uncomment the following two lines to add software from Canonical's\r\n## 'partner' repository.\r\n## This software is not part of Ubuntu, but is offered by Canonical and the\r\n## respective vendors as a service to Ubuntu users.\r\n# deb http://archive.canonical.com/ubuntu focal partner\r\n# deb-src http://archive.canonical.com/ubuntu focal partner\r\n\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security universe\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\r\n```\r\n\r\n## 注意\r\n由于是 **arm架构，一定要改成  http://mirrors.aliyun.com/ubuntu-ports 而不是  http://mirrors.aliyun.com/ubuntu，否则无法正常更新下载！！！**。","source":"_posts/树莓派4b ubuntu 20 设置阿里源.md","raw":"---\ntitle: 树莓派4b ubuntu 20 设置阿里源\ndate: 2020-09-05 17:55:01\nauthor: Ginta\nimg: http://img.ginta.top/chaoshou2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/chaoshou2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 树莓派\n---\n## 前言\r\n设置国内源其实很简单，但是由于我是下载的 64位 操作系统，并且树莓派是arm架构，所以有一点不同\r\n执行 `lsb_release -a` 查看发行版本\r\n```\r\nubuntu@ubuntu:/etc/netplan$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 20.04.1 LTS\r\nRelease:\t20.04\r\nCodename:\tfocal\r\n```\r\n所以修改配置文件 `sudo vim /etc/apt/sources.list`:\r\n```\r\n## Note, this file is written by cloud-init on first boot of an instance\r\n## modifications made here will not survive a re-bundle.\r\n## if you wish to make changes you can:\r\n## a.) add 'apt_preserve_sources_list: true' to /etc/cloud/cloud.cfg\r\n##     or do the same in user-data\r\n## b.) add sources in /etc/apt/sources.list.d\r\n## c.) make changes to template file /etc/cloud/templates/sources.list.tmpl\r\n\r\n# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\r\n# newer versions of the distribution.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal main restricted\r\n\r\n## Major bug fix updates produced after the final release of the\r\n## distribution.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\r\n\r\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\r\n## team. Also, please note that software in universe WILL NOT receive any\r\n## review or updates from the Ubuntu security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal universe\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\r\n\r\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\r\n## team, and may not be under a free licence. Please satisfy yourself as to\r\n## your rights to use the software. Also, please note that software in\r\n## multiverse WILL NOT receive any review or updates from the Ubuntu\r\n## security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\r\n\r\n## N.B. software from this repository may not have been tested as\r\n## extensively as that contained in the main release, although it includes\r\n## newer versions of some applications which may provide useful features.\r\n## Also, please note that software in backports WILL NOT receive any review\r\n## or updates from the Ubuntu security team.\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\r\n\r\n## Uncomment the following two lines to add software from Canonical's\r\n## 'partner' repository.\r\n## This software is not part of Ubuntu, but is offered by Canonical and the\r\n## respective vendors as a service to Ubuntu users.\r\n# deb http://archive.canonical.com/ubuntu focal partner\r\n# deb-src http://archive.canonical.com/ubuntu focal partner\r\n\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security universe\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security universe\r\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\r\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\r\n```\r\n\r\n## 注意\r\n由于是 **arm架构，一定要改成  http://mirrors.aliyun.com/ubuntu-ports 而不是  http://mirrors.aliyun.com/ubuntu，否则无法正常更新下载！！！**。","slug":"树莓派4b ubuntu 20 设置阿里源","published":1,"updated":"2022-08-11T12:49:48.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181a004rtkscdvsq80vg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>设置国内源其实很简单，但是由于我是下载的 64位 操作系统，并且树莓派是arm架构，所以有一点不同<br>执行 <code>lsb_release -a</code> 查看发行版本</p>\n<pre><code>ubuntu@ubuntu:/etc/netplan$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04.1 LTS\nRelease:\t20.04\nCodename:\tfocal\n</code></pre>\n<p>所以修改配置文件 <code>sudo vim /etc/apt/sources.list</code>:</p>\n<pre><code>## Note, this file is written by cloud-init on first boot of an instance\n## modifications made here will not survive a re-bundle.\n## if you wish to make changes you can:\n## a.) add &#39;apt_preserve_sources_list: true&#39; to /etc/cloud/cloud.cfg\n##     or do the same in user-data\n## b.) add sources in /etc/apt/sources.list.d\n## c.) make changes to template file /etc/cloud/templates/sources.list.tmpl\n\n# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\n# newer versions of the distribution.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal main restricted\n\n## Major bug fix updates produced after the final release of the\n## distribution.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\n\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\n## team. Also, please note that software in universe WILL NOT receive any\n## review or updates from the Ubuntu security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal universe\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\n\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\n## team, and may not be under a free licence. Please satisfy yourself as to\n## your rights to use the software. Also, please note that software in\n## multiverse WILL NOT receive any review or updates from the Ubuntu\n## security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal multiverse\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\n\n## N.B. software from this repository may not have been tested as\n## extensively as that contained in the main release, although it includes\n## newer versions of some applications which may provide useful features.\n## Also, please note that software in backports WILL NOT receive any review\n## or updates from the Ubuntu security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\n\n## Uncomment the following two lines to add software from Canonical&#39;s\n## &#39;partner&#39; repository.\n## This software is not part of Ubuntu, but is offered by Canonical and the\n## respective vendors as a service to Ubuntu users.\n# deb http://archive.canonical.com/ubuntu focal partner\n# deb-src http://archive.canonical.com/ubuntu focal partner\n\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security universe\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\n</code></pre>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>由于是 <strong>arm架构，一定要改成  <a href=\"http://mirrors.aliyun.com/ubuntu-ports\">http://mirrors.aliyun.com/ubuntu-ports</a> 而不是  <a href=\"http://mirrors.aliyun.com/ubuntu%EF%BC%8C%E5%90%A6%E5%88%99%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%9B%B4%E6%96%B0%E4%B8%8B%E8%BD%BD%EF%BC%81%EF%BC%81%EF%BC%81\">http://mirrors.aliyun.com/ubuntu，否则无法正常更新下载！！！</a></strong>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>设置国内源其实很简单，但是由于我是下载的 64位 操作系统，并且树莓派是arm架构，所以有一点不同<br>执行 <code>lsb_release -a</code> 查看发行版本</p>\n<pre><code>ubuntu@ubuntu:/etc/netplan$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04.1 LTS\nRelease:\t20.04\nCodename:\tfocal\n</code></pre>\n<p>所以修改配置文件 <code>sudo vim /etc/apt/sources.list</code>:</p>\n<pre><code>## Note, this file is written by cloud-init on first boot of an instance\n## modifications made here will not survive a re-bundle.\n## if you wish to make changes you can:\n## a.) add &#39;apt_preserve_sources_list: true&#39; to /etc/cloud/cloud.cfg\n##     or do the same in user-data\n## b.) add sources in /etc/apt/sources.list.d\n## c.) make changes to template file /etc/cloud/templates/sources.list.tmpl\n\n# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\n# newer versions of the distribution.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal main restricted\n\n## Major bug fix updates produced after the final release of the\n## distribution.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates main restricted\n\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\n## team. Also, please note that software in universe WILL NOT receive any\n## review or updates from the Ubuntu security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal universe\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates universe\n\n## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu\n## team, and may not be under a free licence. Please satisfy yourself as to\n## your rights to use the software. Also, please note that software in\n## multiverse WILL NOT receive any review or updates from the Ubuntu\n## security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal multiverse\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-updates multiverse\n\n## N.B. software from this repository may not have been tested as\n## extensively as that contained in the main release, although it includes\n## newer versions of some applications which may provide useful features.\n## Also, please note that software in backports WILL NOT receive any review\n## or updates from the Ubuntu security team.\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-backports main restricted universe multiverse\n\n## Uncomment the following two lines to add software from Canonical&#39;s\n## &#39;partner&#39; repository.\n## This software is not part of Ubuntu, but is offered by Canonical and the\n## respective vendors as a service to Ubuntu users.\n# deb http://archive.canonical.com/ubuntu focal partner\n# deb-src http://archive.canonical.com/ubuntu focal partner\n\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security main restricted\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security universe\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security universe\ndeb http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\n# deb-src http://mirrors.aliyun.com/ubuntu-ports focal-security multiverse\n</code></pre>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>由于是 <strong>arm架构，一定要改成  <a href=\"http://mirrors.aliyun.com/ubuntu-ports\">http://mirrors.aliyun.com/ubuntu-ports</a> 而不是  <a href=\"http://mirrors.aliyun.com/ubuntu%EF%BC%8C%E5%90%A6%E5%88%99%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%9B%B4%E6%96%B0%E4%B8%8B%E8%BD%BD%EF%BC%81%EF%BC%81%EF%BC%81\">http://mirrors.aliyun.com/ubuntu，否则无法正常更新下载！！！</a></strong>。</p>\n"},{"title":"树莓派frp内网穿透","date":"2020-05-30T20:17:22.000Z","author":"Ginta","img":"http://img.ginta.top/huoying1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/huoying1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 前言\r\n目的是实现外网连接树莓派\r\n\r\n### 步骤\r\n```\r\n# 客户端（树莓派）frpc.ini \r\n[common]\r\nserver_addr = 120.79.215.235\r\nserver_port = 7000\r\n\r\n[ssh]\r\ntype = tcp\r\nlocal_ip = 127.0.0.1\r\nlocal_port = 22\r\nremote_port = 6000\r\n```\r\n然后执行 `./frps -c ./frps.ini`\r\n\r\n```\r\n# 服务端（阿里云服务器） \r\n[common]\r\n\r\n[common]\r\n# 本机公网ip 120.79.215.235\r\nbind_port = 7000\r\n```\r\n然后执行 `./frpc -c ./frpc.ini`\r\n\r\n\r\n最后通过 *xshell* 连接\r\n![](http://img.ginta.top/markdownx/2020/05/02/0d5c197a-a50b-47f1-a3e5-680e16ddc59d.png)\r\n\r\n或者命令行 `ssh -oPort=6000 pi@120.79.215.235`\r\n但是不知道为什么命令行的方式在 *xshell* 老提示密码错误。","source":"_posts/树莓派frp内网穿透.md","raw":"---\ntitle: 树莓派frp内网穿透\ndate: 2020-05-31 04:17:22\nauthor: Ginta\nimg: http://img.ginta.top/huoying1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/huoying1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 树莓派\n---\n### 前言\r\n目的是实现外网连接树莓派\r\n\r\n### 步骤\r\n```\r\n# 客户端（树莓派）frpc.ini \r\n[common]\r\nserver_addr = 120.79.215.235\r\nserver_port = 7000\r\n\r\n[ssh]\r\ntype = tcp\r\nlocal_ip = 127.0.0.1\r\nlocal_port = 22\r\nremote_port = 6000\r\n```\r\n然后执行 `./frps -c ./frps.ini`\r\n\r\n```\r\n# 服务端（阿里云服务器） \r\n[common]\r\n\r\n[common]\r\n# 本机公网ip 120.79.215.235\r\nbind_port = 7000\r\n```\r\n然后执行 `./frpc -c ./frpc.ini`\r\n\r\n\r\n最后通过 *xshell* 连接\r\n![](http://img.ginta.top/markdownx/2020/05/02/0d5c197a-a50b-47f1-a3e5-680e16ddc59d.png)\r\n\r\n或者命令行 `ssh -oPort=6000 pi@120.79.215.235`\r\n但是不知道为什么命令行的方式在 *xshell* 老提示密码错误。","slug":"树莓派frp内网穿透","published":1,"updated":"2022-08-11T12:49:48.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181b004vtksc5tv30alg","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>目的是实现外网连接树莓派</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><pre><code># 客户端（树莓派）frpc.ini \n[common]\nserver_addr = 120.79.215.235\nserver_port = 7000\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 6000\n</code></pre>\n<p>然后执行 <code>./frps -c ./frps.ini</code></p>\n<pre><code># 服务端（阿里云服务器） \n[common]\n\n[common]\n# 本机公网ip 120.79.215.235\nbind_port = 7000\n</code></pre>\n<p>然后执行 <code>./frpc -c ./frpc.ini</code></p>\n<p>最后通过 <em>xshell</em> 连接<br><img src=\"http://img.ginta.top/markdownx/2020/05/02/0d5c197a-a50b-47f1-a3e5-680e16ddc59d.png\"></p>\n<p>或者命令行 <code>ssh -oPort=6000 pi@120.79.215.235</code><br>但是不知道为什么命令行的方式在 <em>xshell</em> 老提示密码错误。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>目的是实现外网连接树莓派</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><pre><code># 客户端（树莓派）frpc.ini \n[common]\nserver_addr = 120.79.215.235\nserver_port = 7000\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 6000\n</code></pre>\n<p>然后执行 <code>./frps -c ./frps.ini</code></p>\n<pre><code># 服务端（阿里云服务器） \n[common]\n\n[common]\n# 本机公网ip 120.79.215.235\nbind_port = 7000\n</code></pre>\n<p>然后执行 <code>./frpc -c ./frpc.ini</code></p>\n<p>最后通过 <em>xshell</em> 连接<br><img src=\"http://img.ginta.top/markdownx/2020/05/02/0d5c197a-a50b-47f1-a3e5-680e16ddc59d.png\"></p>\n<p>或者命令行 <code>ssh -oPort=6000 pi@120.79.215.235</code><br>但是不知道为什么命令行的方式在 <em>xshell</em> 老提示密码错误。</p>\n"},{"title":"树莓派ubuntu 20 网络设置","date":"2020-09-05T09:49:26.000Z","author":"Ginta","img":"http://img.ginta.top/dm2.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dm2.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 前言\n\n在树莓派4B上配置一个 *ubuntu 20 LTS* 网络环境折腾了挺久的，在此记录一下以免下次再次采坑。\n\n```\n\n# 编辑 /etc/netplan/50-cloud-init.yaml 改成如下\n\nnetwork:\n\n    ethernets:\n\n        eth0:\n\n            dhcp4: true\n\n            optional: true\n\n    version: 2\n\n    wifis:\n\n        wlan0:\n\n            access-points:\n\n                \"Danke42168_1\":  # 这个是wifi名字\n\n                    password: \"wifi.danke.life\"   # 这是wifi密码\n\n            dhcp4: true\n\n            optional: true\n\n```\n\n## 最后\n\n如果没有显示器可以先修改 root文件夹下的 **network-config** 文件， **一定要在第一次开机前设置，否则无法生效**。不过由于安装包用的是国外的源，所以一般还是要接上显示器来配置国内源\n\n如果想设置固定ip可以追加配置，最终配置如下：\n\n```\n\n# This file is generated from information provided by the datasource.  Changes\n\n# to it will not persist across an instance reboot.  To disable cloud-init's\n\n# network configuration capabilities, write a file\n\n# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:\n\n# network: {config: disabled}\n\nnetwork:\n\n    ethernets:\n\n        eth0:\n\n            dhcp4: true\n\n            optional: true\n\n    version: 2\n\n    wifis:\n\n        wlan0:\n\n            access-points:\n\n                \"Danke42168_1\":\n\n                    password: \"wifi.danke.life\"\n\n            dhcp4: true\n\n            optional: true\n\n            addresses: [192.168.124.18/24]\n\n            gateway4: 192.168.124.1\n\n            nameservers:\n\n                addresses: [192.168.124.1, 8.8.8.8]\n\n```","source":"_posts/树莓派ubuntu 20 网络设置.md","raw":"---\ntitle: 树莓派ubuntu 20 网络设置\ndate: 2020-09-05 17:49:26\nauthor: Ginta\nimg: http://img.ginta.top/dm2.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dm2.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - 树莓派\ncategories: 树莓派\n---\n## 前言\n\n在树莓派4B上配置一个 *ubuntu 20 LTS* 网络环境折腾了挺久的，在此记录一下以免下次再次采坑。\n\n```\n\n# 编辑 /etc/netplan/50-cloud-init.yaml 改成如下\n\nnetwork:\n\n    ethernets:\n\n        eth0:\n\n            dhcp4: true\n\n            optional: true\n\n    version: 2\n\n    wifis:\n\n        wlan0:\n\n            access-points:\n\n                \"Danke42168_1\":  # 这个是wifi名字\n\n                    password: \"wifi.danke.life\"   # 这是wifi密码\n\n            dhcp4: true\n\n            optional: true\n\n```\n\n## 最后\n\n如果没有显示器可以先修改 root文件夹下的 **network-config** 文件， **一定要在第一次开机前设置，否则无法生效**。不过由于安装包用的是国外的源，所以一般还是要接上显示器来配置国内源\n\n如果想设置固定ip可以追加配置，最终配置如下：\n\n```\n\n# This file is generated from information provided by the datasource.  Changes\n\n# to it will not persist across an instance reboot.  To disable cloud-init's\n\n# network configuration capabilities, write a file\n\n# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:\n\n# network: {config: disabled}\n\nnetwork:\n\n    ethernets:\n\n        eth0:\n\n            dhcp4: true\n\n            optional: true\n\n    version: 2\n\n    wifis:\n\n        wlan0:\n\n            access-points:\n\n                \"Danke42168_1\":\n\n                    password: \"wifi.danke.life\"\n\n            dhcp4: true\n\n            optional: true\n\n            addresses: [192.168.124.18/24]\n\n            gateway4: 192.168.124.1\n\n            nameservers:\n\n                addresses: [192.168.124.1, 8.8.8.8]\n\n```","slug":"树莓派ubuntu 20 网络设置","published":1,"updated":"2022-08-11T12:49:48.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181b004ztkscfjr0dgic","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在树莓派4B上配置一个 <em>ubuntu 20 LTS</em> 网络环境折腾了挺久的，在此记录一下以免下次再次采坑。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 编辑 /etc/netplan/50-cloud-init.yaml 改成如下</span><br><span class=\"line\"></span><br><span class=\"line\">network:</span><br><span class=\"line\"></span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\"></span><br><span class=\"line\">        eth0:</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">    version: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    wifis:</span><br><span class=\"line\"></span><br><span class=\"line\">        wlan0:</span><br><span class=\"line\"></span><br><span class=\"line\">            access-points:</span><br><span class=\"line\"></span><br><span class=\"line\">                &quot;Danke42168_1&quot;:  # 这个是wifi名字</span><br><span class=\"line\"></span><br><span class=\"line\">                    password: &quot;wifi.danke.life&quot;   # 这是wifi密码</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>如果没有显示器可以先修改 root文件夹下的 <strong>network-config</strong> 文件， <strong>一定要在第一次开机前设置，否则无法生效</strong>。不过由于安装包用的是国外的源，所以一般还是要接上显示器来配置国内源</p>\n<p>如果想设置固定ip可以追加配置，最终配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This file is generated from information provided by the datasource.  Changes</span><br><span class=\"line\"></span><br><span class=\"line\"># to it will not persist across an instance reboot.  To disable cloud-init&#x27;s</span><br><span class=\"line\"></span><br><span class=\"line\"># network configuration capabilities, write a file</span><br><span class=\"line\"></span><br><span class=\"line\"># /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:</span><br><span class=\"line\"></span><br><span class=\"line\"># network: &#123;config: disabled&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">network:</span><br><span class=\"line\"></span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\"></span><br><span class=\"line\">        eth0:</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">    version: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    wifis:</span><br><span class=\"line\"></span><br><span class=\"line\">        wlan0:</span><br><span class=\"line\"></span><br><span class=\"line\">            access-points:</span><br><span class=\"line\"></span><br><span class=\"line\">                &quot;Danke42168_1&quot;:</span><br><span class=\"line\"></span><br><span class=\"line\">                    password: &quot;wifi.danke.life&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">            addresses: [192.168.124.18/24]</span><br><span class=\"line\"></span><br><span class=\"line\">            gateway4: 192.168.124.1</span><br><span class=\"line\"></span><br><span class=\"line\">            nameservers:</span><br><span class=\"line\"></span><br><span class=\"line\">                addresses: [192.168.124.1, 8.8.8.8]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在树莓派4B上配置一个 <em>ubuntu 20 LTS</em> 网络环境折腾了挺久的，在此记录一下以免下次再次采坑。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 编辑 /etc/netplan/50-cloud-init.yaml 改成如下</span><br><span class=\"line\"></span><br><span class=\"line\">network:</span><br><span class=\"line\"></span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\"></span><br><span class=\"line\">        eth0:</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">    version: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    wifis:</span><br><span class=\"line\"></span><br><span class=\"line\">        wlan0:</span><br><span class=\"line\"></span><br><span class=\"line\">            access-points:</span><br><span class=\"line\"></span><br><span class=\"line\">                &quot;Danke42168_1&quot;:  # 这个是wifi名字</span><br><span class=\"line\"></span><br><span class=\"line\">                    password: &quot;wifi.danke.life&quot;   # 这是wifi密码</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>如果没有显示器可以先修改 root文件夹下的 <strong>network-config</strong> 文件， <strong>一定要在第一次开机前设置，否则无法生效</strong>。不过由于安装包用的是国外的源，所以一般还是要接上显示器来配置国内源</p>\n<p>如果想设置固定ip可以追加配置，最终配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This file is generated from information provided by the datasource.  Changes</span><br><span class=\"line\"></span><br><span class=\"line\"># to it will not persist across an instance reboot.  To disable cloud-init&#x27;s</span><br><span class=\"line\"></span><br><span class=\"line\"># network configuration capabilities, write a file</span><br><span class=\"line\"></span><br><span class=\"line\"># /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:</span><br><span class=\"line\"></span><br><span class=\"line\"># network: &#123;config: disabled&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">network:</span><br><span class=\"line\"></span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\"></span><br><span class=\"line\">        eth0:</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">    version: 2</span><br><span class=\"line\"></span><br><span class=\"line\">    wifis:</span><br><span class=\"line\"></span><br><span class=\"line\">        wlan0:</span><br><span class=\"line\"></span><br><span class=\"line\">            access-points:</span><br><span class=\"line\"></span><br><span class=\"line\">                &quot;Danke42168_1&quot;:</span><br><span class=\"line\"></span><br><span class=\"line\">                    password: &quot;wifi.danke.life&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">            dhcp4: true</span><br><span class=\"line\"></span><br><span class=\"line\">            optional: true</span><br><span class=\"line\"></span><br><span class=\"line\">            addresses: [192.168.124.18/24]</span><br><span class=\"line\"></span><br><span class=\"line\">            gateway4: 192.168.124.1</span><br><span class=\"line\"></span><br><span class=\"line\">            nameservers:</span><br><span class=\"line\"></span><br><span class=\"line\">                addresses: [192.168.124.1, 8.8.8.8]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"树莓派ubuntu 20 安装k3s","date":"2021-02-11T04:25:05.000Z","author":"Ginta","img":"http://img.ginta.top/qinshi1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/qinshi1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"## 安装\n到 [helm的Github仓库](https://github.com/helm/helm/releases) 找到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n解压后把这个目录加入环境变量就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","source":"_posts/树莓派ubuntu 20 安装k3s.md","raw":"---\ntitle: 树莓派ubuntu 20 安装k3s\ndate: 2021-02-11 12:25:05\nauthor: Ginta\nimg: http://img.ginta.top/qinshi1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/qinshi1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \n  - 树莓派\ncategories: 其他\n---\n## 安装\n到 [helm的Github仓库](https://github.com/helm/helm/releases) 找到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n解压后把这个目录加入环境变量就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70)\n","slug":"树莓派ubuntu 20 安装k3s","published":1,"updated":"2022-08-11T12:49:48.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181b0053tksc62zg1cqc","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>到 <a href=\"https://github.com/helm/helm/releases\">helm的Github仓库</a> 找到<br><img src=\"https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解压后把这个目录加入环境变量就可以了<br><img src=\"https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>到 <a href=\"https://github.com/helm/helm/releases\">helm的Github仓库</a> 找到<br><img src=\"https://img-blog.csdnimg.cn/20210701225823848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210701225836183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>解压后把这个目录加入环境变量就可以了<br><img src=\"https://img-blog.csdnimg.cn/20210701230115822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDY4OTMz,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"树莓派固定ip设置","date":"2020-05-30T07:04:43.000Z","author":"Ginta","img":"http://img.ginta.top/dragin1.jpg","top":false,"hide":false,"cover":false,"coverImg":"http://img.ginta.top/dragin1.jpg","toc":false,"mathjax":false,"summary":null,"_content":"### 前言\r\n由于没有多余的屏幕以及鼠标和键盘等外设（就是有也没空间放），所以树莓派只能通过 **xshell** 连接，先前我是可以连接上的，但是由于 *ip* 发生了变化所以又要重新连上屏幕查看 *ip*，但是以后难免还会发生这样的事情。一劳永逸的方法是设置一个固定 *ip* 这样下次登录就不会发生之前的问题了。\r\n### 步骤\r\n操作也很简单\r\n树莓派中有个文件可以实现固定 *ip* 的设置，执行  `vim /etc/dhcpcd.conf`，修改配置文件\r\n```\r\n# 在最后加入下面几行\r\n# 指定接口 wlan0\r\ninterface wlan0\r\n# 指定静态IP，/24表示子网掩码为 255.255.255.0\r\nstatic ip_address=192.168.124.18/24\r\n# 路由器/网关IP地址\r\nstatic routers=192.168.124.1\r\n# 手动自定义DNS服务器\r\nstatic domain_name_servers=114.114.114.114\r\n```\r\n然后执行 `sudo reboot` 即可，之后便可以通过 *xshell* 等工具进行连接\r\n这里有两点需要注意\r\n1. 我的路由器 *ip* 是 *192.168.124.1* ，但是常见的一般是 *192.168.1.1* 和 *192.168.0.1*\r\n2. static ip_address=192.168.124.18/24，这一项要保证 **18端口没有被占用**，简单的方法就是 *ping 192.168.124.18* 如果没有响应就可以了\r\n\r\n## 其他\r\n至于树莓派怎么连接 *wifi* 参考 [无屏幕和键盘配置树莓派WiFi和SSH](https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html)。","source":"_posts/树莓派固定ip设置.md","raw":"---\ntitle: 树莓派固定ip设置\ndate: 2020-05-30 15:04:43\nauthor: Ginta\nimg: http://img.ginta.top/dragin1.jpg\ntop: false\nhide: false\ncover: false\ncoverImg: http://img.ginta.top/dragin1.jpg\ntoc: false\nmathjax: false\nsummary:\ntags: \ncategories: 树莓派\n---\n### 前言\r\n由于没有多余的屏幕以及鼠标和键盘等外设（就是有也没空间放），所以树莓派只能通过 **xshell** 连接，先前我是可以连接上的，但是由于 *ip* 发生了变化所以又要重新连上屏幕查看 *ip*，但是以后难免还会发生这样的事情。一劳永逸的方法是设置一个固定 *ip* 这样下次登录就不会发生之前的问题了。\r\n### 步骤\r\n操作也很简单\r\n树莓派中有个文件可以实现固定 *ip* 的设置，执行  `vim /etc/dhcpcd.conf`，修改配置文件\r\n```\r\n# 在最后加入下面几行\r\n# 指定接口 wlan0\r\ninterface wlan0\r\n# 指定静态IP，/24表示子网掩码为 255.255.255.0\r\nstatic ip_address=192.168.124.18/24\r\n# 路由器/网关IP地址\r\nstatic routers=192.168.124.1\r\n# 手动自定义DNS服务器\r\nstatic domain_name_servers=114.114.114.114\r\n```\r\n然后执行 `sudo reboot` 即可，之后便可以通过 *xshell* 等工具进行连接\r\n这里有两点需要注意\r\n1. 我的路由器 *ip* 是 *192.168.124.1* ，但是常见的一般是 *192.168.1.1* 和 *192.168.0.1*\r\n2. static ip_address=192.168.124.18/24，这一项要保证 **18端口没有被占用**，简单的方法就是 *ping 192.168.124.18* 如果没有响应就可以了\r\n\r\n## 其他\r\n至于树莓派怎么连接 *wifi* 参考 [无屏幕和键盘配置树莓派WiFi和SSH](https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html)。","slug":"树莓派固定ip设置","published":1,"updated":"2022-08-11T12:49:48.132Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6p6181c005btkscep0f4pez","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>由于没有多余的屏幕以及鼠标和键盘等外设（就是有也没空间放），所以树莓派只能通过 <strong>xshell</strong> 连接，先前我是可以连接上的，但是由于 <em>ip</em> 发生了变化所以又要重新连上屏幕查看 <em>ip</em>，但是以后难免还会发生这样的事情。一劳永逸的方法是设置一个固定 <em>ip</em> 这样下次登录就不会发生之前的问题了。</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><p>操作也很简单<br>树莓派中有个文件可以实现固定 <em>ip</em> 的设置，执行  <code>vim /etc/dhcpcd.conf</code>，修改配置文件</p>\n<pre><code># 在最后加入下面几行\n# 指定接口 wlan0\ninterface wlan0\n# 指定静态IP，/24表示子网掩码为 255.255.255.0\nstatic ip_address=192.168.124.18/24\n# 路由器/网关IP地址\nstatic routers=192.168.124.1\n# 手动自定义DNS服务器\nstatic domain_name_servers=114.114.114.114\n</code></pre>\n<p>然后执行 <code>sudo reboot</code> 即可，之后便可以通过 <em>xshell</em> 等工具进行连接<br>这里有两点需要注意</p>\n<ol>\n<li>我的路由器 <em>ip</em> 是 <em>192.168.124.1</em> ，但是常见的一般是 <em>192.168.1.1</em> 和 <em>192.168.0.1</em></li>\n<li>static ip_address&#x3D;192.168.124.18&#x2F;24，这一项要保证 <strong>18端口没有被占用</strong>，简单的方法就是 <em>ping 192.168.124.18</em> 如果没有响应就可以了</li>\n</ol>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>至于树莓派怎么连接 <em>wifi</em> 参考 <a href=\"https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html\">无屏幕和键盘配置树莓派WiFi和SSH</a>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>由于没有多余的屏幕以及鼠标和键盘等外设（就是有也没空间放），所以树莓派只能通过 <strong>xshell</strong> 连接，先前我是可以连接上的，但是由于 <em>ip</em> 发生了变化所以又要重新连上屏幕查看 <em>ip</em>，但是以后难免还会发生这样的事情。一劳永逸的方法是设置一个固定 <em>ip</em> 这样下次登录就不会发生之前的问题了。</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><p>操作也很简单<br>树莓派中有个文件可以实现固定 <em>ip</em> 的设置，执行  <code>vim /etc/dhcpcd.conf</code>，修改配置文件</p>\n<pre><code># 在最后加入下面几行\n# 指定接口 wlan0\ninterface wlan0\n# 指定静态IP，/24表示子网掩码为 255.255.255.0\nstatic ip_address=192.168.124.18/24\n# 路由器/网关IP地址\nstatic routers=192.168.124.1\n# 手动自定义DNS服务器\nstatic domain_name_servers=114.114.114.114\n</code></pre>\n<p>然后执行 <code>sudo reboot</code> 即可，之后便可以通过 <em>xshell</em> 等工具进行连接<br>这里有两点需要注意</p>\n<ol>\n<li>我的路由器 <em>ip</em> 是 <em>192.168.124.1</em> ，但是常见的一般是 <em>192.168.1.1</em> 和 <em>192.168.0.1</em></li>\n<li>static ip_address&#x3D;192.168.124.18&#x2F;24，这一项要保证 <strong>18端口没有被占用</strong>，简单的方法就是 <em>ping 192.168.124.18</em> 如果没有响应就可以了</li>\n</ol>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>至于树莓派怎么连接 <em>wifi</em> 参考 <a href=\"https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html\">无屏幕和键盘配置树莓派WiFi和SSH</a>。</p>\n"},{"title":"时生","date":"2022-08-23T13:32:31.000Z","_content":"《时生》看完了，区别于之前看过的东野圭吾的小说，没有涉及到凶杀，这本小说讲的是时生从未来回到过去找寻自己的父亲（拓实）。内容没有留下很深的印象，大概就是时生让父亲直面自己弃婴这一身世，原谅奶奶当初把他送人这一无奈举动，小说最后时生告别父亲后就消失了。\n\n读完后还是想了很多，比如自己像时生一样在生命快要终结的时候意外回到了十几年前，有机会重写这一段过去，又会做什么不一样的选择？时间究竟是什么，时生竭力去改变父亲，做了很多事，结局和历史依旧是重合的。是不是意味时间就是那么神奇，即使有机会回到过去，以为改变了很多，实际上什么都没有改变，过去即是未来，未来即是过去。\n\n如果历史真的可以改变，改变后的历史还是历史吗？会不会像龙珠所讲的每次穿越时间，只是凭空多出一个平行的时间线？\n","source":"_posts/时生.md","raw":"---\ntitle: 时生\ndate: 2022-08-23 21:32:31\ntags: \n  - 小说\n  - 东野圭吾\ncategories: 阅读\n---\n《时生》看完了，区别于之前看过的东野圭吾的小说，没有涉及到凶杀，这本小说讲的是时生从未来回到过去找寻自己的父亲（拓实）。内容没有留下很深的印象，大概就是时生让父亲直面自己弃婴这一身世，原谅奶奶当初把他送人这一无奈举动，小说最后时生告别父亲后就消失了。\n\n读完后还是想了很多，比如自己像时生一样在生命快要终结的时候意外回到了十几年前，有机会重写这一段过去，又会做什么不一样的选择？时间究竟是什么，时生竭力去改变父亲，做了很多事，结局和历史依旧是重合的。是不是意味时间就是那么神奇，即使有机会回到过去，以为改变了很多，实际上什么都没有改变，过去即是未来，未来即是过去。\n\n如果历史真的可以改变，改变后的历史还是历史吗？会不会像龙珠所讲的每次穿越时间，只是凭空多出一个平行的时间线？\n","slug":"时生","published":1,"updated":"2022-09-05T13:35:19.507Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7otbdkn0001qkf07tew68hj","content":"<p>《时生》看完了，区别于之前看过的东野圭吾的小说，没有涉及到凶杀，这本小说讲的是时生从未来回到过去找寻自己的父亲（拓实）。内容没有留下很深的印象，大概就是时生让父亲直面自己弃婴这一身世，原谅奶奶当初把他送人这一无奈举动，小说最后时生告别父亲后就消失了。</p>\n<p>读完后还是想了很多，比如自己像时生一样在生命快要终结的时候意外回到了十几年前，有机会重写这一段过去，又会做什么不一样的选择？时间究竟是什么，时生竭力去改变父亲，做了很多事，结局和历史依旧是重合的。是不是意味时间就是那么神奇，即使有机会回到过去，以为改变了很多，实际上什么都没有改变，过去即是未来，未来即是过去。</p>\n<p>如果历史真的可以改变，改变后的历史还是历史吗？会不会像龙珠所讲的每次穿越时间，只是凭空多出一个平行的时间线？</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>《时生》看完了，区别于之前看过的东野圭吾的小说，没有涉及到凶杀，这本小说讲的是时生从未来回到过去找寻自己的父亲（拓实）。内容没有留下很深的印象，大概就是时生让父亲直面自己弃婴这一身世，原谅奶奶当初把他送人这一无奈举动，小说最后时生告别父亲后就消失了。</p>\n<p>读完后还是想了很多，比如自己像时生一样在生命快要终结的时候意外回到了十几年前，有机会重写这一段过去，又会做什么不一样的选择？时间究竟是什么，时生竭力去改变父亲，做了很多事，结局和历史依旧是重合的。是不是意味时间就是那么神奇，即使有机会回到过去，以为改变了很多，实际上什么都没有改变，过去即是未来，未来即是过去。</p>\n<p>如果历史真的可以改变，改变后的历史还是历史吗？会不会像龙珠所讲的每次穿越时间，只是凭空多出一个平行的时间线？</p>\n"},{"title":"Fabric实践","date":"2022-11-15T02:44:48.000Z","author":"Ginta","_content":"\n## 安装\n参考[Install Fabric and Fabric Samples](https://hyperledger-fabric.readthedocs.io/en/latest/install.html)\n\n### Fabric Samples \n第一步快速起一个Fabric测试网络，官方给了一个非常方便的项目用来学习 \n\n```\n# clone fabric-samples\ngit clone git@github.com:hyperledger/fabric-samples.git \n\n# 初始化数据仓库（用来放后续的peer、ca等数据）\nmkdir ~/data/fabric-data\ncd ~/data/fabric-data\n\n# 脚本\n要启动一个fabric测试网络需要下载相关镜像，还有一些工具放到了\n[fabric-samples](https://github.com/hyperledger/fabric-samples) 这个仓库，官方给了一个一键执行的脚本\ncurl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh && chmod +x install-fabric.sh\n./install-fabric.sh -h 可以看一下有什么操作\n\n# clone fabric-samples仓库，下载相关镜像\n./install-fabric.sh docker samples\n\n## 下载Fabric二进制执行文件\n./install-fabric.sh --fabric-version 2.2.1 binary\n```\n\n### 运行网络\n```\ncd fabric-samples/test-network\n# 先干掉之前运行的容器（如果是第一次运行就不用了）\n./network.sh down\n# 启动网络\n./network.sh up\n\n# 创建一个通道，第二个参数是名字，没写的话默认是mychannel\n./network.sh createChannel\n./network.sh createChannel -c channel1\n./network.sh createChannel -c channel2\n```\n\n## 链码\n### 部署\n```\n# 把链码安装到peer0.org1.example.com和peer0.org2.example.com两个peer\n./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go\n```\n### 交互\n```\n# 如果按照上边的步骤走下来会发现fabric-samples目录下有个bin文件夹，我们把它加到环境变量\nexport PATH=${PWD}/../bin:$PATH\n\n# 设置环境变量FABRIC_CFG_PATH来指定core.yaml\nexport FABRIC_CFG_PATH=$PWD/../config/\n\n# 现在来设置环境变量方便操作Org1\n# Environment variables for Org1\n\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\n\n# 初始化账本\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"InitLedger\",\"Args\":[]}'\n\n# 查询账本资产\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"GetAllAssets\"]}'\n\n# 转移资产\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"TransferAsset\",\"Args\":[\"asset6\",\"Christopher\"]}'\n\n# 同理我们设置Org2的环境变量\n# Environment variables for Org2\n\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org2MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:9051\n\n# 使用Org2 peer来查询（注意上方的环境变量已经用Org2覆盖了之前的Org1的\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"ReadAsset\",\"asset6\"]}'\n```\n\n### 删除测试数据\n```\n这条命令会把我们的peer，order节点，volume(持久化文件)，还有CA证书，Org相关文件全部删掉\n./network.sh down\n```\n\n至此我们已经简单走了一下Fabric的搭建流程！\n\n## 部署智能合约\n### 安装，背书\n```\n# 启动测试网络\ncd fabric-samples/test-network\n./network.sh down # 先清掉历史数据\n./network.sh up createChannel\n./monitordocker.sh fabric_test # 创建一个日志收集器\n\n# 我们这里安装go版本的合约\ncd fabric-samples/asset-transfer-basic/chaincode-go\nGO111MODULE=on go mod vendor\ncd ../../test-network\nexport PATH=${PWD}/../bin:$PATH\nexport FABRIC_CFG_PATH=$PWD/../config/\n# 打包合约代码\npeer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0\n\n# 指定Org1环境变量\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\n# peer1节点安装链码\npeer lifecycle chaincode install basic.tar.gz\n# 指定Org2环境变量\nexport CORE_PEER_LOCALMSPID=\"Org2MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:9051\n# peer2节点安装链码\npeer lifecycle chaincode install basic.tar.gz\n\n# 查看链码安装\npeer lifecycle chaincode queryinstalled\n\n# 把链码id设置到环境变量\nexport CC_PACKAGE_ID=basic_1.0:69de748301770f6ef64b42aa6bb6cb291df20aa39542c3ef94008615704007f3\n\n# Org2赞同链码（由于上边我们切到了Org2的环境变量）\npeer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n\n# 切回Org1，赞同链码\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_ADDRESS=localhost:7051\n\npeer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n\n```\n\n### 使链码在channel(通道)上生效\n```\n# 先查看一下链码的背书情况（两个peer都签名了)\npeer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" --output json\n\n# commit链码到channel(通道)\npeer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\"\n\n# 查看通道上的链码\npeer lifecycle chaincode querycommitted --channelID mychannel --name basic --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n```\n\n### 调用链码\n```\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"InitLedger\",\"Args\":[]}'\n\n# 查看账本\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"GetAllAssets\"]}'\n\n```\n\n","source":"_posts/Fabric实践.md","raw":"---\ntitle: Fabric实践\ndate: 2022-11-15 10:44:48\ntags:\n    - Hyperledger\n    - Fabric\ncategories: \n    - [区块链, Fabric]\nauthor: Ginta\n---\n\n## 安装\n参考[Install Fabric and Fabric Samples](https://hyperledger-fabric.readthedocs.io/en/latest/install.html)\n\n### Fabric Samples \n第一步快速起一个Fabric测试网络，官方给了一个非常方便的项目用来学习 \n\n```\n# clone fabric-samples\ngit clone git@github.com:hyperledger/fabric-samples.git \n\n# 初始化数据仓库（用来放后续的peer、ca等数据）\nmkdir ~/data/fabric-data\ncd ~/data/fabric-data\n\n# 脚本\n要启动一个fabric测试网络需要下载相关镜像，还有一些工具放到了\n[fabric-samples](https://github.com/hyperledger/fabric-samples) 这个仓库，官方给了一个一键执行的脚本\ncurl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh && chmod +x install-fabric.sh\n./install-fabric.sh -h 可以看一下有什么操作\n\n# clone fabric-samples仓库，下载相关镜像\n./install-fabric.sh docker samples\n\n## 下载Fabric二进制执行文件\n./install-fabric.sh --fabric-version 2.2.1 binary\n```\n\n### 运行网络\n```\ncd fabric-samples/test-network\n# 先干掉之前运行的容器（如果是第一次运行就不用了）\n./network.sh down\n# 启动网络\n./network.sh up\n\n# 创建一个通道，第二个参数是名字，没写的话默认是mychannel\n./network.sh createChannel\n./network.sh createChannel -c channel1\n./network.sh createChannel -c channel2\n```\n\n## 链码\n### 部署\n```\n# 把链码安装到peer0.org1.example.com和peer0.org2.example.com两个peer\n./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go\n```\n### 交互\n```\n# 如果按照上边的步骤走下来会发现fabric-samples目录下有个bin文件夹，我们把它加到环境变量\nexport PATH=${PWD}/../bin:$PATH\n\n# 设置环境变量FABRIC_CFG_PATH来指定core.yaml\nexport FABRIC_CFG_PATH=$PWD/../config/\n\n# 现在来设置环境变量方便操作Org1\n# Environment variables for Org1\n\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\n\n# 初始化账本\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"InitLedger\",\"Args\":[]}'\n\n# 查询账本资产\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"GetAllAssets\"]}'\n\n# 转移资产\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"TransferAsset\",\"Args\":[\"asset6\",\"Christopher\"]}'\n\n# 同理我们设置Org2的环境变量\n# Environment variables for Org2\n\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org2MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:9051\n\n# 使用Org2 peer来查询（注意上方的环境变量已经用Org2覆盖了之前的Org1的\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"ReadAsset\",\"asset6\"]}'\n```\n\n### 删除测试数据\n```\n这条命令会把我们的peer，order节点，volume(持久化文件)，还有CA证书，Org相关文件全部删掉\n./network.sh down\n```\n\n至此我们已经简单走了一下Fabric的搭建流程！\n\n## 部署智能合约\n### 安装，背书\n```\n# 启动测试网络\ncd fabric-samples/test-network\n./network.sh down # 先清掉历史数据\n./network.sh up createChannel\n./monitordocker.sh fabric_test # 创建一个日志收集器\n\n# 我们这里安装go版本的合约\ncd fabric-samples/asset-transfer-basic/chaincode-go\nGO111MODULE=on go mod vendor\ncd ../../test-network\nexport PATH=${PWD}/../bin:$PATH\nexport FABRIC_CFG_PATH=$PWD/../config/\n# 打包合约代码\npeer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0\n\n# 指定Org1环境变量\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\n# peer1节点安装链码\npeer lifecycle chaincode install basic.tar.gz\n# 指定Org2环境变量\nexport CORE_PEER_LOCALMSPID=\"Org2MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:9051\n# peer2节点安装链码\npeer lifecycle chaincode install basic.tar.gz\n\n# 查看链码安装\npeer lifecycle chaincode queryinstalled\n\n# 把链码id设置到环境变量\nexport CC_PACKAGE_ID=basic_1.0:69de748301770f6ef64b42aa6bb6cb291df20aa39542c3ef94008615704007f3\n\n# Org2赞同链码（由于上边我们切到了Org2的环境变量）\npeer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n\n# 切回Org1，赞同链码\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_ADDRESS=localhost:7051\n\npeer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n\n```\n\n### 使链码在channel(通道)上生效\n```\n# 先查看一下链码的背书情况（两个peer都签名了)\npeer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" --output json\n\n# commit链码到channel(通道)\npeer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\"\n\n# 查看通道上的链码\npeer lifecycle chaincode querycommitted --channelID mychannel --name basic --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\"\n```\n\n### 调用链码\n```\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile \"${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\" --peerAddresses localhost:9051 --tlsRootCertFiles \"${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt\" -c '{\"function\":\"InitLedger\",\"Args\":[]}'\n\n# 查看账本\npeer chaincode query -C mychannel -n basic -c '{\"Args\":[\"GetAllAssets\"]}'\n\n```\n\n","slug":"Fabric实践","published":1,"updated":"2022-11-18T05:17:18.790Z","_id":"clahulh2y00002vsc6h4levli","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>参考<a href=\"https://hyperledger-fabric.readthedocs.io/en/latest/install.html\">Install Fabric and Fabric Samples</a></p>\n<h3 id=\"Fabric-Samples\"><a href=\"#Fabric-Samples\" class=\"headerlink\" title=\"Fabric Samples\"></a>Fabric Samples</h3><p>第一步快速起一个Fabric测试网络，官方给了一个非常方便的项目用来学习 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># clone fabric-samples</span><br><span class=\"line\">git clone git@github.com:hyperledger/fabric-samples.git </span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化数据仓库（用来放后续的peer、ca等数据）</span><br><span class=\"line\">mkdir ~/data/fabric-data</span><br><span class=\"line\">cd ~/data/fabric-data</span><br><span class=\"line\"></span><br><span class=\"line\"># 脚本</span><br><span class=\"line\">要启动一个fabric测试网络需要下载相关镜像，还有一些工具放到了</span><br><span class=\"line\">[fabric-samples](https://github.com/hyperledger/fabric-samples) 这个仓库，官方给了一个一键执行的脚本</span><br><span class=\"line\">curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh &amp;&amp; chmod +x install-fabric.sh</span><br><span class=\"line\">./install-fabric.sh -h 可以看一下有什么操作</span><br><span class=\"line\"></span><br><span class=\"line\"># clone fabric-samples仓库，下载相关镜像</span><br><span class=\"line\">./install-fabric.sh docker samples</span><br><span class=\"line\"></span><br><span class=\"line\">## 下载Fabric二进制执行文件</span><br><span class=\"line\">./install-fabric.sh --fabric-version 2.2.1 binary</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行网络\"><a href=\"#运行网络\" class=\"headerlink\" title=\"运行网络\"></a>运行网络</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd fabric-samples/test-network</span><br><span class=\"line\"># 先干掉之前运行的容器（如果是第一次运行就不用了）</span><br><span class=\"line\">./network.sh down</span><br><span class=\"line\"># 启动网络</span><br><span class=\"line\">./network.sh up</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个通道，第二个参数是名字，没写的话默认是mychannel</span><br><span class=\"line\">./network.sh createChannel</span><br><span class=\"line\">./network.sh createChannel -c channel1</span><br><span class=\"line\">./network.sh createChannel -c channel2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链码\"><a href=\"#链码\" class=\"headerlink\" title=\"链码\"></a>链码</h2><h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 把链码安装到peer0.org1.example.com和peer0.org2.example.com两个peer</span><br><span class=\"line\">./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go</span><br></pre></td></tr></table></figure>\n<h3 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 如果按照上边的步骤走下来会发现fabric-samples目录下有个bin文件夹，我们把它加到环境变量</span><br><span class=\"line\">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置环境变量FABRIC_CFG_PATH来指定core.yaml</span><br><span class=\"line\">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class=\"line\"></span><br><span class=\"line\"># 现在来设置环境变量方便操作Org1</span><br><span class=\"line\"># Environment variables for Org1</span><br><span class=\"line\"></span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化账本</span><br><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查询账本资产</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 转移资产</span><br><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;TransferAsset&quot;,&quot;Args&quot;:[&quot;asset6&quot;,&quot;Christopher&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 同理我们设置Org2的环境变量</span><br><span class=\"line\"># Environment variables for Org2</span><br><span class=\"line\"></span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用Org2 peer来查询（注意上方的环境变量已经用Org2覆盖了之前的Org1的</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;ReadAsset&quot;,&quot;asset6&quot;]&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除测试数据\"><a href=\"#删除测试数据\" class=\"headerlink\" title=\"删除测试数据\"></a>删除测试数据</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这条命令会把我们的peer，order节点，volume(持久化文件)，还有CA证书，Org相关文件全部删掉</span><br><span class=\"line\">./network.sh down</span><br></pre></td></tr></table></figure>\n\n<p>至此我们已经简单走了一下Fabric的搭建流程！</p>\n<h2 id=\"部署智能合约\"><a href=\"#部署智能合约\" class=\"headerlink\" title=\"部署智能合约\"></a>部署智能合约</h2><h3 id=\"安装，背书\"><a href=\"#安装，背书\" class=\"headerlink\" title=\"安装，背书\"></a>安装，背书</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动测试网络</span><br><span class=\"line\">cd fabric-samples/test-network</span><br><span class=\"line\">./network.sh down # 先清掉历史数据</span><br><span class=\"line\">./network.sh up createChannel</span><br><span class=\"line\">./monitordocker.sh fabric_test # 创建一个日志收集器</span><br><span class=\"line\"></span><br><span class=\"line\"># 我们这里安装go版本的合约</span><br><span class=\"line\">cd fabric-samples/asset-transfer-basic/chaincode-go</span><br><span class=\"line\">GO111MODULE=on go mod vendor</span><br><span class=\"line\">cd ../../test-network</span><br><span class=\"line\">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class=\"line\">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class=\"line\"># 打包合约代码</span><br><span class=\"line\">peer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定Org1环境变量</span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"># peer1节点安装链码</span><br><span class=\"line\">peer lifecycle chaincode install basic.tar.gz</span><br><span class=\"line\"># 指定Org2环境变量</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class=\"line\"># peer2节点安装链码</span><br><span class=\"line\">peer lifecycle chaincode install basic.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看链码安装</span><br><span class=\"line\">peer lifecycle chaincode queryinstalled</span><br><span class=\"line\"></span><br><span class=\"line\"># 把链码id设置到环境变量</span><br><span class=\"line\">export CC_PACKAGE_ID=basic_1.0:69de748301770f6ef64b42aa6bb6cb291df20aa39542c3ef94008615704007f3</span><br><span class=\"line\"></span><br><span class=\"line\"># Org2赞同链码（由于上边我们切到了Org2的环境变量）</span><br><span class=\"line\">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 切回Org1，赞同链码</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"></span><br><span class=\"line\">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使链码在channel-通道-上生效\"><a href=\"#使链码在channel-通道-上生效\" class=\"headerlink\" title=\"使链码在channel(通道)上生效\"></a>使链码在channel(通道)上生效</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先查看一下链码的背书情况（两个peer都签名了)</span><br><span class=\"line\">peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --output json</span><br><span class=\"line\"></span><br><span class=\"line\"># commit链码到channel(通道)</span><br><span class=\"line\">peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看通道上的链码</span><br><span class=\"line\">peer lifecycle chaincode querycommitted --channelID mychannel --name basic --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"调用链码\"><a href=\"#调用链码\" class=\"headerlink\" title=\"调用链码\"></a>调用链码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看账本</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>参考<a href=\"https://hyperledger-fabric.readthedocs.io/en/latest/install.html\">Install Fabric and Fabric Samples</a></p>\n<h3 id=\"Fabric-Samples\"><a href=\"#Fabric-Samples\" class=\"headerlink\" title=\"Fabric Samples\"></a>Fabric Samples</h3><p>第一步快速起一个Fabric测试网络，官方给了一个非常方便的项目用来学习 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># clone fabric-samples</span><br><span class=\"line\">git clone git@github.com:hyperledger/fabric-samples.git </span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化数据仓库（用来放后续的peer、ca等数据）</span><br><span class=\"line\">mkdir ~/data/fabric-data</span><br><span class=\"line\">cd ~/data/fabric-data</span><br><span class=\"line\"></span><br><span class=\"line\"># 脚本</span><br><span class=\"line\">要启动一个fabric测试网络需要下载相关镜像，还有一些工具放到了</span><br><span class=\"line\">[fabric-samples](https://github.com/hyperledger/fabric-samples) 这个仓库，官方给了一个一键执行的脚本</span><br><span class=\"line\">curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh &amp;&amp; chmod +x install-fabric.sh</span><br><span class=\"line\">./install-fabric.sh -h 可以看一下有什么操作</span><br><span class=\"line\"></span><br><span class=\"line\"># clone fabric-samples仓库，下载相关镜像</span><br><span class=\"line\">./install-fabric.sh docker samples</span><br><span class=\"line\"></span><br><span class=\"line\">## 下载Fabric二进制执行文件</span><br><span class=\"line\">./install-fabric.sh --fabric-version 2.2.1 binary</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行网络\"><a href=\"#运行网络\" class=\"headerlink\" title=\"运行网络\"></a>运行网络</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd fabric-samples/test-network</span><br><span class=\"line\"># 先干掉之前运行的容器（如果是第一次运行就不用了）</span><br><span class=\"line\">./network.sh down</span><br><span class=\"line\"># 启动网络</span><br><span class=\"line\">./network.sh up</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个通道，第二个参数是名字，没写的话默认是mychannel</span><br><span class=\"line\">./network.sh createChannel</span><br><span class=\"line\">./network.sh createChannel -c channel1</span><br><span class=\"line\">./network.sh createChannel -c channel2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链码\"><a href=\"#链码\" class=\"headerlink\" title=\"链码\"></a>链码</h2><h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 把链码安装到peer0.org1.example.com和peer0.org2.example.com两个peer</span><br><span class=\"line\">./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go</span><br></pre></td></tr></table></figure>\n<h3 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 如果按照上边的步骤走下来会发现fabric-samples目录下有个bin文件夹，我们把它加到环境变量</span><br><span class=\"line\">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置环境变量FABRIC_CFG_PATH来指定core.yaml</span><br><span class=\"line\">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class=\"line\"></span><br><span class=\"line\"># 现在来设置环境变量方便操作Org1</span><br><span class=\"line\"># Environment variables for Org1</span><br><span class=\"line\"></span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化账本</span><br><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查询账本资产</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 转移资产</span><br><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;TransferAsset&quot;,&quot;Args&quot;:[&quot;asset6&quot;,&quot;Christopher&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 同理我们设置Org2的环境变量</span><br><span class=\"line\"># Environment variables for Org2</span><br><span class=\"line\"></span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用Org2 peer来查询（注意上方的环境变量已经用Org2覆盖了之前的Org1的</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;ReadAsset&quot;,&quot;asset6&quot;]&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除测试数据\"><a href=\"#删除测试数据\" class=\"headerlink\" title=\"删除测试数据\"></a>删除测试数据</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这条命令会把我们的peer，order节点，volume(持久化文件)，还有CA证书，Org相关文件全部删掉</span><br><span class=\"line\">./network.sh down</span><br></pre></td></tr></table></figure>\n\n<p>至此我们已经简单走了一下Fabric的搭建流程！</p>\n<h2 id=\"部署智能合约\"><a href=\"#部署智能合约\" class=\"headerlink\" title=\"部署智能合约\"></a>部署智能合约</h2><h3 id=\"安装，背书\"><a href=\"#安装，背书\" class=\"headerlink\" title=\"安装，背书\"></a>安装，背书</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动测试网络</span><br><span class=\"line\">cd fabric-samples/test-network</span><br><span class=\"line\">./network.sh down # 先清掉历史数据</span><br><span class=\"line\">./network.sh up createChannel</span><br><span class=\"line\">./monitordocker.sh fabric_test # 创建一个日志收集器</span><br><span class=\"line\"></span><br><span class=\"line\"># 我们这里安装go版本的合约</span><br><span class=\"line\">cd fabric-samples/asset-transfer-basic/chaincode-go</span><br><span class=\"line\">GO111MODULE=on go mod vendor</span><br><span class=\"line\">cd ../../test-network</span><br><span class=\"line\">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class=\"line\">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class=\"line\"># 打包合约代码</span><br><span class=\"line\">peer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定Org1环境变量</span><br><span class=\"line\">export CORE_PEER_TLS_ENABLED=true</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"># peer1节点安装链码</span><br><span class=\"line\">peer lifecycle chaincode install basic.tar.gz</span><br><span class=\"line\"># 指定Org2环境变量</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class=\"line\"># peer2节点安装链码</span><br><span class=\"line\">peer lifecycle chaincode install basic.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看链码安装</span><br><span class=\"line\">peer lifecycle chaincode queryinstalled</span><br><span class=\"line\"></span><br><span class=\"line\"># 把链码id设置到环境变量</span><br><span class=\"line\">export CC_PACKAGE_ID=basic_1.0:69de748301770f6ef64b42aa6bb6cb291df20aa39542c3ef94008615704007f3</span><br><span class=\"line\"></span><br><span class=\"line\"># Org2赞同链码（由于上边我们切到了Org2的环境变量）</span><br><span class=\"line\">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 切回Org1，赞同链码</span><br><span class=\"line\">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class=\"line\">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class=\"line\">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class=\"line\">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class=\"line\"></span><br><span class=\"line\">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使链码在channel-通道-上生效\"><a href=\"#使链码在channel-通道-上生效\" class=\"headerlink\" title=\"使链码在channel(通道)上生效\"></a>使链码在channel(通道)上生效</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先查看一下链码的背书情况（两个peer都签名了)</span><br><span class=\"line\">peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --output json</span><br><span class=\"line\"></span><br><span class=\"line\"># commit链码到channel(通道)</span><br><span class=\"line\">peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看通道上的链码</span><br><span class=\"line\">peer lifecycle chaincode querycommitted --channelID mychannel --name basic --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"调用链码\"><a href=\"#调用链码\" class=\"headerlink\" title=\"调用链码\"></a>调用链码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &#x27;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看账本</span><br><span class=\"line\">peer chaincode query -C mychannel -n basic -c &#x27;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"一起聊聊团队协同","date":"2022-11-22T15:08:57.000Z","_content":"有段时间没跑步了，[running Page](https://running.ginta.top/) 上的记录还停留在上个月的11号。今天心血来潮想把荒废40多天的跑步再拯救一下。\n\n开始跑的时候是听纯音乐的，中间突然想到 [yihong](https://twitter.com/yihong0618) 大佬会跑步的时候听一些播客，就打开小宇宙听了最近的一期 **科技双眼啤** ，主题是 一起聊聊团队协同(ft.陈皓 - MegaEase 创始人)，跑完播客大约还有一个小时左右才结束，就绕着小区一直走，期间看到有个人在不起眼的角落里练萧，想上去聊两句又怕打扰他，想等他练完再去搭讪的，可惜又绕了两圈之后他已经回家了，不过同住一个小区之后大概率还是可以遇到的，因为不止一次听他练习了。\n\n### slack和飞书最大的不同回顾\n飞书是先把人拉完了再建群，slack倾向于建立一个channel，再去拉人。\n更普遍的现象是群为了临时的某件事情而生成，当事情完成以后更多的是水一些无关话题，\n而很多群里的成员是一样的。\n而Channel的话题性更强，更加聚焦于一个话题在接下来也能保持一直有意义下去，而不是\n一闪即逝。\n\n### 组织文化驱动了产品功能\n良好的协作工具应该是为了促进团队的工作效率而被推广的，国内的IM产品诸如飞书、企业微信的一些功能体现了企业于工作者之间的隔阂，比如撤回功能，很多产品是可以看到谁在什么时候撤回了一句话，并且撤回是有时效的，比如过了两天的信息就无法撤回了。另外一些产品是无痕撤回，并且可以直接编辑原文。\n两种产品体现了使用者之间的信任问题，前者表现出互相不信任，聊天记录在未来被用于追溯当时说过什么，呈堂证供，而不是纯粹地作为记录供查阅。\n\n### 开会的目的\n会议应当是高效共识某个议题(Proposal)，而回忆主持者应当在文档中把方案准备详尽，会议简短而高效。Google的会议时长为30分钟左右，前10分钟大家看资料（议题），有问题直接提问。只有一个话题而不给方案的会议很多时间都浪费在讨论上了，这是十分低效的。\n\n### 分享\n同 **组织文化驱动了产品功能**，是组织文化最终选择了产品，也是组织文化最终缔造了产品。一个原本内向不善表达的人融入了一个乐于分享的团队，他的性格会在潜移默化之间收到影响，而更有可能变成一个分享者，长期处于一个极度内耗的团队不利于个人发展，引用无间道里的“环境改变个人，个人是很难改变环境的“；Google的周五是不工作的，大家会share自己的工作成果，以及自己觉得满意的作品。\n\n### 好的协同工具\n异步协作是个比较理想的状态，部分团队会使用email进行交流。\nGitHub可以多人同时编写同一份代码，PR，Review流程使得协同效率非常高，并且可以看到每个人都做了什么，过程是如何的。\nFigma可以实时看到设计者的操作。\n\n### 知识摄取类似于地图\n知识获取并非是顺序的，选择自己感兴趣的一点然后去扩展它。","source":"_posts/一起聊聊团队协同.md","raw":"---\ntitle: 一起聊聊团队协同\ndate: 2022-11-22 23:08:57\ntags: 科技双眼啤\ncategories: 博客\n---\n有段时间没跑步了，[running Page](https://running.ginta.top/) 上的记录还停留在上个月的11号。今天心血来潮想把荒废40多天的跑步再拯救一下。\n\n开始跑的时候是听纯音乐的，中间突然想到 [yihong](https://twitter.com/yihong0618) 大佬会跑步的时候听一些播客，就打开小宇宙听了最近的一期 **科技双眼啤** ，主题是 一起聊聊团队协同(ft.陈皓 - MegaEase 创始人)，跑完播客大约还有一个小时左右才结束，就绕着小区一直走，期间看到有个人在不起眼的角落里练萧，想上去聊两句又怕打扰他，想等他练完再去搭讪的，可惜又绕了两圈之后他已经回家了，不过同住一个小区之后大概率还是可以遇到的，因为不止一次听他练习了。\n\n### slack和飞书最大的不同回顾\n飞书是先把人拉完了再建群，slack倾向于建立一个channel，再去拉人。\n更普遍的现象是群为了临时的某件事情而生成，当事情完成以后更多的是水一些无关话题，\n而很多群里的成员是一样的。\n而Channel的话题性更强，更加聚焦于一个话题在接下来也能保持一直有意义下去，而不是\n一闪即逝。\n\n### 组织文化驱动了产品功能\n良好的协作工具应该是为了促进团队的工作效率而被推广的，国内的IM产品诸如飞书、企业微信的一些功能体现了企业于工作者之间的隔阂，比如撤回功能，很多产品是可以看到谁在什么时候撤回了一句话，并且撤回是有时效的，比如过了两天的信息就无法撤回了。另外一些产品是无痕撤回，并且可以直接编辑原文。\n两种产品体现了使用者之间的信任问题，前者表现出互相不信任，聊天记录在未来被用于追溯当时说过什么，呈堂证供，而不是纯粹地作为记录供查阅。\n\n### 开会的目的\n会议应当是高效共识某个议题(Proposal)，而回忆主持者应当在文档中把方案准备详尽，会议简短而高效。Google的会议时长为30分钟左右，前10分钟大家看资料（议题），有问题直接提问。只有一个话题而不给方案的会议很多时间都浪费在讨论上了，这是十分低效的。\n\n### 分享\n同 **组织文化驱动了产品功能**，是组织文化最终选择了产品，也是组织文化最终缔造了产品。一个原本内向不善表达的人融入了一个乐于分享的团队，他的性格会在潜移默化之间收到影响，而更有可能变成一个分享者，长期处于一个极度内耗的团队不利于个人发展，引用无间道里的“环境改变个人，个人是很难改变环境的“；Google的周五是不工作的，大家会share自己的工作成果，以及自己觉得满意的作品。\n\n### 好的协同工具\n异步协作是个比较理想的状态，部分团队会使用email进行交流。\nGitHub可以多人同时编写同一份代码，PR，Review流程使得协同效率非常高，并且可以看到每个人都做了什么，过程是如何的。\nFigma可以实时看到设计者的操作。\n\n### 知识摄取类似于地图\n知识获取并非是顺序的，选择自己感兴趣的一点然后去扩展它。","slug":"一起聊聊团队协同","published":1,"updated":"2022-11-23T07:44:58.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbu6cb5i00014lsccxmx7hs1","content":"<p>有段时间没跑步了，<a href=\"https://running.ginta.top/\">running Page</a> 上的记录还停留在上个月的11号。今天心血来潮想把荒废40多天的跑步再拯救一下。</p>\n<p>开始跑的时候是听纯音乐的，中间突然想到 <a href=\"https://twitter.com/yihong0618\">yihong</a> 大佬会跑步的时候听一些播客，就打开小宇宙听了最近的一期 <strong>科技双眼啤</strong> ，主题是 一起聊聊团队协同(ft.陈皓 - MegaEase 创始人)，跑完播客大约还有一个小时左右才结束，就绕着小区一直走，期间看到有个人在不起眼的角落里练萧，想上去聊两句又怕打扰他，想等他练完再去搭讪的，可惜又绕了两圈之后他已经回家了，不过同住一个小区之后大概率还是可以遇到的，因为不止一次听他练习了。</p>\n<h3 id=\"slack和飞书最大的不同回顾\"><a href=\"#slack和飞书最大的不同回顾\" class=\"headerlink\" title=\"slack和飞书最大的不同回顾\"></a>slack和飞书最大的不同回顾</h3><p>飞书是先把人拉完了再建群，slack倾向于建立一个channel，再去拉人。<br>更普遍的现象是群为了临时的某件事情而生成，当事情完成以后更多的是水一些无关话题，<br>而很多群里的成员是一样的。<br>而Channel的话题性更强，更加聚焦于一个话题在接下来也能保持一直有意义下去，而不是<br>一闪即逝。</p>\n<h3 id=\"组织文化驱动了产品功能\"><a href=\"#组织文化驱动了产品功能\" class=\"headerlink\" title=\"组织文化驱动了产品功能\"></a>组织文化驱动了产品功能</h3><p>良好的协作工具应该是为了促进团队的工作效率而被推广的，国内的IM产品诸如飞书、企业微信的一些功能体现了企业于工作者之间的隔阂，比如撤回功能，很多产品是可以看到谁在什么时候撤回了一句话，并且撤回是有时效的，比如过了两天的信息就无法撤回了。另外一些产品是无痕撤回，并且可以直接编辑原文。<br>两种产品体现了使用者之间的信任问题，前者表现出互相不信任，聊天记录在未来被用于追溯当时说过什么，呈堂证供，而不是纯粹地作为记录供查阅。</p>\n<h3 id=\"开会的目的\"><a href=\"#开会的目的\" class=\"headerlink\" title=\"开会的目的\"></a>开会的目的</h3><p>会议应当是高效共识某个议题(Proposal)，而回忆主持者应当在文档中把方案准备详尽，会议简短而高效。Google的会议时长为30分钟左右，前10分钟大家看资料（议题），有问题直接提问。只有一个话题而不给方案的会议很多时间都浪费在讨论上了，这是十分低效的。</p>\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>同 <strong>组织文化驱动了产品功能</strong>，是组织文化最终选择了产品，也是组织文化最终缔造了产品。一个原本内向不善表达的人融入了一个乐于分享的团队，他的性格会在潜移默化之间收到影响，而更有可能变成一个分享者，长期处于一个极度内耗的团队不利于个人发展，引用无间道里的“环境改变个人，个人是很难改变环境的“；Google的周五是不工作的，大家会share自己的工作成果，以及自己觉得满意的作品。</p>\n<h3 id=\"好的协同工具\"><a href=\"#好的协同工具\" class=\"headerlink\" title=\"好的协同工具\"></a>好的协同工具</h3><p>异步协作是个比较理想的状态，部分团队会使用email进行交流。<br>GitHub可以多人同时编写同一份代码，PR，Review流程使得协同效率非常高，并且可以看到每个人都做了什么，过程是如何的。<br>Figma可以实时看到设计者的操作。</p>\n<h3 id=\"知识摄取类似于地图\"><a href=\"#知识摄取类似于地图\" class=\"headerlink\" title=\"知识摄取类似于地图\"></a>知识摄取类似于地图</h3><p>知识获取并非是顺序的，选择自己感兴趣的一点然后去扩展它。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>有段时间没跑步了，<a href=\"https://running.ginta.top/\">running Page</a> 上的记录还停留在上个月的11号。今天心血来潮想把荒废40多天的跑步再拯救一下。</p>\n<p>开始跑的时候是听纯音乐的，中间突然想到 <a href=\"https://twitter.com/yihong0618\">yihong</a> 大佬会跑步的时候听一些播客，就打开小宇宙听了最近的一期 <strong>科技双眼啤</strong> ，主题是 一起聊聊团队协同(ft.陈皓 - MegaEase 创始人)，跑完播客大约还有一个小时左右才结束，就绕着小区一直走，期间看到有个人在不起眼的角落里练萧，想上去聊两句又怕打扰他，想等他练完再去搭讪的，可惜又绕了两圈之后他已经回家了，不过同住一个小区之后大概率还是可以遇到的，因为不止一次听他练习了。</p>\n<h3 id=\"slack和飞书最大的不同回顾\"><a href=\"#slack和飞书最大的不同回顾\" class=\"headerlink\" title=\"slack和飞书最大的不同回顾\"></a>slack和飞书最大的不同回顾</h3><p>飞书是先把人拉完了再建群，slack倾向于建立一个channel，再去拉人。<br>更普遍的现象是群为了临时的某件事情而生成，当事情完成以后更多的是水一些无关话题，<br>而很多群里的成员是一样的。<br>而Channel的话题性更强，更加聚焦于一个话题在接下来也能保持一直有意义下去，而不是<br>一闪即逝。</p>\n<h3 id=\"组织文化驱动了产品功能\"><a href=\"#组织文化驱动了产品功能\" class=\"headerlink\" title=\"组织文化驱动了产品功能\"></a>组织文化驱动了产品功能</h3><p>良好的协作工具应该是为了促进团队的工作效率而被推广的，国内的IM产品诸如飞书、企业微信的一些功能体现了企业于工作者之间的隔阂，比如撤回功能，很多产品是可以看到谁在什么时候撤回了一句话，并且撤回是有时效的，比如过了两天的信息就无法撤回了。另外一些产品是无痕撤回，并且可以直接编辑原文。<br>两种产品体现了使用者之间的信任问题，前者表现出互相不信任，聊天记录在未来被用于追溯当时说过什么，呈堂证供，而不是纯粹地作为记录供查阅。</p>\n<h3 id=\"开会的目的\"><a href=\"#开会的目的\" class=\"headerlink\" title=\"开会的目的\"></a>开会的目的</h3><p>会议应当是高效共识某个议题(Proposal)，而回忆主持者应当在文档中把方案准备详尽，会议简短而高效。Google的会议时长为30分钟左右，前10分钟大家看资料（议题），有问题直接提问。只有一个话题而不给方案的会议很多时间都浪费在讨论上了，这是十分低效的。</p>\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>同 <strong>组织文化驱动了产品功能</strong>，是组织文化最终选择了产品，也是组织文化最终缔造了产品。一个原本内向不善表达的人融入了一个乐于分享的团队，他的性格会在潜移默化之间收到影响，而更有可能变成一个分享者，长期处于一个极度内耗的团队不利于个人发展，引用无间道里的“环境改变个人，个人是很难改变环境的“；Google的周五是不工作的，大家会share自己的工作成果，以及自己觉得满意的作品。</p>\n<h3 id=\"好的协同工具\"><a href=\"#好的协同工具\" class=\"headerlink\" title=\"好的协同工具\"></a>好的协同工具</h3><p>异步协作是个比较理想的状态，部分团队会使用email进行交流。<br>GitHub可以多人同时编写同一份代码，PR，Review流程使得协同效率非常高，并且可以看到每个人都做了什么，过程是如何的。<br>Figma可以实时看到设计者的操作。</p>\n<h3 id=\"知识摄取类似于地图\"><a href=\"#知识摄取类似于地图\" class=\"headerlink\" title=\"知识摄取类似于地图\"></a>知识摄取类似于地图</h3><p>知识获取并非是顺序的，选择自己感兴趣的一点然后去扩展它。</p>\n"},{"title":"个人工具","date":"2022-11-23T02:55:00.000Z","topping":"true - [工具, 软件]","_content":"记录一些常用工具\n\n### 媒体\n- 音乐：网易云\n- 影视：爱奇艺、优酷、腾讯视频\n- 播客：小宇宙\n- RSS：Inoreader\n\n### 学习\n- 英语：Ted英语演讲\n- 教程：Youbube\n\n### 资源\n- 音乐下载：[melody](https://github.com/foamzou/melody)\n\n### 记录\n- 读书，观影：Notion\n- 跑步： [running_page](https://github.com/yihong0618/running_page)\n\n### 科学上网\n- Shadowrocket\n- Clash\n\n### 开源\n- 协作：飞书（开源社）\n- 仓库：[kaiyuanshe](https://github.com/kaiyuanshe)\n\n### 运动记录\n- 跑步：keep\n- 爬山：两步路户外助手\n\n### 乐器\n- 楚门 Creeper S 爬山虎 全影纹相思木TF型缺角\n\n### 硬件\n- 移动设备：macbook Air,airpods pro2,iphone 14pro,华为手环7\n- 台式：5600X, GTX1060 6G, 32G memory\n\n","source":"_posts/个人工具.md","raw":"---\ntitle: 个人工具\ndate: 2022-11-23 10:55:00\ntopping: true\n    - [工具, 软件]\n---\n记录一些常用工具\n\n### 媒体\n- 音乐：网易云\n- 影视：爱奇艺、优酷、腾讯视频\n- 播客：小宇宙\n- RSS：Inoreader\n\n### 学习\n- 英语：Ted英语演讲\n- 教程：Youbube\n\n### 资源\n- 音乐下载：[melody](https://github.com/foamzou/melody)\n\n### 记录\n- 读书，观影：Notion\n- 跑步： [running_page](https://github.com/yihong0618/running_page)\n\n### 科学上网\n- Shadowrocket\n- Clash\n\n### 开源\n- 协作：飞书（开源社）\n- 仓库：[kaiyuanshe](https://github.com/kaiyuanshe)\n\n### 运动记录\n- 跑步：keep\n- 爬山：两步路户外助手\n\n### 乐器\n- 楚门 Creeper S 爬山虎 全影纹相思木TF型缺角\n\n### 硬件\n- 移动设备：macbook Air,airpods pro2,iphone 14pro,华为手环7\n- 台式：5600X, GTX1060 6G, 32G memory\n\n","slug":"个人工具","published":1,"updated":"2023-06-14T10:19:30.230Z","_id":"clbu6cb5k00034lsc1ptk34c4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记录一些常用工具</p>\n<h3 id=\"媒体\"><a href=\"#媒体\" class=\"headerlink\" title=\"媒体\"></a>媒体</h3><ul>\n<li>音乐：网易云</li>\n<li>影视：爱奇艺、优酷、腾讯视频</li>\n<li>播客：小宇宙</li>\n<li>RSS：Inoreader</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><ul>\n<li>英语：Ted英语演讲</li>\n<li>教程：Youbube</li>\n</ul>\n<h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><ul>\n<li>音乐下载：<a href=\"https://github.com/foamzou/melody\">melody</a></li>\n</ul>\n<h3 id=\"记录\"><a href=\"#记录\" class=\"headerlink\" title=\"记录\"></a>记录</h3><ul>\n<li>读书，观影：Notion</li>\n<li>跑步： <a href=\"https://github.com/yihong0618/running_page\">running_page</a></li>\n</ul>\n<h3 id=\"科学上网\"><a href=\"#科学上网\" class=\"headerlink\" title=\"科学上网\"></a>科学上网</h3><ul>\n<li>Shadowrocket</li>\n<li>Clash</li>\n</ul>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><ul>\n<li>协作：飞书（开源社）</li>\n<li>仓库：<a href=\"https://github.com/kaiyuanshe\">kaiyuanshe</a></li>\n</ul>\n<h3 id=\"运动记录\"><a href=\"#运动记录\" class=\"headerlink\" title=\"运动记录\"></a>运动记录</h3><ul>\n<li>跑步：keep</li>\n<li>爬山：两步路户外助手</li>\n</ul>\n<h3 id=\"乐器\"><a href=\"#乐器\" class=\"headerlink\" title=\"乐器\"></a>乐器</h3><ul>\n<li>楚门 Creeper S 爬山虎 全影纹相思木TF型缺角</li>\n</ul>\n<h3 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h3><ul>\n<li>移动设备：macbook Air,airpods pro2,iphone 14pro,华为手环7</li>\n<li>台式：5600X, GTX1060 6G, 32G memory</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>记录一些常用工具</p>\n<h3 id=\"媒体\"><a href=\"#媒体\" class=\"headerlink\" title=\"媒体\"></a>媒体</h3><ul>\n<li>音乐：网易云</li>\n<li>影视：爱奇艺、优酷、腾讯视频</li>\n<li>播客：小宇宙</li>\n<li>RSS：Inoreader</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><ul>\n<li>英语：Ted英语演讲</li>\n<li>教程：Youbube</li>\n</ul>\n<h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><ul>\n<li>音乐下载：<a href=\"https://github.com/foamzou/melody\">melody</a></li>\n</ul>\n<h3 id=\"记录\"><a href=\"#记录\" class=\"headerlink\" title=\"记录\"></a>记录</h3><ul>\n<li>读书，观影：Notion</li>\n<li>跑步： <a href=\"https://github.com/yihong0618/running_page\">running_page</a></li>\n</ul>\n<h3 id=\"科学上网\"><a href=\"#科学上网\" class=\"headerlink\" title=\"科学上网\"></a>科学上网</h3><ul>\n<li>Shadowrocket</li>\n<li>Clash</li>\n</ul>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><ul>\n<li>协作：飞书（开源社）</li>\n<li>仓库：<a href=\"https://github.com/kaiyuanshe\">kaiyuanshe</a></li>\n</ul>\n<h3 id=\"运动记录\"><a href=\"#运动记录\" class=\"headerlink\" title=\"运动记录\"></a>运动记录</h3><ul>\n<li>跑步：keep</li>\n<li>爬山：两步路户外助手</li>\n</ul>\n<h3 id=\"乐器\"><a href=\"#乐器\" class=\"headerlink\" title=\"乐器\"></a>乐器</h3><ul>\n<li>楚门 Creeper S 爬山虎 全影纹相思木TF型缺角</li>\n</ul>\n<h3 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h3><ul>\n<li>移动设备：macbook Air,airpods pro2,iphone 14pro,华为手环7</li>\n<li>台式：5600X, GTX1060 6G, 32G memory</li>\n</ul>\n"},{"title":"2022年总结","date":"2023-01-03T00:41:19.000Z","_content":"元旦和室友去惠州玩了两天，爬山有点过头了到上班这一天腿还是很酸，请假再家多休息一天，也抽出时间把年终总结搞定。\n\n在写这篇之前回顾了去年的年终总结，顺便看了看其他博主的年终总结。\n\n即使想用天花乱坠的描述去点缀这一年的经历，想来想去还是找不出可以炫耀的支点。期望的年终总结应该是充满奇异，实际上2022年什么大事也没发生，或许可以罪恶地把一切都推给疫情，亦或是承认这一年的平淡无奇。\n\n相比2021年也还是有一点可以罗列的。阅读量的提升最为显著，2021年完整的读书（除去杂质）只有3本，2022年读了23本，其中《大秦帝国》系列算是最为推崇的，文字表达非常大气，乱世中的大国纷争，小国苟且生存，名士纵横捭阖，小人唯利是图，在整个阅读的过程中有种灵魂经过洗礼的感觉，时常能感觉到自己的狭隘，或者说是局限更为恰当。截止到目前读了一半有余，另外一半不出意外是在2023年可以读完的。\n2022 年读书：\n![2022年阅读记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112115914.png)\n运动方面在Q4段段续续开始跑步了，大概最后一个季度有跑了150KM左右，不是很耀眼的数字，比起2021年同期依然是好很多。\n![2022年跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112120029.png)\n\n遗憾也是有的，计划是2022年深度参与开源社区，虽然相比2021年已是参与更深了，不过个人期望的深度是一个活跃项目的reviewer当然最好是committer。吉他也只是前半年有少许的练习，后半年就可以忽略不计了，说实话很欣赏那些可以沉浸在演奏里的人，可以借助音乐去平复躁动的内心。\n\n2022年的变化还是有的，只是和自己理想的还是有一些距离，一如往年，2023年也还是定一下目标吧（虽然不知道能完成多少）\n\n技术：\n- leetcode每周5道\n- 保持每天的开源项目源码阅读，作出文字的输出\n\n运动：\n- 每个月80KM（一周5天每天4KM，太高容易坚持不下来）\n- 每个月爬1次山，完成广东剩下的几座高山挑战\n\n读书：\n- 重构精读\n- 程序员修炼之道精读\n- 大秦帝国刷完\n\n社交：\n结识一些比较古怪的人\n\n音乐：\n吉他达到即兴表演的程度\n\n开源社区：\n- 成为一个活跃项目的reviewer\n\n语言：\n尝试和English native 的土著交流\n\nManjusaka的总结里的一句话很是认同，也希望未来的自己少一些躁动，多一些热情，保持足够简单的生活：\n\n>>>Stay Simple, Stay Naive.\n","source":"_posts/2022年总结.md","raw":"---\ntitle: 2022年总结\ndate: 2023-01-03 08:41:19\ntags:\n    - 年终总结\n---\n元旦和室友去惠州玩了两天，爬山有点过头了到上班这一天腿还是很酸，请假再家多休息一天，也抽出时间把年终总结搞定。\n\n在写这篇之前回顾了去年的年终总结，顺便看了看其他博主的年终总结。\n\n即使想用天花乱坠的描述去点缀这一年的经历，想来想去还是找不出可以炫耀的支点。期望的年终总结应该是充满奇异，实际上2022年什么大事也没发生，或许可以罪恶地把一切都推给疫情，亦或是承认这一年的平淡无奇。\n\n相比2021年也还是有一点可以罗列的。阅读量的提升最为显著，2021年完整的读书（除去杂质）只有3本，2022年读了23本，其中《大秦帝国》系列算是最为推崇的，文字表达非常大气，乱世中的大国纷争，小国苟且生存，名士纵横捭阖，小人唯利是图，在整个阅读的过程中有种灵魂经过洗礼的感觉，时常能感觉到自己的狭隘，或者说是局限更为恰当。截止到目前读了一半有余，另外一半不出意外是在2023年可以读完的。\n2022 年读书：\n![2022年阅读记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112115914.png)\n运动方面在Q4段段续续开始跑步了，大概最后一个季度有跑了150KM左右，不是很耀眼的数字，比起2021年同期依然是好很多。\n![2022年跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112120029.png)\n\n遗憾也是有的，计划是2022年深度参与开源社区，虽然相比2021年已是参与更深了，不过个人期望的深度是一个活跃项目的reviewer当然最好是committer。吉他也只是前半年有少许的练习，后半年就可以忽略不计了，说实话很欣赏那些可以沉浸在演奏里的人，可以借助音乐去平复躁动的内心。\n\n2022年的变化还是有的，只是和自己理想的还是有一些距离，一如往年，2023年也还是定一下目标吧（虽然不知道能完成多少）\n\n技术：\n- leetcode每周5道\n- 保持每天的开源项目源码阅读，作出文字的输出\n\n运动：\n- 每个月80KM（一周5天每天4KM，太高容易坚持不下来）\n- 每个月爬1次山，完成广东剩下的几座高山挑战\n\n读书：\n- 重构精读\n- 程序员修炼之道精读\n- 大秦帝国刷完\n\n社交：\n结识一些比较古怪的人\n\n音乐：\n吉他达到即兴表演的程度\n\n开源社区：\n- 成为一个活跃项目的reviewer\n\n语言：\n尝试和English native 的土著交流\n\nManjusaka的总结里的一句话很是认同，也希望未来的自己少一些躁动，多一些热情，保持足够简单的生活：\n\n>>>Stay Simple, Stay Naive.\n","slug":"2022年总结","published":1,"updated":"2023-01-12T04:01:03.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcsknk3d0001dmscatv3039y","content":"<p>元旦和室友去惠州玩了两天，爬山有点过头了到上班这一天腿还是很酸，请假再家多休息一天，也抽出时间把年终总结搞定。</p>\n<p>在写这篇之前回顾了去年的年终总结，顺便看了看其他博主的年终总结。</p>\n<p>即使想用天花乱坠的描述去点缀这一年的经历，想来想去还是找不出可以炫耀的支点。期望的年终总结应该是充满奇异，实际上2022年什么大事也没发生，或许可以罪恶地把一切都推给疫情，亦或是承认这一年的平淡无奇。</p>\n<p>相比2021年也还是有一点可以罗列的。阅读量的提升最为显著，2021年完整的读书（除去杂质）只有3本，2022年读了23本，其中《大秦帝国》系列算是最为推崇的，文字表达非常大气，乱世中的大国纷争，小国苟且生存，名士纵横捭阖，小人唯利是图，在整个阅读的过程中有种灵魂经过洗礼的感觉，时常能感觉到自己的狭隘，或者说是局限更为恰当。截止到目前读了一半有余，另外一半不出意外是在2023年可以读完的。<br>2022 年读书：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112115914.png\" alt=\"2022年阅读记录\"><br>运动方面在Q4段段续续开始跑步了，大概最后一个季度有跑了150KM左右，不是很耀眼的数字，比起2021年同期依然是好很多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112120029.png\" alt=\"2022年跑步记录\"></p>\n<p>遗憾也是有的，计划是2022年深度参与开源社区，虽然相比2021年已是参与更深了，不过个人期望的深度是一个活跃项目的reviewer当然最好是committer。吉他也只是前半年有少许的练习，后半年就可以忽略不计了，说实话很欣赏那些可以沉浸在演奏里的人，可以借助音乐去平复躁动的内心。</p>\n<p>2022年的变化还是有的，只是和自己理想的还是有一些距离，一如往年，2023年也还是定一下目标吧（虽然不知道能完成多少）</p>\n<p>技术：</p>\n<ul>\n<li>leetcode每周5道</li>\n<li>保持每天的开源项目源码阅读，作出文字的输出</li>\n</ul>\n<p>运动：</p>\n<ul>\n<li>每个月80KM（一周5天每天4KM，太高容易坚持不下来）</li>\n<li>每个月爬1次山，完成广东剩下的几座高山挑战</li>\n</ul>\n<p>读书：</p>\n<ul>\n<li>重构精读</li>\n<li>程序员修炼之道精读</li>\n<li>大秦帝国刷完</li>\n</ul>\n<p>社交：<br>结识一些比较古怪的人</p>\n<p>音乐：<br>吉他达到即兴表演的程度</p>\n<p>开源社区：</p>\n<ul>\n<li>成为一个活跃项目的reviewer</li>\n</ul>\n<p>语言：<br>尝试和English native 的土著交流</p>\n<p>Manjusaka的总结里的一句话很是认同，也希望未来的自己少一些躁动，多一些热情，保持足够简单的生活：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Stay Simple, Stay Naive.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>元旦和室友去惠州玩了两天，爬山有点过头了到上班这一天腿还是很酸，请假再家多休息一天，也抽出时间把年终总结搞定。</p>\n<p>在写这篇之前回顾了去年的年终总结，顺便看了看其他博主的年终总结。</p>\n<p>即使想用天花乱坠的描述去点缀这一年的经历，想来想去还是找不出可以炫耀的支点。期望的年终总结应该是充满奇异，实际上2022年什么大事也没发生，或许可以罪恶地把一切都推给疫情，亦或是承认这一年的平淡无奇。</p>\n<p>相比2021年也还是有一点可以罗列的。阅读量的提升最为显著，2021年完整的读书（除去杂质）只有3本，2022年读了23本，其中《大秦帝国》系列算是最为推崇的，文字表达非常大气，乱世中的大国纷争，小国苟且生存，名士纵横捭阖，小人唯利是图，在整个阅读的过程中有种灵魂经过洗礼的感觉，时常能感觉到自己的狭隘，或者说是局限更为恰当。截止到目前读了一半有余，另外一半不出意外是在2023年可以读完的。<br>2022 年读书：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112115914.png\" alt=\"2022年阅读记录\"><br>运动方面在Q4段段续续开始跑步了，大概最后一个季度有跑了150KM左右，不是很耀眼的数字，比起2021年同期依然是好很多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230112120029.png\" alt=\"2022年跑步记录\"></p>\n<p>遗憾也是有的，计划是2022年深度参与开源社区，虽然相比2021年已是参与更深了，不过个人期望的深度是一个活跃项目的reviewer当然最好是committer。吉他也只是前半年有少许的练习，后半年就可以忽略不计了，说实话很欣赏那些可以沉浸在演奏里的人，可以借助音乐去平复躁动的内心。</p>\n<p>2022年的变化还是有的，只是和自己理想的还是有一些距离，一如往年，2023年也还是定一下目标吧（虽然不知道能完成多少）</p>\n<p>技术：</p>\n<ul>\n<li>leetcode每周5道</li>\n<li>保持每天的开源项目源码阅读，作出文字的输出</li>\n</ul>\n<p>运动：</p>\n<ul>\n<li>每个月80KM（一周5天每天4KM，太高容易坚持不下来）</li>\n<li>每个月爬1次山，完成广东剩下的几座高山挑战</li>\n</ul>\n<p>读书：</p>\n<ul>\n<li>重构精读</li>\n<li>程序员修炼之道精读</li>\n<li>大秦帝国刷完</li>\n</ul>\n<p>社交：<br>结识一些比较古怪的人</p>\n<p>音乐：<br>吉他达到即兴表演的程度</p>\n<p>开源社区：</p>\n<ul>\n<li>成为一个活跃项目的reviewer</li>\n</ul>\n<p>语言：<br>尝试和English native 的土著交流</p>\n<p>Manjusaka的总结里的一句话很是认同，也希望未来的自己少一些躁动，多一些热情，保持足够简单的生活：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Stay Simple, Stay Naive.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"title":"gRPC","date":"2023-01-26T10:17:48.000Z","_content":"\n### 引言\n随着应用的日益复杂，单一服务已经不能很好地承载日益庞大的用户请求，当唯一一个服务由于各种原因不能正常运行（数据库满载，机房故障）导致系统整体挂掉显然是不能接受的。解决上述问题思路就是风险均摊，比如机房故障我们可以把服务部署在多个地区，然后把服务从大的服务拆分成若干个小的服务，这样当一个服务出现问题的时候也可以保证其他服务正常运行，至少不是所有服务全部炸掉，比如直播的时候弹幕服务不可用，但是用户依然可以正常观看直播，只是不能和主播实时互动而已。\n以上粗略描述了微服务的基本思想和要解决的痛点。\n\n### gRPC？\n要了解 *grpc* 首先我们要说说 *rpc*，**Remote procedure call**，远程过程调用。\n通常我们在本地调用一个方法的时候是用类似这样的方式：\n```\nfunc SayHello(name string) {\n    return \"hello\" + name\n}\n\nfunc main() {\n    res := SayHello(\"Ginta\")\n}\n```\n那如果我们想调用的函数是远程的一台机器，并且也想使用 *SayHello(argument)* 这种方式直接调用，就需要约定好怎么传参，返回参数是什么，以及怎么去连接。这种约定就是所谓的协议。*rpc* 主要包含通信协议和序列化协议：\n通信协议：如http，tcp\n序列化协议：如protobuf,json\n\n我们常用的说的 *restful* 就是使用的 *json* 去实现的序列化，这种序列化方式的优势是直观可读，但是压缩率低，传输就会很慢。\n\nprotobuf是一款用C++开发的跨语言、跨平台、二进制编码的数据序列化协议，以超高的压缩率著称，极大地提高了传输效率。缺点就是需要专门的库去解析。\n\ngRPC的官网主页只有一句简单的说明：”A high performance, open source universal RPC framework“。一个开源的高性能RPC框架。使用 *HTTP2* 为传输协议，*HTTP1* 中也可以多个请求利用一个连接，但是服务端返回的时候是根据pipeline中发送的顺序返回的，如果有一个阻塞了其他都不能返回，*HTTP2* 很好地解决了这一点。*gRPC* 使用 *protobuf* 来序列化数据。\n\n### protocol buffers\n\n### go的grpc实现\n#### proto声明\n```\nsyntax = \"proto3\";\n\npackage grpc;\n\noption go_package = \"grpc/pb;proto\";\n\n\nservice HelloService {\n  rpc SayHello (SayHelloRequest) returns (SayHelloResponse);\n}\n\nmessage SayHelloRequest {\n  string Name = 1;\n}\n\nmessage SayHelloResponse {\n  string Message = 1;\n}\n```\n#### server\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"net\"\n\n\t\"google.golang.org/grpc\"\n\tpb \"grpc-study/pb\"\n)\n\ntype Server struct {\n\tpb.UnimplementedHelloServiceServer\n}\n\nfunc (s *Server) SayHello(ctx context.Context, request *pb.SayHelloRequest) (*pb.SayHelloResponse, error) {\n\treturn &pb.SayHelloResponse{\n\t\tMessage: fmt.Sprintf(\"hello %s\", request.Name),\n\t}, nil\n}\n\nfunc main() {\n\t// open a port\n\tlisten, _ := net.Listen(\"tcp\", \":9090\")\n\n\t// create a grpc server\n\tserver := grpc.NewServer()\n\n\t// register service\n\tpb.RegisterHelloServiceServer(server, &Server{})\n\n\tserver.Serve(listen)\n}\n```\n#### client\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n\n\tpb \"grpc-study/pb\"\n)\n\nfunc main() {\n\tconn, err := grpc.Dial(\"localhost:9090\", grpc.WithTransportCredentials(insecure.NewCredentials()))\n\tif err != nil {\n\t\treturn\n\t}\n\tdefer conn.Close()\n\n\t// start a client\n\tclient := pb.NewHelloServiceClient(conn)\n\tresponse, err := client.SayHello(context.Background(), &pb.SayHelloRequest{Name: \"Ginta\"})\n\tif err != nil {\n\t\treturn\n\t}\n\tfmt.Println(response.GetMessage())\n}\n```\n\n### grpcurl\n**grpcurl** 工具可以查询 *grpc* 服务的 *API*, 用来调试 *grpc* 服务很方便\n安装：`go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest`。\n要使用 *grpcurl* 我们要在代码里先启动 *reflection* 反射服务\n```\npackage main\nimport (\n\t...\n\t\"\"google.golang.org/grpc/reflection\"\"\n)\n\nfunc main() {\n\t...\n\tserver := grpc.NewServer()\n\n\t// register service\n\tpb.RegisterHelloServiceServer(server, &Server{})\n\n\t// register reflection\n\treflection.Register(server)\n\t....\n}\n```\n然后就可以使用 *grpcurl* 来调试了，先看看服务有哪些接口, `grpcurl  localhost:9000 list`，报了一个异常 **Failed to dial target host \"localhost:9000\": tls: first record does not look like a TLS handshake**，*grpc* 是用的 *http2* 协议, 虽然不强求但是一般传输也都是要加密的，这里提示我们少了 *TLS* 加密，我们可以先使用明文。`grpcurl -plaintext localhost:9000 list`。\n可以看到已经返回了我们服务的列表：\n```\ngrpc.HelloService\ngrpc.reflection.v1alpha.ServerReflection\n```\n,第二个是我们开启的反射服务，可以用 *grpcurl -plaintext localhost:9000 list grpc.HelloService* 命令看看 *grpc.HelloService* 服务有哪些方法名，或者用`grpcurl -plaintext localhost:9000 describe grpc.HelloService`会返回更多的信息，包括方法的出入请求。\n```\ngrpc.HelloService is a service:\nservice HelloService {\n  rpc SayHello ( .grpc.SayHelloRequest ) returns ( .grpc.SayHelloResponse );\n}\n```\n我们来请求一下这个 **SayHello** 方法，`grpcurl -plaintext -d '{\"Name\": \"Ginta\"}' localhost:9000 grpc.HelloService/SayHello`:\n```\n{\n  \"Message\": \"hello Ginta\"\n}\n```\n\n\n\n\n### 补充\n#### grpc通信加密\n#### 服务发现","source":"_posts/grpc.md","raw":"---\ntitle: gRPC\ndate: 2023-01-26 18:17:48\ntags:\n    - gRPC\n    - go\ncategories: 协议\n---\n\n### 引言\n随着应用的日益复杂，单一服务已经不能很好地承载日益庞大的用户请求，当唯一一个服务由于各种原因不能正常运行（数据库满载，机房故障）导致系统整体挂掉显然是不能接受的。解决上述问题思路就是风险均摊，比如机房故障我们可以把服务部署在多个地区，然后把服务从大的服务拆分成若干个小的服务，这样当一个服务出现问题的时候也可以保证其他服务正常运行，至少不是所有服务全部炸掉，比如直播的时候弹幕服务不可用，但是用户依然可以正常观看直播，只是不能和主播实时互动而已。\n以上粗略描述了微服务的基本思想和要解决的痛点。\n\n### gRPC？\n要了解 *grpc* 首先我们要说说 *rpc*，**Remote procedure call**，远程过程调用。\n通常我们在本地调用一个方法的时候是用类似这样的方式：\n```\nfunc SayHello(name string) {\n    return \"hello\" + name\n}\n\nfunc main() {\n    res := SayHello(\"Ginta\")\n}\n```\n那如果我们想调用的函数是远程的一台机器，并且也想使用 *SayHello(argument)* 这种方式直接调用，就需要约定好怎么传参，返回参数是什么，以及怎么去连接。这种约定就是所谓的协议。*rpc* 主要包含通信协议和序列化协议：\n通信协议：如http，tcp\n序列化协议：如protobuf,json\n\n我们常用的说的 *restful* 就是使用的 *json* 去实现的序列化，这种序列化方式的优势是直观可读，但是压缩率低，传输就会很慢。\n\nprotobuf是一款用C++开发的跨语言、跨平台、二进制编码的数据序列化协议，以超高的压缩率著称，极大地提高了传输效率。缺点就是需要专门的库去解析。\n\ngRPC的官网主页只有一句简单的说明：”A high performance, open source universal RPC framework“。一个开源的高性能RPC框架。使用 *HTTP2* 为传输协议，*HTTP1* 中也可以多个请求利用一个连接，但是服务端返回的时候是根据pipeline中发送的顺序返回的，如果有一个阻塞了其他都不能返回，*HTTP2* 很好地解决了这一点。*gRPC* 使用 *protobuf* 来序列化数据。\n\n### protocol buffers\n\n### go的grpc实现\n#### proto声明\n```\nsyntax = \"proto3\";\n\npackage grpc;\n\noption go_package = \"grpc/pb;proto\";\n\n\nservice HelloService {\n  rpc SayHello (SayHelloRequest) returns (SayHelloResponse);\n}\n\nmessage SayHelloRequest {\n  string Name = 1;\n}\n\nmessage SayHelloResponse {\n  string Message = 1;\n}\n```\n#### server\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"net\"\n\n\t\"google.golang.org/grpc\"\n\tpb \"grpc-study/pb\"\n)\n\ntype Server struct {\n\tpb.UnimplementedHelloServiceServer\n}\n\nfunc (s *Server) SayHello(ctx context.Context, request *pb.SayHelloRequest) (*pb.SayHelloResponse, error) {\n\treturn &pb.SayHelloResponse{\n\t\tMessage: fmt.Sprintf(\"hello %s\", request.Name),\n\t}, nil\n}\n\nfunc main() {\n\t// open a port\n\tlisten, _ := net.Listen(\"tcp\", \":9090\")\n\n\t// create a grpc server\n\tserver := grpc.NewServer()\n\n\t// register service\n\tpb.RegisterHelloServiceServer(server, &Server{})\n\n\tserver.Serve(listen)\n}\n```\n#### client\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n\n\tpb \"grpc-study/pb\"\n)\n\nfunc main() {\n\tconn, err := grpc.Dial(\"localhost:9090\", grpc.WithTransportCredentials(insecure.NewCredentials()))\n\tif err != nil {\n\t\treturn\n\t}\n\tdefer conn.Close()\n\n\t// start a client\n\tclient := pb.NewHelloServiceClient(conn)\n\tresponse, err := client.SayHello(context.Background(), &pb.SayHelloRequest{Name: \"Ginta\"})\n\tif err != nil {\n\t\treturn\n\t}\n\tfmt.Println(response.GetMessage())\n}\n```\n\n### grpcurl\n**grpcurl** 工具可以查询 *grpc* 服务的 *API*, 用来调试 *grpc* 服务很方便\n安装：`go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest`。\n要使用 *grpcurl* 我们要在代码里先启动 *reflection* 反射服务\n```\npackage main\nimport (\n\t...\n\t\"\"google.golang.org/grpc/reflection\"\"\n)\n\nfunc main() {\n\t...\n\tserver := grpc.NewServer()\n\n\t// register service\n\tpb.RegisterHelloServiceServer(server, &Server{})\n\n\t// register reflection\n\treflection.Register(server)\n\t....\n}\n```\n然后就可以使用 *grpcurl* 来调试了，先看看服务有哪些接口, `grpcurl  localhost:9000 list`，报了一个异常 **Failed to dial target host \"localhost:9000\": tls: first record does not look like a TLS handshake**，*grpc* 是用的 *http2* 协议, 虽然不强求但是一般传输也都是要加密的，这里提示我们少了 *TLS* 加密，我们可以先使用明文。`grpcurl -plaintext localhost:9000 list`。\n可以看到已经返回了我们服务的列表：\n```\ngrpc.HelloService\ngrpc.reflection.v1alpha.ServerReflection\n```\n,第二个是我们开启的反射服务，可以用 *grpcurl -plaintext localhost:9000 list grpc.HelloService* 命令看看 *grpc.HelloService* 服务有哪些方法名，或者用`grpcurl -plaintext localhost:9000 describe grpc.HelloService`会返回更多的信息，包括方法的出入请求。\n```\ngrpc.HelloService is a service:\nservice HelloService {\n  rpc SayHello ( .grpc.SayHelloRequest ) returns ( .grpc.SayHelloResponse );\n}\n```\n我们来请求一下这个 **SayHello** 方法，`grpcurl -plaintext -d '{\"Name\": \"Ginta\"}' localhost:9000 grpc.HelloService/SayHello`:\n```\n{\n  \"Message\": \"hello Ginta\"\n}\n```\n\n\n\n\n### 补充\n#### grpc通信加密\n#### 服务发现","slug":"grpc","published":1,"updated":"2023-01-31T15:49:57.148Z","_id":"cldket1k3000095sc6jtg7hxu","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>随着应用的日益复杂，单一服务已经不能很好地承载日益庞大的用户请求，当唯一一个服务由于各种原因不能正常运行（数据库满载，机房故障）导致系统整体挂掉显然是不能接受的。解决上述问题思路就是风险均摊，比如机房故障我们可以把服务部署在多个地区，然后把服务从大的服务拆分成若干个小的服务，这样当一个服务出现问题的时候也可以保证其他服务正常运行，至少不是所有服务全部炸掉，比如直播的时候弹幕服务不可用，但是用户依然可以正常观看直播，只是不能和主播实时互动而已。<br>以上粗略描述了微服务的基本思想和要解决的痛点。</p>\n<h3 id=\"gRPC？\"><a href=\"#gRPC？\" class=\"headerlink\" title=\"gRPC？\"></a>gRPC？</h3><p>要了解 <em>grpc</em> 首先我们要说说 <em>rpc</em>，<strong>Remote procedure call</strong>，远程过程调用。<br>通常我们在本地调用一个方法的时候是用类似这样的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func SayHello(name string) &#123;</span><br><span class=\"line\">    return &quot;hello&quot; + name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">    res := SayHello(&quot;Ginta&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那如果我们想调用的函数是远程的一台机器，并且也想使用 <em>SayHello(argument)</em> 这种方式直接调用，就需要约定好怎么传参，返回参数是什么，以及怎么去连接。这种约定就是所谓的协议。<em>rpc</em> 主要包含通信协议和序列化协议：<br>通信协议：如http，tcp<br>序列化协议：如protobuf,json</p>\n<p>我们常用的说的 <em>restful</em> 就是使用的 <em>json</em> 去实现的序列化，这种序列化方式的优势是直观可读，但是压缩率低，传输就会很慢。</p>\n<p>protobuf是一款用C++开发的跨语言、跨平台、二进制编码的数据序列化协议，以超高的压缩率著称，极大地提高了传输效率。缺点就是需要专门的库去解析。</p>\n<p>gRPC的官网主页只有一句简单的说明：”A high performance, open source universal RPC framework“。一个开源的高性能RPC框架。使用 <em>HTTP2</em> 为传输协议，<em>HTTP1</em> 中也可以多个请求利用一个连接，但是服务端返回的时候是根据pipeline中发送的顺序返回的，如果有一个阻塞了其他都不能返回，<em>HTTP2</em> 很好地解决了这一点。<em>gRPC</em> 使用 <em>protobuf</em> 来序列化数据。</p>\n<h3 id=\"protocol-buffers\"><a href=\"#protocol-buffers\" class=\"headerlink\" title=\"protocol buffers\"></a>protocol buffers</h3><h3 id=\"go的grpc实现\"><a href=\"#go的grpc实现\" class=\"headerlink\" title=\"go的grpc实现\"></a>go的grpc实现</h3><h4 id=\"proto声明\"><a href=\"#proto声明\" class=\"headerlink\" title=\"proto声明\"></a>proto声明</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax = &quot;proto3&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">package grpc;</span><br><span class=\"line\"></span><br><span class=\"line\">option go_package = &quot;grpc/pb;proto&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">service HelloService &#123;</span><br><span class=\"line\">  rpc SayHello (SayHelloRequest) returns (SayHelloResponse);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">message SayHelloRequest &#123;</span><br><span class=\"line\">  string Name = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">message SayHelloResponse &#123;</span><br><span class=\"line\">  string Message = 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;context&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;net&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;google.golang.org/grpc&quot;</span><br><span class=\"line\">\tpb &quot;grpc-study/pb&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">type Server struct &#123;</span><br><span class=\"line\">\tpb.UnimplementedHelloServiceServer</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (s *Server) SayHello(ctx context.Context, request *pb.SayHelloRequest) (*pb.SayHelloResponse, error) &#123;</span><br><span class=\"line\">\treturn &amp;pb.SayHelloResponse&#123;</span><br><span class=\"line\">\t\tMessage: fmt.Sprintf(&quot;hello %s&quot;, request.Name),</span><br><span class=\"line\">\t&#125;, nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\t// open a port</span><br><span class=\"line\">\tlisten, _ := net.Listen(&quot;tcp&quot;, &quot;:9090&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// create a grpc server</span><br><span class=\"line\">\tserver := grpc.NewServer()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register service</span><br><span class=\"line\">\tpb.RegisterHelloServiceServer(server, &amp;Server&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tserver.Serve(listen)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;context&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;google.golang.org/grpc&quot;</span><br><span class=\"line\">\t&quot;google.golang.org/grpc/credentials/insecure&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpb &quot;grpc-study/pb&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tconn, err := grpc.Dial(&quot;localhost:9090&quot;, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdefer conn.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// start a client</span><br><span class=\"line\">\tclient := pb.NewHelloServiceClient(conn)</span><br><span class=\"line\">\tresponse, err := client.SayHello(context.Background(), &amp;pb.SayHelloRequest&#123;Name: &quot;Ginta&quot;&#125;)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(response.GetMessage())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"grpcurl\"><a href=\"#grpcurl\" class=\"headerlink\" title=\"grpcurl\"></a>grpcurl</h3><p><strong>grpcurl</strong> 工具可以查询 <em>grpc</em> 服务的 <em>API</em>, 用来调试 <em>grpc</em> 服务很方便<br>安装：<code>go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest</code>。<br>要使用 <em>grpcurl</em> 我们要在代码里先启动 <em>reflection</em> 反射服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&quot;&quot;google.golang.org/grpc/reflection&quot;&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\tserver := grpc.NewServer()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register service</span><br><span class=\"line\">\tpb.RegisterHelloServiceServer(server, &amp;Server&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register reflection</span><br><span class=\"line\">\treflection.Register(server)</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就可以使用 <em>grpcurl</em> 来调试了，先看看服务有哪些接口, <code>grpcurl  localhost:9000 list</code>，报了一个异常 <strong>Failed to dial target host “localhost:9000”: tls: first record does not look like a TLS handshake</strong>，<em>grpc</em> 是用的 <em>http2</em> 协议, 虽然不强求但是一般传输也都是要加密的，这里提示我们少了 <em>TLS</em> 加密，我们可以先使用明文。<code>grpcurl -plaintext localhost:9000 list</code>。<br>可以看到已经返回了我们服务的列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grpc.HelloService</span><br><span class=\"line\">grpc.reflection.v1alpha.ServerReflection</span><br></pre></td></tr></table></figure>\n<p>,第二个是我们开启的反射服务，可以用 <em>grpcurl -plaintext localhost:9000 list grpc.HelloService</em> 命令看看 <em>grpc.HelloService</em> 服务有哪些方法名，或者用<code>grpcurl -plaintext localhost:9000 describe grpc.HelloService</code>会返回更多的信息，包括方法的出入请求。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grpc.HelloService is a service:</span><br><span class=\"line\">service HelloService &#123;</span><br><span class=\"line\">  rpc SayHello ( .grpc.SayHelloRequest ) returns ( .grpc.SayHelloResponse );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们来请求一下这个 <strong>SayHello</strong> 方法，<code>grpcurl -plaintext -d &#39;&#123;&quot;Name&quot;: &quot;Ginta&quot;&#125;&#39; localhost:9000 grpc.HelloService/SayHello</code>:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;Message&quot;: &quot;hello Ginta&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><h4 id=\"grpc通信加密\"><a href=\"#grpc通信加密\" class=\"headerlink\" title=\"grpc通信加密\"></a>grpc通信加密</h4><h4 id=\"服务发现\"><a href=\"#服务发现\" class=\"headerlink\" title=\"服务发现\"></a>服务发现</h4>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>随着应用的日益复杂，单一服务已经不能很好地承载日益庞大的用户请求，当唯一一个服务由于各种原因不能正常运行（数据库满载，机房故障）导致系统整体挂掉显然是不能接受的。解决上述问题思路就是风险均摊，比如机房故障我们可以把服务部署在多个地区，然后把服务从大的服务拆分成若干个小的服务，这样当一个服务出现问题的时候也可以保证其他服务正常运行，至少不是所有服务全部炸掉，比如直播的时候弹幕服务不可用，但是用户依然可以正常观看直播，只是不能和主播实时互动而已。<br>以上粗略描述了微服务的基本思想和要解决的痛点。</p>\n<h3 id=\"gRPC？\"><a href=\"#gRPC？\" class=\"headerlink\" title=\"gRPC？\"></a>gRPC？</h3><p>要了解 <em>grpc</em> 首先我们要说说 <em>rpc</em>，<strong>Remote procedure call</strong>，远程过程调用。<br>通常我们在本地调用一个方法的时候是用类似这样的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func SayHello(name string) &#123;</span><br><span class=\"line\">    return &quot;hello&quot; + name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">    res := SayHello(&quot;Ginta&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那如果我们想调用的函数是远程的一台机器，并且也想使用 <em>SayHello(argument)</em> 这种方式直接调用，就需要约定好怎么传参，返回参数是什么，以及怎么去连接。这种约定就是所谓的协议。<em>rpc</em> 主要包含通信协议和序列化协议：<br>通信协议：如http，tcp<br>序列化协议：如protobuf,json</p>\n<p>我们常用的说的 <em>restful</em> 就是使用的 <em>json</em> 去实现的序列化，这种序列化方式的优势是直观可读，但是压缩率低，传输就会很慢。</p>\n<p>protobuf是一款用C++开发的跨语言、跨平台、二进制编码的数据序列化协议，以超高的压缩率著称，极大地提高了传输效率。缺点就是需要专门的库去解析。</p>\n<p>gRPC的官网主页只有一句简单的说明：”A high performance, open source universal RPC framework“。一个开源的高性能RPC框架。使用 <em>HTTP2</em> 为传输协议，<em>HTTP1</em> 中也可以多个请求利用一个连接，但是服务端返回的时候是根据pipeline中发送的顺序返回的，如果有一个阻塞了其他都不能返回，<em>HTTP2</em> 很好地解决了这一点。<em>gRPC</em> 使用 <em>protobuf</em> 来序列化数据。</p>\n<h3 id=\"protocol-buffers\"><a href=\"#protocol-buffers\" class=\"headerlink\" title=\"protocol buffers\"></a>protocol buffers</h3><h3 id=\"go的grpc实现\"><a href=\"#go的grpc实现\" class=\"headerlink\" title=\"go的grpc实现\"></a>go的grpc实现</h3><h4 id=\"proto声明\"><a href=\"#proto声明\" class=\"headerlink\" title=\"proto声明\"></a>proto声明</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax = &quot;proto3&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">package grpc;</span><br><span class=\"line\"></span><br><span class=\"line\">option go_package = &quot;grpc/pb;proto&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">service HelloService &#123;</span><br><span class=\"line\">  rpc SayHello (SayHelloRequest) returns (SayHelloResponse);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">message SayHelloRequest &#123;</span><br><span class=\"line\">  string Name = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">message SayHelloResponse &#123;</span><br><span class=\"line\">  string Message = 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;context&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;net&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;google.golang.org/grpc&quot;</span><br><span class=\"line\">\tpb &quot;grpc-study/pb&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">type Server struct &#123;</span><br><span class=\"line\">\tpb.UnimplementedHelloServiceServer</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (s *Server) SayHello(ctx context.Context, request *pb.SayHelloRequest) (*pb.SayHelloResponse, error) &#123;</span><br><span class=\"line\">\treturn &amp;pb.SayHelloResponse&#123;</span><br><span class=\"line\">\t\tMessage: fmt.Sprintf(&quot;hello %s&quot;, request.Name),</span><br><span class=\"line\">\t&#125;, nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\t// open a port</span><br><span class=\"line\">\tlisten, _ := net.Listen(&quot;tcp&quot;, &quot;:9090&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// create a grpc server</span><br><span class=\"line\">\tserver := grpc.NewServer()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register service</span><br><span class=\"line\">\tpb.RegisterHelloServiceServer(server, &amp;Server&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tserver.Serve(listen)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;context&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;google.golang.org/grpc&quot;</span><br><span class=\"line\">\t&quot;google.golang.org/grpc/credentials/insecure&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpb &quot;grpc-study/pb&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tconn, err := grpc.Dial(&quot;localhost:9090&quot;, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdefer conn.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// start a client</span><br><span class=\"line\">\tclient := pb.NewHelloServiceClient(conn)</span><br><span class=\"line\">\tresponse, err := client.SayHello(context.Background(), &amp;pb.SayHelloRequest&#123;Name: &quot;Ginta&quot;&#125;)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(response.GetMessage())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"grpcurl\"><a href=\"#grpcurl\" class=\"headerlink\" title=\"grpcurl\"></a>grpcurl</h3><p><strong>grpcurl</strong> 工具可以查询 <em>grpc</em> 服务的 <em>API</em>, 用来调试 <em>grpc</em> 服务很方便<br>安装：<code>go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest</code>。<br>要使用 <em>grpcurl</em> 我们要在代码里先启动 <em>reflection</em> 反射服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t&quot;&quot;google.golang.org/grpc/reflection&quot;&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\tserver := grpc.NewServer()</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register service</span><br><span class=\"line\">\tpb.RegisterHelloServiceServer(server, &amp;Server&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// register reflection</span><br><span class=\"line\">\treflection.Register(server)</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就可以使用 <em>grpcurl</em> 来调试了，先看看服务有哪些接口, <code>grpcurl  localhost:9000 list</code>，报了一个异常 <strong>Failed to dial target host “localhost:9000”: tls: first record does not look like a TLS handshake</strong>，<em>grpc</em> 是用的 <em>http2</em> 协议, 虽然不强求但是一般传输也都是要加密的，这里提示我们少了 <em>TLS</em> 加密，我们可以先使用明文。<code>grpcurl -plaintext localhost:9000 list</code>。<br>可以看到已经返回了我们服务的列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grpc.HelloService</span><br><span class=\"line\">grpc.reflection.v1alpha.ServerReflection</span><br></pre></td></tr></table></figure>\n<p>,第二个是我们开启的反射服务，可以用 <em>grpcurl -plaintext localhost:9000 list grpc.HelloService</em> 命令看看 <em>grpc.HelloService</em> 服务有哪些方法名，或者用<code>grpcurl -plaintext localhost:9000 describe grpc.HelloService</code>会返回更多的信息，包括方法的出入请求。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grpc.HelloService is a service:</span><br><span class=\"line\">service HelloService &#123;</span><br><span class=\"line\">  rpc SayHello ( .grpc.SayHelloRequest ) returns ( .grpc.SayHelloResponse );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们来请求一下这个 <strong>SayHello</strong> 方法，<code>grpcurl -plaintext -d &#39;&#123;&quot;Name&quot;: &quot;Ginta&quot;&#125;&#39; localhost:9000 grpc.HelloService/SayHello</code>:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;Message&quot;: &quot;hello Ginta&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><h4 id=\"grpc通信加密\"><a href=\"#grpc通信加密\" class=\"headerlink\" title=\"grpc通信加密\"></a>grpc通信加密</h4><h4 id=\"服务发现\"><a href=\"#服务发现\" class=\"headerlink\" title=\"服务发现\"></a>服务发现</h4>"},{"title":"202208W1","date":"2022-08-08T15:20:47.000Z","author":"Ginta","cover":"https://img.ginta.top/post%2Fchuandi.jpg","_content":"\n### 生活\n\n乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。\n\n### 技术\n重读了一下[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。\n\n### 读书\n\n本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。","source":"_posts/202208W1.md","raw":"---\ntitle: 202208W1\ndate: 2022-08-08 23:20:47\nauthor: Ginta\ncover: https://img.ginta.top/post%2Fchuandi.jpg\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n\n乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。\n\n### 技术\n重读了一下[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。\n\n### 读书\n\n本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。","slug":"202208W1","published":1,"updated":"2023-02-06T07:07:17.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lei00006zsc5i496pk6","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>重读了一下<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>乌龟还是没能活过第二个月，如果早注意到它的状态就好了，本来想再尝试一下的，最后决定过段时间吧。最近朋友圈里有好多爬山的，回想一下上次爬山已经是几个月前的事了，周末爬一下塘朗山吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>重读了一下<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，每次读设计模式问题能有不同的感觉，可能是因为平时不怎么写组件，所以更多的还是阅读开源代码来保持工程化的思维。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>本周没怎么阅读，晚上睡的太晚了，地铁上都不想读书了，作息还是要调整一下的。</p>\n"},{"title":"202208W2","author":"Ginta","date":"2022-08-14T12:32:08.000Z","_content":"\n### 生活\n如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~\n\n### 技术\n速刷了 *Solidity* 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。\n博客主题换成了[icarus](https://github.com/ppoffice/hexo-theme-icarus)，原因在[7月第三周周报](/weekly/202207W3.html)有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。\n### 读书\n- 《读者》\n- 《重构》\n虽然量不大，毕竟相比上周好多了。\n\n### 还有\n本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。\n{% twitter https://twitter.com/renbaoshuo/status/1558461539677765632 %}","source":"_posts/202208W2.md","raw":"---\ntitle: 202208W2\nauthor: Ginta\ndate: 2022-08-14 20:32:08\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~\n\n### 技术\n速刷了 *Solidity* 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。\n博客主题换成了[icarus](https://github.com/ppoffice/hexo-theme-icarus)，原因在[7月第三周周报](/weekly/202207W3.html)有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。\n### 读书\n- 《读者》\n- 《重构》\n虽然量不大，毕竟相比上周好多了。\n\n### 还有\n本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。\n{% twitter https://twitter.com/renbaoshuo/status/1558461539677765632 %}","slug":"202208W2","published":1,"updated":"2023-02-06T07:07:17.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lek00016zscfmp57pce","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>速刷了 <em>Solidity</em> 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。<br>博客主题换成了<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>，原因在<a href=\"/weekly/202207W3.html\">7月第三周周报</a>有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《读者》</li>\n<li>《重构》<br>虽然量不大，毕竟相比上周好多了。</li>\n</ul>\n<h3 id=\"还有\"><a href=\"#还有\" class=\"headerlink\" title=\"还有\"></a>还有</h3><p>本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。</p>\n<div class=\"twitter-wrapper\"><blockquote class=\"twitter-tweet\"><a href=\"https://twitter.com/renbaoshuo/status/1558461539677765632\"></a></blockquote></div><script async defer src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>如上周周报所提到，周六下午去爬了塘朗山，今年的夏天相较往年热了不少，一趟下来全身都是汗。回后瑞随便吃了点，看了一下时间还早，想起也好久没有看电影了，查了一下最近《神探大战》正在上映，觉得题材和演员都还可以就直奔影院，剧情偏悬疑,刘青云演技依旧在线，就不剧透了，个人算是满意。回到家洗澡11点休息了，是几个月来最早的一次。玩了两局LOL，选了从来不选的船长，天坑，但是队友给力，所以还是赢了，这个游戏果然七分靠运气~</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>速刷了 <em>Solidity</em> 的基本特性，下周会尝试开始写合约，也会学习一下公有链，私有链，联盟链，超级账本的概念和实现思路。<br>博客主题换成了<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>，原因在<a href=\"/weekly/202207W3.html\">7月第三周周报</a>有提到（还是拖了大半个月。。。），顺带把周报单独分出了一个page。少加载了一堆资源访问速度提升是肉眼可见了，看板娘最后也没去掉。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《读者》</li>\n<li>《重构》<br>虽然量不大，毕竟相比上周好多了。</li>\n</ul>\n<h3 id=\"还有\"><a href=\"#还有\" class=\"headerlink\" title=\"还有\"></a>还有</h3><p>本周就是这样了，不过在上传md之前习惯性地刷了一下推特，发现了一枚有趣的学生。</p>\n<div class=\"twitter-wrapper\"><blockquote class=\"twitter-tweet\"><a href=\"https://twitter.com/renbaoshuo/status/1558461539677765632\"></a></blockquote></div><script async defer src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>"},{"title":"202207W3","date":"2022-07-24T11:10:47.000Z","author":"Ginta","img":"https://img.ginta.top/post%2Fchuandi.jpg","_content":"### 生活\n周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。\n乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。\n最近又开始刷[宇宙记录片](https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697)了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 *Bing Bang* 时期的宇宙是什么样子。\n### 技术\n入门了 **solidity**，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。\n博客从 *Vercel* 迁移到了 *cloudflare*，现在 *Vercel* 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成[icarus](https://github.com/ppoffice/hexo-theme-icarus)。\n### 读书\n在读[Make Time](https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1)。","source":"_posts/202207W3.md","raw":"---\ntitle: 202207W3\ndate: 2022-07-24 19:10:47\nauthor: Ginta\nimg: https://img.ginta.top/post%2Fchuandi.jpg\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。\n乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。\n最近又开始刷[宇宙记录片](https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697)了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 *Bing Bang* 时期的宇宙是什么样子。\n### 技术\n入门了 **solidity**，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。\n博客从 *Vercel* 迁移到了 *cloudflare*，现在 *Vercel* 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成[icarus](https://github.com/ppoffice/hexo-theme-icarus)。\n### 读书\n在读[Make Time](https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1)。","slug":"202207W3","published":1,"updated":"2023-02-06T07:07:17.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0leq00036zscbr8j2qrb","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。<br>乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。<br>最近又开始刷<a href=\"https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697\">宇宙记录片</a>了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 <em>Bing Bang</em> 时期的宇宙是什么样子。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>入门了 <strong>solidity</strong>，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。<br>博客从 <em>Vercel</em> 迁移到了 <em>cloudflare</em>，现在 <em>Vercel</em> 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>在读<a href=\"https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1\">Make Time</a>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六申请了加班，一方面是优化一下系统，另外也是打算过段时间请假去西藏或者云南，当然也可能是四川走一走。有好长时间没有旅游了（一两天的就不说了），上次是什么时候已经不记得了。<br>乌龟养了一个多月，这几天精神不是很好，把它放到的窗边了，希望每天有一段时间的光照能让它有有所好转。<br>最近又开始刷<a href=\"https://www.bilibili.com/video/BV1os411K72G?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=dfeba0e84225bbb1159a33a311780697\">宇宙记录片</a>了，韦伯望远镜公布了几张深空照片，从中可以看到几处引力透镜效应，很好奇未来有一天我们通过引力透镜效应观测到的一百多亿年前接近 <em>Bing Bang</em> 时期的宇宙是什么样子。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>入门了 <strong>solidity</strong>，虽然不从事区块链相关的工作，一直以来对这方面还是挺感兴趣的。<br>博客从 <em>Vercel</em> 迁移到了 <em>cloudflare</em>，现在 <em>Vercel</em> 在国内访问速度有点感人。还有就是现在的主题有点太花哨了，计划切换成<a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a>。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>在读<a href=\"https://www.amazon.sg/Make-Time-focus-matters-every/dp/0593079582/ref=asc_df_0593079582/?tag=googleshoppin-22&linkCode=df0&hvadid=389124471048&hvpos=&hvnetw=g&hvrand=11831829612059196502&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=2702&hvtargid=pla-585858616727&psc=1\">Make Time</a>。</p>\n"},{"title":"202208W3","author":"Ginta","date":"2022-08-22T16:10:46.000Z","_content":"\n## 生活\n周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。\n吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。\n\n## 技术\n这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。\n\n## 读书\n东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。","source":"_posts/202208W3.md","raw":"---\ntitle: 202208W3\nauthor: Ginta\ndate: 2022-08-23 00:10:46\ntags:\n    - 周报\ncategories: 生活\n---\n\n## 生活\n周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。\n吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。\n\n## 技术\n这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。\n\n## 读书\n东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。","slug":"202208W3","published":1,"updated":"2023-02-06T07:07:17.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0ler00046zscdspzgf98","content":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。<br>吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>周六刷了梧桐山，上次去梧桐山已经是半年前了，天气正好，有一段土路没有下雨，顺利走到蝴蝶谷。只是不巧当天山顶多云，往下什么都看不到，还挺冷的。<br>吉他放到角落吃灰有段时间了，试了试《城南花已开》，已经有点生硬了，平时还是要不时练习一下。公司新来一个老哥可以负载部分我的任务，leader说前期可以把不太重要的交给他熟悉项目，不过第一周感觉还是算了吧，快乐就好，所以我告诉他本周只用熟悉一下模块是做什么的，然后就是强调了一下没什么事就准时下班。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>这周还挺忙的，技术方面基本没有输入和输出，本来想写一下合约的，这周工作任务比较满。下周会好一点，可以把一些任务交付给新人了。</p>\n<h2 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h2><p>东野圭吾的《时生》读了一半，《重构》小翻了一下，个人感觉比起上周只读杂志算是好一点。</p>\n"},{"title":"202209W1","author":"Ginta","date":"2022-09-05T13:43:50.000Z","_content":"### 生活\n本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1/4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。\n### 技术\n学习了超级账本 **hyperledger**的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 **fabric**，感觉找到了新玩具！\n\n### 读书\n《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。","source":"_posts/202209W1.md","raw":"---\ntitle: 202209W1\nauthor: Ginta\ndate: 2022-09-05 21:43:50\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1/4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。\n### 技术\n学习了超级账本 **hyperledger**的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 **fabric**，感觉找到了新玩具！\n\n### 读书\n《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。","slug":"202209W1","published":1,"updated":"2023-02-06T07:07:17.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0ler00066zsc07bg20p6","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1&#x2F;4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了超级账本 <strong>hyperledger</strong>的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 <strong>fabric</strong>，感觉找到了新玩具！</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>本来计划周六去惠州爬罗浮山的，正好深圳实行“静默管理”也没去成，目前来看中秋节也是出不了深圳了。高中时期看的《龙族》出动漫了！很喜欢小恶魔的形象，话说记得诺诺是御姐，中二是保留了一点点，不过御姐完全是看不出来，继续期待青铜与火之王登场，衰小孩使用第一个1&#x2F;4生命换来的战斗场面会以什么样的方式呈现给观众呢？老妈打电话问国庆什么时候回，舅舅家的姐姐要出嫁了，半年多没回老家是想回去看看，不过参加婚宴难免要被灵魂拷问，自毕业以来就像断线的风筝在南方浪，家里还是希望能早点定居，只是自由惯了，总觉得定居就会被束缚，还不够成熟吧。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了超级账本 <strong>hyperledger</strong>的理念，了解了联盟链，公共链和私有链的区别，周末把电脑重装了一下，本地试跑了 <strong>fabric</strong>，感觉找到了新玩具！</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《乌合之众》读完，感触挺大的，就是不知道怎么表达，作者的一些观点冲击了以往的认知，作者认为群众的认知未必高于个体，而个体的一些特点在融入集体之后会慢慢消失，这让我想到了一个词：同化。</p>\n"},{"title":"202209W3","author":"Ginta","date":"2022-09-19T15:35:50.000Z","_content":"### 生活\n周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。\n\n### 技术\n在家里的电脑搭了一个 *istio*，实操一下，公司的 *istio* 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。\n\n### 读书\n《被拒绝的勇气》 100%\n书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。","source":"_posts/202209W3.md","raw":"---\ntitle: 202209W3\nauthor: Ginta\ndate: 2022-09-19 23:35:50\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。\n\n### 技术\n在家里的电脑搭了一个 *istio*，实操一下，公司的 *istio* 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。\n\n### 读书\n《被拒绝的勇气》 100%\n书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。","slug":"202209W3","published":1,"updated":"2023-02-06T07:07:17.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0let000a6zscfofq9wx2","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>在家里的电脑搭了一个 <em>istio</em>，实操一下，公司的 <em>istio</em> 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《被拒绝的勇气》 100%<br>书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周六和朋友爬了南山，只看海拔可以说是一座小山，然而盘山的路也是挺长的，总体下来和塘朗山用时差不多。用商品门口的电子称测了体重，比起年初的144斤已经下降到了132.8斤，一方面是过年穿的多，也可能是跑步两周的意外变化吧，意外是因为跑步只是不想太肥宅而每天保持一定的运动量。国庆的机票订好了，希望这段时间疫情不要再反复了，一年也就回去两次。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>在家里的电脑搭了一个 <em>istio</em>，实操一下，公司的 <em>istio</em> 都是运维去处理的，虽然不用开发改配置，终究是想自己体验一下。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《被拒绝的勇气》 100%<br>书名里是拒绝，读完感觉和拒绝关系不大吧，主要是给读者一点点建议或者说是方法，简单化生活也是可以轻易做到的。拿弗洛伊德的作为对立的观点也是有点东西了。</p>\n"},{"title":"202208W4","author":"Ginta","date":"2022-08-28T16:15:14.000Z","_content":"\n### 生活\n周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 *react* ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。\n\n### 技术\n这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，希望重构后可以做到任何一位新人都可以快速上手。\n\n### 读书\n- 《时生》100%\n- 《人间失格》100%\n积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。","source":"_posts/202208W4.md","raw":"---\ntitle: 202208W4\nauthor: Ginta\ndate: 2022-08-29 00:15:14\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 *react* ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。\n\n### 技术\n这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了[DESIGN  PATTERNS  in  GO](https://refactoring.guru/design-patterns/go)，希望重构后可以做到任何一位新人都可以快速上手。\n\n### 读书\n- 《时生》100%\n- 《人间失格》100%\n积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。","slug":"202208W4","published":1,"updated":"2023-02-06T07:07:17.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0leu000d6zschsj37s9l","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 <em>react</em> ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，希望重构后可以做到任何一位新人都可以快速上手。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《时生》100%</li>\n<li>《人间失格》100%<br>积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>周五和两位朋友吃饭，之前是他们请的，这次正好轮到我了，选了大仟里的《美奈小馆》，越南料理，几个月前尝过一次，口感还行。期间闲聊了很多，代码、链、定居。其中一位离职一个多月，最近在研究 <em>react</em> ，有提到曾经做过一段前端，算是重拾旧业，打算再休息一段时间。另一位是有考虑之后在惠州定居，可能是因为已经有小孩了，所以会想得全面一点。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>这周抽空整理了一下负责业务模块代码，九月份计划重构部分接口，所以又看了<a href=\"https://refactoring.guru/design-patterns/go\">DESIGN  PATTERNS  in  GO</a>，希望重构后可以做到任何一位新人都可以快速上手。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><ul>\n<li>《时生》100%</li>\n<li>《人间失格》100%<br>积压的东野圭吾的书全部看完了，把《时生》放回书架的时候纠结下一本看什么好，《大秦帝国》系列还是阿加莎系列，但是最近看的都是历史和悬疑类型小说，想换个风格。正好看到角落里的《人间失格》，之前和发小互相推荐小说的时候有对她提到过，她说这本书看了可能会抑郁，没有很推荐我看。然而当初《活着》也没有造成很大的心理负担，片刻迟疑最终还是拆开了包装。《人间失格》一共花了两天半，确实是不错的作品，也确实有点心情沉重，刚看完的那天不想工作，也不想和任何人沟通。一两天后就好多了，多看看不同题材的书就好像经历了不同人的部分人生一样，感觉生命充实许多。</li>\n</ul>\n"},{"title":"202209W4","author":"Ginta","date":"2022-09-27T14:44:31.000Z","_content":"### 生活\n换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。\n抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：\n>>>有些人二十岁就死了，等到八十岁才被埋葬\n\n诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。\n\n### 技术\n**Github** 看到一个 **issue** 被link到了自己提的一个 *[PR](https://github.com/foamzou/media-get/pull/8)*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。\n![20220927233055](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png)\n作者希望这个 *PR* 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。\n\n### 读书\n原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。","source":"_posts/202209W4.md","raw":"---\ntitle: 202209W4\nauthor: Ginta\ndate: 2022-09-27 22:44:31\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。\n抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：\n>>>有些人二十岁就死了，等到八十岁才被埋葬\n\n诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。\n\n### 技术\n**Github** 看到一个 **issue** 被link到了自己提的一个 *[PR](https://github.com/foamzou/media-get/pull/8)*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。\n![20220927233055](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png)\n作者希望这个 *PR* 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。\n\n### 读书\n原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。","slug":"202209W4","published":1,"updated":"2023-02-06T07:07:17.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0leu000h6zscgpj6a0y2","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。<br>抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>有些人二十岁就死了，等到八十岁才被埋葬</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Github</strong> 看到一个 <strong>issue</strong> 被link到了自己提的一个 *<a href=\"https://github.com/foamzou/media-get/pull/8\">PR</a>*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png\" alt=\"20220927233055\"><br>作者希望这个 <em>PR</em> 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>换了个灵动岛，只有很小一部分应用支持，不过苹果的联通信号是真的有点抱歉了，上地铁基本等于没有，电量暂时能坚持一天。周六爬了铁仔山，海拔不高，个别地方风景不错。忘记上次刷油管是什么时候了。<br>抽空听一些播客，了解一下不同人的异样人生，挺有意思的，有位分享者兜兜转转出国回国、换了职业方向，最终选择了一个小城定居，也有的出国了就没再回来。想到了在成都和一位做开源的老哥沟通过，老哥彼时在业界也算小有名气，放弃了一些机会选择自由职业，在几期博客里也分享了自己的开源生涯，前一阵子看他在博客里提到入职了戴尔。偶尔也会感到生活的单调，对于大多数人来说也许单调才是常态，罗曼·罗兰有句话描述了这种生活方式：</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>有些人二十岁就死了，等到八十岁才被埋葬</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>诚然每个人对于生活都有自己诠释，但总奢望平静的生活不时有一些波澜，无论好坏，就好像有一种疯狂是渴望燃尽生命去追求的，是一种只有在不断变化的场景中才能突然达到的状态。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Github</strong> 看到一个 <strong>issue</strong> 被link到了自己提的一个 *<a href=\"https://github.com/foamzou/media-get/pull/8\">PR</a>*，当时是为了下油管的视频补全了代理的功能，然后又不想白嫖项目就顺手提交了这个小的feature。没想到国外的机器访问国内也要代理，好奇这是哪个国家。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220927233055.png\" alt=\"20220927233055\"><br>作者希望这个 <em>PR</em> 把配置功能一并完善了，后来一直没时间（其实就是懒），立个FLAG：国庆一定。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>原以为现在已经可以接受各种风格的书了，其实想多了，《沙之书》最终是读不下去了，说不定未来哪天实在无聊把它捡起来一口气解决了。《大秦帝国3下》读了10%，这周读书有点少了。</p>\n"},{"title":"202209W2","author":"Ginta","date":"2022-09-13T01:27:32.000Z","_content":"### 生活\n中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。![跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png)好久没看 *doinb* 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。\n\n### 技术\n内网起了一个 *go-ethereum的* 本地环境，尝试用 *go-ethereum* 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 *solidity* 无脑写合约来得更清楚。\n\n### 读书\n《大秦帝国三上》100%\n战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。\n\n","source":"_posts/202209W2.md","raw":"---\ntitle: 202209W2\nauthor: Ginta\ndate: 2022-09-13 09:27:32\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。![跑步记录](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png)好久没看 *doinb* 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。\n\n### 技术\n内网起了一个 *go-ethereum的* 本地环境，尝试用 *go-ethereum* 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 *solidity* 无脑写合约来得更清楚。\n\n### 读书\n《大秦帝国三上》100%\n战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。\n\n","slug":"202209W2","published":1,"updated":"2023-02-06T07:07:17.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lev000k6zscbi5bgnmb","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。<img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png\" alt=\"跑步记录\">好久没看 <em>doinb</em> 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>内网起了一个 <em>go-ethereum的</em> 本地环境，尝试用 <em>go-ethereum</em> 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 <em>solidity</em> 无脑写合约来得更清楚。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三上》100%<br>战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>中秋在家宅了三天没有出门，现在每天会跑几公里，一周下来感觉还行，用了一个开源项目收集每天的跑步信息，还可以自动生成轨迹线，但是GPS需要带手机，不过记录距离即可所以手机放家了。<img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20220913093617.png\" alt=\"跑步记录\">好久没看 <em>doinb</em> 直播，还是一如既往地有意思，4个职业选手放飞自我，辅助的妹子也是为难。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>内网起了一个 <em>go-ethereum的</em> 本地环境，尝试用 <em>go-ethereum</em> 去实现创建账号，实现与公链的交互，由于相对离底层更进一步，所以比起直接用 <em>solidity</em> 无脑写合约来得更清楚。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三上》100%<br>战国秦的几代君主都是挺有才能的，赢渠梁、赢驷、赢稷，再加有商君、司马错、白起等臣子，虽说赢荡自负举鼎而亡，也没有多大成就，不过在位时也算能听进臣下的意见，所以总体来说秦的强大是必然的，从战国最弱的几个国家一直到最强。人物刻画的相当有特色，整部小说看起来也有一种开阔的感觉。</p>\n"},{"title":"202210W1","date":"2022-10-05T12:17:25.000Z","author":"Ginta","_content":"### 生活\n回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。\n\n### 技术\n国庆优先，其他滞后～\n\n### 读书\n《大秦帝国三下》 100%\n看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。","source":"_posts/202210W1.md","raw":"---\ntitle: 202210W1\ndate: 2022-10-05 20:17:25\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。\n\n### 技术\n国庆优先，其他滞后～\n\n### 读书\n《大秦帝国三下》 100%\n看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。","slug":"202210W1","published":1,"updated":"2023-02-06T07:07:17.641Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lev000n6zsce8z353oh","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>国庆优先，其他滞后～</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三下》 100%<br>看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>回一次老家真是挺不容易的，早上六点起床下午四点才到家；回来那天短袖尚可，现在已是外套加身。和家人一起把前院的土豆收了一下，很多年没有做农活了，手法已然生疏。本来二舅家的姐姐是要回来举办婚礼的，突然县里管控升级就作罢了，想凑个热闹都不行。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>国庆优先，其他滞后～</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国三下》 100%<br>看到白起被秦昭王赐死很是惋惜，一生从未打过败仗的军神最终落得如此下场。关于赵括，以前只知道这是个纸上谈兵的将军，现在看来是以点概面了，如果他能随军征战几年，经历几场大战再与白起决战长平，胜负真不一定，没想到他在断粮的时候能把自己一半的粮食分给战士，陷全军于危局能承认自己全盘的错误，人格魅力相当可以，可惜。</p>\n"},{"title":"202210W4","date":"2022-10-31T04:43:29.000Z","author":"Ginta","_content":"\n### 生活\n上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步.......主持当天麦克风声音还很小。\n\n### 技术\n因为在准备开源年会，所以基本什么都没做\n\n### 读书\n《大秦帝国四上》 100%\n终于读完了\n\n### 其他\n之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。","source":"_posts/202210W4.md","raw":"---\ntitle: 202210W4\ndate: 2022-10-31 12:43:29\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n\n### 生活\n上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步.......主持当天麦克风声音还很小。\n\n### 技术\n因为在准备开源年会，所以基本什么都没做\n\n### 读书\n《大秦帝国四上》 100%\n终于读完了\n\n### 其他\n之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。","slug":"202210W4","published":1,"updated":"2023-02-06T07:07:17.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lev000q6zscfog0aeuz","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步…….主持当天麦克风声音还很小。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>因为在准备开源年会，所以基本什么都没做</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 100%<br>终于读完了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>上周没写周报，是因为也没什么可以写的，本周的话没有大事发现，参加了第七届开源年会，这次是第一次采用元宇宙的形式给大家做分享，有幸作为志愿者组长和区块链会场的主持人参与其中，组长需要培训志愿者，任务虽然简单但是大家时间都不统一，所以有一部分是元宇宙内部培训的，也有一部分是看我的录屏学习，每天晚上基本都是11点以后才回答完所有的问题。会议开始前一天晚上才把主持稿写完，有一位讲师的视频超过时长了，下了剪辑软件剪了10分钟的内容，最后导出发现音频和视频不同步…….主持当天麦克风声音还很小。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>因为在准备开源年会，所以基本什么都没做</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 100%<br>终于读完了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>之前也有参与过Pycon China 2019,Pychon China 2022。一次是在成都，一次是在深圳，这次是在元宇宙。其实参与社区最主要的一个目的还是因为社区的氛围比较好，因为自己崇尚自由，喜欢不受约束，外加极简的社交，开源社区刚好满足所有的情况，期间的各种工作也给了参与者自由发挥的空间。比如作为主持人我不需要用太官方的话客串全场，主持过程中加点个人的想法这都是可以的。</p>\n"},{"title":"202210W2","date":"2022-10-11T14:12:38.000Z","author":"Ginta","_content":"### 国庆结束\n说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。\n\n### 技术\n看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去\n\n### 读书\n《大秦帝国四上》 40%\n吕不韦终于登场了，有一段对话挺精彩的\n>>>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”\n“劳作立身，其利十倍。”\n“珠玉之利几何？”吕不韦问。\n“珠玉无价，其利百倍。”\n“若得谋国，其利几何？”\n“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”\n吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”\n“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”\n\n吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。\n","source":"_posts/202210W2.md","raw":"---\ntitle: 202210W2\ndate: 2022-10-11 22:12:38\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 国庆结束\n说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。\n\n### 技术\n看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去\n\n### 读书\n《大秦帝国四上》 40%\n吕不韦终于登场了，有一段对话挺精彩的\n>>>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”\n“劳作立身，其利十倍。”\n“珠玉之利几何？”吕不韦问。\n“珠玉无价，其利百倍。”\n“若得谋国，其利几何？”\n“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”\n吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”\n“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”\n\n吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。\n","slug":"202210W2","published":1,"updated":"2023-02-06T07:07:17.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lew000t6zsc4tpsa9dn","content":"<h3 id=\"国庆结束\"><a href=\"#国庆结束\" class=\"headerlink\" title=\"国庆结束\"></a>国庆结束</h3><p>说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 40%<br>吕不韦终于登场了，有一段对话挺精彩的</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”<br>“劳作立身，其利十倍。”<br>“珠玉之利几何？”吕不韦问。<br>“珠玉无价，其利百倍。”<br>“若得谋国，其利几何？”<br>“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”<br>吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”<br>“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"国庆结束\"><a href=\"#国庆结束\" class=\"headerlink\" title=\"国庆结束\"></a>国庆结束</h3><p>说短不短的假期没什么感觉就过去了，看了一个国庆的动物世界，并非所有的动物都畏惧人类，像虎鲸这样的海洋霸主偶尔也会挑逗一下两足生物。上班第二天开始跑步，小半个月没跑第一天就把膝盖摔伤了。S12开始了，lpl的几只队伍表现都不错，小明的辅助硬是打出了C位的感觉，看到有弹幕笑称“4保1辅助”，反而是TES的战绩在lpl中垫底，不管怎么说轻敌也要反思一下。回到深圳和朋友吃了顿饭，离职几个月感觉精神状态好多了，而且还能保持一定的hard刷题量倒是挺意外的。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>看了一下helm自定义配置功能的源码，打算借鉴到另一个项目中去</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《大秦帝国四上》 40%<br>吕不韦终于登场了，有一段对话挺精彩的</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>吕不韦思忖道：“商家以牟利为本。敢问父亲，耕田之利几何？”<br>“劳作立身，其利十倍。”<br>“珠玉之利几何？”吕不韦问。<br>“珠玉无价，其利百倍。”<br>“若得谋国，其利几何？”<br>“谋国？”父亲大是愣怔，“邦国焉得买卖？何谋之有？”<br>吕不韦字斟句酌道：“譬如，拥一新君，掌邦国大全。”<br>“……”父亲默然，良久，竹杖笃笃顿地，“如此谋国，其利万世不竭！”</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>吕不韦认定秦异人“奇货可居”，于是押上自己全部身家帮秦异人还国，无论是眼光还是魄力都注定了他未来曲折精彩的道路。</p>\n"},{"title":"202211W1","date":"2022-11-07T04:51:48.000Z","_content":"### 生活\n计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。\n\n### 技术\n学习了一下go的template用法。\n了解了一下 *consensys* 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。\n\n### 其他\n国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。\n","source":"_posts/202211W1.md","raw":"---\ntitle: 202211W1\ndate: 2022-11-07 12:51:48\ntags:\n    - 周报\ncategories: 生活\n---\n### 生活\n计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。\n\n### 技术\n学习了一下go的template用法。\n了解了一下 *consensys* 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。\n\n### 其他\n国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。\n","slug":"202211W1","published":1,"updated":"2023-02-06T07:07:17.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0lew000w6zscfneog5ia","content":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了一下go的template用法。<br>了解了一下 <em>consensys</em> 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h3><p>计划周六去梅林穿越的，天气不稳定小伙伴们最终一致“下次一定”。周日晚上和朋友出去吃饭，说起来有段时间没见他了，在家快乐当宝爸了吧。Pycon China下个月就要还是老地方举办，收到少飞的突然联系还是挺有意思的，今年还是去折腾直播设备吧，去年真的调试了好久。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>学习了一下go的template用法。<br>了解了一下 <em>consensys</em> 公司的产品设计思路，重复看了上周区块链论坛的分享内容。目前对于区块链的了解算是小有入门吧，不过还没有看到比较成熟的商品模式。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>国庆后的作息很不规律，工作日一两点睡，周末有时候四五点还没睡，希望能慢慢调整到在家时的状态。</p>\n"},{"title":"逝去的生命","date":"2022-11-14T17:23:08.000Z","author":"Ginta","_content":"\n整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 *python* 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。\n\n### 逝去的生命\n网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。\n\n### 放慢节奏\n周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。\n\n### 技术\n正在重拾 *Hyperledger Fabric*，一个月前在 *wsl* 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢[pseudoyu](https://www.pseudoyu.com/zh/) 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。\n\n### 读书\n《区块链原理、设计与应用》10%\n接下来一段时间小说先停下来，小说今年的输入已经远超往年了\n\n### 其他\n忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 *Github* 当初注册的 *id* 都是 **Mar-heaven**。","source":"_posts/202211W2.md","raw":"---\ntitle: 逝去的生命\ndate: 2022-11-15 01:23:08\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n\n整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 *python* 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。\n\n### 逝去的生命\n网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。\n\n### 放慢节奏\n周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。\n\n### 技术\n正在重拾 *Hyperledger Fabric*，一个月前在 *wsl* 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢[pseudoyu](https://www.pseudoyu.com/zh/) 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。\n\n### 读书\n《区块链原理、设计与应用》10%\n接下来一段时间小说先停下来，小说今年的输入已经远超往年了\n\n### 其他\n忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 *Github* 当初注册的 *id* 都是 **Mar-heaven**。","slug":"202211W2","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0lew000z6zsc96mw4wfg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 <em>python</em> 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。</p>\n<h3 id=\"逝去的生命\"><a href=\"#逝去的生命\" class=\"headerlink\" title=\"逝去的生命\"></a>逝去的生命</h3><p>网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。</p>\n<h3 id=\"放慢节奏\"><a href=\"#放慢节奏\" class=\"headerlink\" title=\"放慢节奏\"></a>放慢节奏</h3><p>周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>正在重拾 <em>Hyperledger Fabric</em>，一个月前在 <em>wsl</em> 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢<a href=\"https://www.pseudoyu.com/zh/\">pseudoyu</a> 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》10%<br>接下来一段时间小说先停下来，小说今年的输入已经远超往年了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 <em>Github</em> 当初注册的 <em>id</em> 都是 <strong>Mar-heaven</strong>。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>整理书架的时候发现没有空间放置新书了，有一层是放满了读者，还有几杯比较厚的 <em>python</em> 技术书，有的是还没毕业买的，有的是刚毕业那会买的，一起处理了。</p>\n<h3 id=\"逝去的生命\"><a href=\"#逝去的生命\" class=\"headerlink\" title=\"逝去的生命\"></a>逝去的生命</h3><p>网上看到一位币圈的大佬自杀了，他曾炒币收入500万，后来进行一些投资，最近市场不景气差不多归零了，然后就是和女友分手，留下了一段视频之后选择告别人世。惊讶，可惜，惊讶是因为年纪轻轻家里情况又比较特殊的情况下也曾有过那样的折腾。可惜22岁大有重新来过的可能却终结了生命。有时也会把一些场景类比到自己身上，思考在同样的情景中自己的意志是否能平静处理，答案往往是不能。</p>\n<h3 id=\"放慢节奏\"><a href=\"#放慢节奏\" class=\"headerlink\" title=\"放慢节奏\"></a>放慢节奏</h3><p>周末在家宅了一天，看了一天书，还旁观了社区几位大叔下象棋。前一段时间的周末过得很忙，或者说排得有点满，突然有一周不玩游戏不约饭不水群感觉真的不错。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p>正在重拾 <em>Hyperledger Fabric</em>，一个月前在 <em>wsl</em> 上成功跑起来了测试网络就没管了，这次打算系统地学习一下这个框架，感谢<a href=\"https://www.pseudoyu.com/zh/\">pseudoyu</a> 推荐的《区块链原理、设计与应用》和《区块链技术进阶与实战》这两本书。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》10%<br>接下来一段时间小说先停下来，小说今年的输入已经远超往年了</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>忍不住又开始看《魔兵传奇》了，说起来银太的名字作为网名已经好多年了，连 <em>Github</em> 当初注册的 <em>id</em> 都是 <strong>Mar-heaven</strong>。</p>\n"},{"title":"万能的ChatGPT","date":"2022-12-07T15:28:17.000Z","author":"Ginta","_content":"这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。\n\n\n### 深度参与社区\n其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。\n\n后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。\n\n再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。\n\n以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。\n\n翻出2021年总结的时候有这么一段：\n![2021](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png)\n后续会更深度参与社区，期待有新的发现。\n\n### ChatGPT\n微博的热搜前十我不知道是什么，但 **ChatGPT** 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知\n![20221208001613](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png)\n![20221208002550](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png)\n个人体验是非常满意的，自己的代码可以交给它 *review*，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。\n或许以前没有注意过 **AI** 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 **ChatGPT** 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。\n\n### 运动\n连续跑步十天了，打破历史记录\n![20221208004251](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png)\n中间断了一个月，12月坚持下来200公里应该问题不大。\n\n### 读书\n二刷《重构》\n","source":"_posts/202212W1.md","raw":"---\ntitle: 万能的ChatGPT\ndate: 2022-12-07 23:28:17\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。\n\n\n### 深度参与社区\n其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。\n\n后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。\n\n再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。\n\n以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。\n\n翻出2021年总结的时候有这么一段：\n![2021](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png)\n后续会更深度参与社区，期待有新的发现。\n\n### ChatGPT\n微博的热搜前十我不知道是什么，但 **ChatGPT** 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知\n![20221208001613](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png)\n![20221208002550](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png)\n个人体验是非常满意的，自己的代码可以交给它 *review*，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。\n或许以前没有注意过 **AI** 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 **ChatGPT** 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。\n\n### 运动\n连续跑步十天了，打破历史记录\n![20221208004251](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png)\n中间断了一个月，12月坚持下来200公里应该问题不大。\n\n### 读书\n二刷《重构》\n","slug":"202212W1","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0lex00126zsc8kyf0clu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。</p>\n<h3 id=\"深度参与社区\"><a href=\"#深度参与社区\" class=\"headerlink\" title=\"深度参与社区\"></a>深度参与社区</h3><p>其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。</p>\n<p>后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。</p>\n<p>再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。</p>\n<p>以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。</p>\n<p>翻出2021年总结的时候有这么一段：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png\" alt=\"2021\"><br>后续会更深度参与社区，期待有新的发现。</p>\n<h3 id=\"ChatGPT\"><a href=\"#ChatGPT\" class=\"headerlink\" title=\"ChatGPT\"></a>ChatGPT</h3><p>微博的热搜前十我不知道是什么，但 <strong>ChatGPT</strong> 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png\" alt=\"20221208001613\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png\" alt=\"20221208002550\"><br>个人体验是非常满意的，自己的代码可以交给它 <em>review</em>，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。<br>或许以前没有注意过 <strong>AI</strong> 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 <strong>ChatGPT</strong> 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。</p>\n<h3 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h3><p>连续跑步十天了，打破历史记录<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png\" alt=\"20221208004251\"><br>中间断了一个月，12月坚持下来200公里应该问题不大。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>二刷《重构》</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>这周听的播客依然以开源为主，几位嘉宾讲述了各自参与到开源的经历，以及一些想法。不得不说每次听到有谁说自己高中啊甚至初中就接触到编程还是有点佩服的，对比自己，初中的时候电脑基本都是用来看剧，或者玩反恐精英，高中就更纯粹了，单调英雄联盟。</p>\n<h3 id=\"深度参与社区\"><a href=\"#深度参与社区\" class=\"headerlink\" title=\"深度参与社区\"></a>深度参与社区</h3><p>其中有一个观点还是很有感触的，就是尝试去深度参与社区。刚毕业的那会自己只负责拍照，还老担心拍的不好（事实上确实很业余），后来借鉴了其他人的照片，现在至少角度不会显得突兀。</p>\n<p>后来负责了一个直播的摄影机机位，虽说是固定不用移动，但第一次调试直播设备也经历了一点波折。最噩梦的是切屏器被我玩的对不上了，那天我们调试到了很晚才整好。</p>\n<p>再后来线上培训志愿者、主持分会场，观众不多也挺紧张的。幕后也要简单地剪辑视频，偶尔摸出一个脚本去处理一些事情。</p>\n<p>以现在的角度回看，在比起更加直接的“**开发工程师”， 在开源社区更多的是有机会尝试不同的角色，也不用去焦虑做不好会怎样。</p>\n<p>翻出2021年总结的时候有这么一段：<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221207235918.png\" alt=\"2021\"><br>后续会更深度参与社区，期待有新的发现。</p>\n<h3 id=\"ChatGPT\"><a href=\"#ChatGPT\" class=\"headerlink\" title=\"ChatGPT\"></a>ChatGPT</h3><p>微博的热搜前十我不知道是什么，但 <strong>ChatGPT</strong> 毫无争议是朋友圈的关键词第一，它可以写代码，搞怪，天文地理无所不知<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208001613.png\" alt=\"20221208001613\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208002550.png\" alt=\"20221208002550\"><br>个人体验是非常满意的，自己的代码可以交给它 <em>review</em>，有考虑过作为搜索引擎，只是未来它一定是收费的，目前可以白嫖。<br>或许以前没有注意过 <strong>AI</strong> 的发展，像这种可以有上下文的提问，并且可以把话题一直延伸下去的还是头一次见，目前一些简单的代码实现完全可以用 <strong>ChatGPT</strong> 去生成初代简易算法，所以未来计算机相关的初级任务完全可以交给人工智能自行解决。</p>\n<h3 id=\"运动\"><a href=\"#运动\" class=\"headerlink\" title=\"运动\"></a>运动</h3><p>连续跑步十天了，打破历史记录<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20221208004251.png\" alt=\"20221208004251\"><br>中间断了一个月，12月坚持下来200公里应该问题不大。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>二刷《重构》</p>\n"},{"title":"颓废的两周","author":"Ginta","date":"2022-12-26T04:30:31.000Z","_content":"\n最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。\n\n### Pycon 2022\n和听听卡一起主办了今年的 *PyCon China* 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 *GO* 了，不过在社区的项目还是优先开发效率比较高的 *Python*。如果明年的 *Pycon* 自己还在深圳的话，那上去分享一下吧。\n\n### 花里胡哨\n开源社的小伙伴大多是 *Node.js* + * TypeScript*，为了方便后续的合作，计划元旦入坑 *Node.js*。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。\n\n### 读书\n这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。\n\n### 元旦\n元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。\n\n### 其他\n2022年的最后几天不要感染病毒就好～\n","source":"_posts/202212W4.md","raw":"---\ntitle: 颓废的两周\nauthor: Ginta\ndate: 2022-12-26 12:30:31\ntags:\n    - 周报\ncategories: 生活\n---\n\n最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。\n\n### Pycon 2022\n和听听卡一起主办了今年的 *PyCon China* 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 *GO* 了，不过在社区的项目还是优先开发效率比较高的 *Python*。如果明年的 *Pycon* 自己还在深圳的话，那上去分享一下吧。\n\n### 花里胡哨\n开源社的小伙伴大多是 *Node.js* + * TypeScript*，为了方便后续的合作，计划元旦入坑 *Node.js*。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。\n\n### 读书\n这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。\n\n### 元旦\n元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。\n\n### 其他\n2022年的最后几天不要感染病毒就好～\n","slug":"202212W4","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0lex00156zscc91l559w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。</p>\n<h3 id=\"Pycon-2022\"><a href=\"#Pycon-2022\" class=\"headerlink\" title=\"Pycon 2022\"></a>Pycon 2022</h3><p>和听听卡一起主办了今年的 <em>PyCon China</em> 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 <em>GO</em> 了，不过在社区的项目还是优先开发效率比较高的 <em>Python</em>。如果明年的 <em>Pycon</em> 自己还在深圳的话，那上去分享一下吧。</p>\n<h3 id=\"花里胡哨\"><a href=\"#花里胡哨\" class=\"headerlink\" title=\"花里胡哨\"></a>花里胡哨</h3><p>开源社的小伙伴大多是 <em>Node.js</em> + * TypeScript*，为了方便后续的合作，计划元旦入坑 <em>Node.js</em>。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。</p>\n<h3 id=\"元旦\"><a href=\"#元旦\" class=\"headerlink\" title=\"元旦\"></a>元旦</h3><p>元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>2022年的最后几天不要感染病毒就好～</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>最近发烧的人好多，周四喉咙有点疼，不过当时也没有抗原，也不知道是不是中招了，打了声招呼远程办公。周日一起合租的同学烧到40度+，原本打算元旦前的一周也远程算了，鉴于在家这几天少了固定的运动量精神似乎变差了很多，想想还是去公司吧。周一早上看了一下镜子里的人，不到一周的熬夜和荒废了两周的跑步从黑眼圈和憔悴的面容就可以看出来有多糟糕了。</p>\n<h3 id=\"Pycon-2022\"><a href=\"#Pycon-2022\" class=\"headerlink\" title=\"Pycon 2022\"></a>Pycon 2022</h3><p>和听听卡一起主办了今年的 <em>PyCon China</em> 深圳场，有了往年的惨痛教训流程上顺利了很多，没有因为切屏器再搞到晚上十一点，会前还调侃说今年这个疫情到时候来听的人只有一两个会不会很尴尬，最终还是到场了几十个，似乎比去年还多一点。晚上一起吃饭的时候发现有不少讲师其实也是从听众过来的。第一年是听众，第二年是志愿者，第三年就上台分享。虽然工作上一直在 <em>GO</em> 了，不过在社区的项目还是优先开发效率比较高的 <em>Python</em>。如果明年的 <em>Pycon</em> 自己还在深圳的话，那上去分享一下吧。</p>\n<h3 id=\"花里胡哨\"><a href=\"#花里胡哨\" class=\"headerlink\" title=\"花里胡哨\"></a>花里胡哨</h3><p>开源社的小伙伴大多是 <em>Node.js</em> + * TypeScript*，为了方便后续的合作，计划元旦入坑 <em>Node.js</em>。最近在搞开源社的公众号后台，不需要备案所以内网穿透一个开发也挺方便的，就是支持很不好，自动回复的功能网页端可以支持多条图文，但是开发者的接口只能返回一个，在公众号支持之前看样子是不能直接交付了。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>这段时间也没读什么书，今年的最后一周就以东野圭吾结束吧。</p>\n<h3 id=\"元旦\"><a href=\"#元旦\" class=\"headerlink\" title=\"元旦\"></a>元旦</h3><p>元旦暂时没有出省的计划，大概率在广东内部游荡了，更大概率就在深圳不出去了，最近两个月都没爬山了，去东莞或者惠州选一座山爬。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>2022年的最后几天不要感染病毒就好～</p>\n"},{"title":"好像没那么能吃辣了","date":"2022-11-20T13:20:31.000Z","author":"Ginta","_content":"### 下次不点辣了\n周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。\n”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑\n鸳鸯锅的，至少中辣起步，也算是入乡随俗了。\n\n### 新人？老人？\n>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！\n\n以往每年都会参加 *pycon china* 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。\n\n### 技术\n**Fabric** 测试网络调试了链码，对 **Fabric** 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 **Fabric** 的源码，有空会开发一个应用。\n\n### 读书\n《区块链原理、设计与应用》20%\n","source":"_posts/202211W3.md","raw":"---\ntitle: 好像没那么能吃辣了\ndate: 2022-11-20 21:20:31\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n### 下次不点辣了\n周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。\n”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑\n鸳鸯锅的，至少中辣起步，也算是入乡随俗了。\n\n### 新人？老人？\n>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！\n\n以往每年都会参加 *pycon china* 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。\n\n### 技术\n**Fabric** 测试网络调试了链码，对 **Fabric** 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 **Fabric** 的源码，有空会开发一个应用。\n\n### 读书\n《区块链原理、设计与应用》20%\n","slug":"202211W3","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0lex00186zsceiyt8kxx","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"下次不点辣了\"><a href=\"#下次不点辣了\" class=\"headerlink\" title=\"下次不点辣了\"></a>下次不点辣了</h3><p>周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。<br>”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑<br>鸳鸯锅的，至少中辣起步，也算是入乡随俗了。</p>\n<h3 id=\"新人？老人？\"><a href=\"#新人？老人？\" class=\"headerlink\" title=\"新人？老人？\"></a>新人？老人？</h3><blockquote>\n<p>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！</p>\n</blockquote>\n<p>以往每年都会参加 <em>pycon china</em> 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Fabric</strong> 测试网络调试了链码，对 <strong>Fabric</strong> 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 <strong>Fabric</strong> 的源码，有空会开发一个应用。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》20%</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"下次不点辣了\"><a href=\"#下次不点辣了\" class=\"headerlink\" title=\"下次不点辣了\"></a>下次不点辣了</h3><p>周六和同学吃了个火锅，锅底选的鸳鸯，微辣。突然发现我们都下意识地把菜加到了番茄的那边。<br>”如今感觉微辣都受不了了“，我感慨道，同学点头表示同意。当初刚从成都来到深圳的时候是不会考虑<br>鸳鸯锅的，至少中辣起步，也算是入乡随俗了。</p>\n<h3 id=\"新人？老人？\"><a href=\"#新人？老人？\" class=\"headerlink\" title=\"新人？老人？\"></a>新人？老人？</h3><blockquote>\n<p>hello 各位 我是邢立涛 目前在做go，做过 pycon 2019 pycon 2021 第七届开源年会志愿者 分别负责拍照摄影和主持很高兴认识大家！</p>\n</blockquote>\n<p>以往每年都会参加 <em>pycon china</em> 的活动，2019年在成都是10月举办的，2021年是11月，今年是12月中旬。不出意外今年还是负责深圳会场的直播摄像。成都那年还是很拘谨的，刚毕业的自己总是不知道怎么融入其中，后来发现社区中不乏奇葩，特立独行的比比皆是，只不过是再多一个而已。</p>\n<h3 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h3><p><strong>Fabric</strong> 测试网络调试了链码，对 <strong>Fabric</strong> 的业务流程熟悉多了，包括从发起一个 proposal 到 install 链码，再到 approval,invoke,deploy an application。下周阅读 <strong>Fabric</strong> 的源码，有空会开发一个应用。</p>\n<h3 id=\"读书\"><a href=\"#读书\" class=\"headerlink\" title=\"读书\"></a>读书</h3><p>《区块链原理、设计与应用》20%</p>\n"},{"title":"202302W1 重拾的生活","author":"Ginta","date":"2023-02-05T14:37:37.000Z","_content":"最近朋友圈被 **Damus** 和 [apitable](https://github.com/apitable/apitable) 刷爆了。**apitable** 是个不错的开源项目，不过方向不是很感兴趣就没有跟进了。本着好奇的原则注册了一个 **Damus** 账号，目前上边的广告泛滥，绝对的去中心化没有任何的审查也是需要一些靠谱的方案保障，比如智能合约，发帖需要消耗gas费用，但是这样会极大打击社区活跃度。看了下 **nostr** 的思想，对其未来的自制能力还是很有信心的\n![20230205225653](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230205225653.png)\n我们的信息是公布在所有 **Relay** 的，活跃在各个社区的 **名人** 总是有共通的那一波，然后就像 **POS** 协议那样由 **名人** 来筛选黑名单，当然这只是目前的一个想法，可能还不完善。\n\n### 恢复的运动\n过年的那段时间运动量急剧下降，生物钟也是惨不忍睹，每天4-5点睡觉，下午1点起床。用了将近一周的时间恢复正常了，前两天还是很晚才睡，最后决定用跑步挣扎一下看看效果，终于可以在1点之前睡觉了，虽然也不怎么早。周末也是保持了每天至少1W步的运动量，会去欢乐港湾听唱歌，然后从后瑞地铁站一直走回小区。\n\n### 其他\n再度学习了 **solidity**，以及 **nostr** 协议，还有打算自己实现一个 **Relay**。博客周报本来是单独开了一个 **Tag**，总感觉有点怪异，点过去还挺麻烦的，索性就不拆出去了，和其他博文放一起吧～\n","source":"_posts/202302W1.md","raw":"---\ntitle: 202302W1 重拾的生活\nauthor: Ginta\ndate: 2023-02-05 22:37:37\ntags:\n    - 周报\ncategories: 生活\n---\n最近朋友圈被 **Damus** 和 [apitable](https://github.com/apitable/apitable) 刷爆了。**apitable** 是个不错的开源项目，不过方向不是很感兴趣就没有跟进了。本着好奇的原则注册了一个 **Damus** 账号，目前上边的广告泛滥，绝对的去中心化没有任何的审查也是需要一些靠谱的方案保障，比如智能合约，发帖需要消耗gas费用，但是这样会极大打击社区活跃度。看了下 **nostr** 的思想，对其未来的自制能力还是很有信心的\n![20230205225653](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230205225653.png)\n我们的信息是公布在所有 **Relay** 的，活跃在各个社区的 **名人** 总是有共通的那一波，然后就像 **POS** 协议那样由 **名人** 来筛选黑名单，当然这只是目前的一个想法，可能还不完善。\n\n### 恢复的运动\n过年的那段时间运动量急剧下降，生物钟也是惨不忍睹，每天4-5点睡觉，下午1点起床。用了将近一周的时间恢复正常了，前两天还是很晚才睡，最后决定用跑步挣扎一下看看效果，终于可以在1点之前睡觉了，虽然也不怎么早。周末也是保持了每天至少1W步的运动量，会去欢乐港湾听唱歌，然后从后瑞地铁站一直走回小区。\n\n### 其他\n再度学习了 **solidity**，以及 **nostr** 协议，还有打算自己实现一个 **Relay**。博客周报本来是单独开了一个 **Tag**，总感觉有点怪异，点过去还挺麻烦的，索性就不拆出去了，和其他博文放一起吧～\n","slug":"202302W1","published":1,"updated":"2023-02-05T15:10:27.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldsh0ley001b6zscdtvu2020","content":"<p>最近朋友圈被 <strong>Damus</strong> 和 <a href=\"https://github.com/apitable/apitable\">apitable</a> 刷爆了。<strong>apitable</strong> 是个不错的开源项目，不过方向不是很感兴趣就没有跟进了。本着好奇的原则注册了一个 <strong>Damus</strong> 账号，目前上边的广告泛滥，绝对的去中心化没有任何的审查也是需要一些靠谱的方案保障，比如智能合约，发帖需要消耗gas费用，但是这样会极大打击社区活跃度。看了下 <strong>nostr</strong> 的思想，对其未来的自制能力还是很有信心的<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230205225653.png\" alt=\"20230205225653\"><br>我们的信息是公布在所有 <strong>Relay</strong> 的，活跃在各个社区的 <strong>名人</strong> 总是有共通的那一波，然后就像 <strong>POS</strong> 协议那样由 <strong>名人</strong> 来筛选黑名单，当然这只是目前的一个想法，可能还不完善。</p>\n<h3 id=\"恢复的运动\"><a href=\"#恢复的运动\" class=\"headerlink\" title=\"恢复的运动\"></a>恢复的运动</h3><p>过年的那段时间运动量急剧下降，生物钟也是惨不忍睹，每天4-5点睡觉，下午1点起床。用了将近一周的时间恢复正常了，前两天还是很晚才睡，最后决定用跑步挣扎一下看看效果，终于可以在1点之前睡觉了，虽然也不怎么早。周末也是保持了每天至少1W步的运动量，会去欢乐港湾听唱歌，然后从后瑞地铁站一直走回小区。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>再度学习了 <strong>solidity</strong>，以及 <strong>nostr</strong> 协议，还有打算自己实现一个 <strong>Relay</strong>。博客周报本来是单独开了一个 <strong>Tag</strong>，总感觉有点怪异，点过去还挺麻烦的，索性就不拆出去了，和其他博文放一起吧～</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>最近朋友圈被 <strong>Damus</strong> 和 <a href=\"https://github.com/apitable/apitable\">apitable</a> 刷爆了。<strong>apitable</strong> 是个不错的开源项目，不过方向不是很感兴趣就没有跟进了。本着好奇的原则注册了一个 <strong>Damus</strong> 账号，目前上边的广告泛滥，绝对的去中心化没有任何的审查也是需要一些靠谱的方案保障，比如智能合约，发帖需要消耗gas费用，但是这样会极大打击社区活跃度。看了下 <strong>nostr</strong> 的思想，对其未来的自制能力还是很有信心的<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230205225653.png\" alt=\"20230205225653\"><br>我们的信息是公布在所有 <strong>Relay</strong> 的，活跃在各个社区的 <strong>名人</strong> 总是有共通的那一波，然后就像 <strong>POS</strong> 协议那样由 <strong>名人</strong> 来筛选黑名单，当然这只是目前的一个想法，可能还不完善。</p>\n<h3 id=\"恢复的运动\"><a href=\"#恢复的运动\" class=\"headerlink\" title=\"恢复的运动\"></a>恢复的运动</h3><p>过年的那段时间运动量急剧下降，生物钟也是惨不忍睹，每天4-5点睡觉，下午1点起床。用了将近一周的时间恢复正常了，前两天还是很晚才睡，最后决定用跑步挣扎一下看看效果，终于可以在1点之前睡觉了，虽然也不怎么早。周末也是保持了每天至少1W步的运动量，会去欢乐港湾听唱歌，然后从后瑞地铁站一直走回小区。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>再度学习了 <strong>solidity</strong>，以及 <strong>nostr</strong> 协议，还有打算自己实现一个 <strong>Relay</strong>。博客周报本来是单独开了一个 <strong>Tag</strong>，总感觉有点怪异，点过去还挺麻烦的，索性就不拆出去了，和其他博文放一起吧～</p>\n"},{"title":"去听欢乐港湾的弹唱","date":"2023-01-09T15:09:29.000Z","_content":"下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。\n至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。\n\n春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 *Grey Li* 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。\n\n周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。\n\n## 技术\n看了一下 *k8s* 的 *ingress*，服务暴漏这部分还一直停留在 *nodeport* 阶段，*ingress-nginx* 确实优雅，虽然也支持 *istio* 实现，公司里也是这么做的，但 *istio* 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 *nginx* + *docker-compose* 也是足够了。\n\n## 书\n《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。\n\n","source":"_posts/202301W1.md","raw":"---\ntitle: 去听欢乐港湾的弹唱\ndate: 2023-01-09 23:09:29\ntags:\n    - 周报\ncategories: 生活\n---\n下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。\n至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。\n\n春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 *Grey Li* 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。\n\n周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。\n\n## 技术\n看了一下 *k8s* 的 *ingress*，服务暴漏这部分还一直停留在 *nodeport* 阶段，*ingress-nginx* 确实优雅，虽然也支持 *istio* 实现，公司里也是这么做的，但 *istio* 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 *nginx* + *docker-compose* 也是足够了。\n\n## 书\n《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。\n\n","slug":"202301W1","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0ley001e6zsc010ef522","comments":1,"layout":"post","photos":[],"link":"","content":"<p>下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。<br>至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。</p>\n<p>春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 <em>Grey Li</em> 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。</p>\n<p>周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>看了一下 <em>k8s</em> 的 <em>ingress</em>，服务暴漏这部分还一直停留在 <em>nodeport</em> 阶段，<em>ingress-nginx</em> 确实优雅，虽然也支持 <em>istio</em> 实现，公司里也是这么做的，但 <em>istio</em> 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 <em>nginx</em> + <em>docker-compose</em> 也是足够了。</p>\n<h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>下周结束就快过年了，和家里说了今年在深圳过年，第一次在外地过年是两年前，也是在深圳，大部分人来深圳都只是为了赚钱，这边的外来人占比相当大，所以一到过年会发现这座城市很空，特别是除夕会有种一个人拥有整个城市的感觉。<br>至于为什么在深圳过年，是因为毕业之后就一直在工作，节奏很快，每隔一段时间就想留出几天什么都不做，出去户外，或者关掉电子设备一直躺着。</p>\n<p>春节假期有两周左右，是想做一些平时没时间去做的事情，比如看看周围有没有地方钓鱼，前几天看到 <em>Grey Li</em> 的年终总结，有提到十多年前的吉他，后来就基本没弹了，有遗憾的也不止我一个，还是可以继续学习的。</p>\n<p>周末晚上去欢乐港湾吃了麦当劳，那边每周末都有人唱歌，曲子是随机的，也可以点歌，中间休息的时候去找他们聊了一会，我说平时最喜欢听小刚的《青花》，但是歌单上只看到了《黄昏》，能不能唱《青花》呢，“你是哪一年的？”，弹唱的小哥问到，我说25，不过周传雄的歌不是很多人都听过吗，他笑着说现在听的人少了，最终还是请他唱了《黄昏》。比起近几年火爆抖音的《红昭愿》、《叹》去考古十多年前的歌是有点奢侈了。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>看了一下 <em>k8s</em> 的 <em>ingress</em>，服务暴漏这部分还一直停留在 <em>nodeport</em> 阶段，<em>ingress-nginx</em> 确实优雅，虽然也支持 <em>istio</em> 实现，公司里也是这么做的，但 <em>istio</em> 的部署和熟悉成本会高很多，一般的中小型项目也用不上。其实中小型项目直接 <em>nginx</em> + <em>docker-compose</em> 也是足够了。</p>\n<h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《How to》30%， 这本书的作者用各种不切实际的问题去请教专业人士，比如飞机怎么停到潜艇上，如何过河（用上亿个热水壶把河水蒸干，坐汽车加速完成抛物线运动，把河水冻成冰），还挺有意思的，推荐阅读。</p>\n"},{"title":"开始听跑步电台","date":"2022-11-29T14:12:25.000Z","author":"Ginta","_content":"周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。\n\n### 听了一周播客\n从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言......听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。\n\n### Github新发现\n之前一直没注意到 **Github** 的 **Explore** 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 *Hyperledger* 组织的仓库，挺实用的功能。\n\n### 其他有趣的发现\n[xlog](https://github.com/Crossbell-Box/xlog)是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：\n1. You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.\n2. Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.\n\n行尸走肉完结了\n很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。\n\nTed英语演讲\n免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。\n\nHyperledger视频\n他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。\n\n鬼泣背后的剧情\n在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。\n说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。\n","source":"_posts/202211W4.md","raw":"---\ntitle: 开始听跑步电台\ndate: 2022-11-29 22:12:25\nauthor: Ginta\ntags:\n    - 周报\ncategories: 生活\n---\n周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。\n\n### 听了一周播客\n从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言......听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。\n\n### Github新发现\n之前一直没注意到 **Github** 的 **Explore** 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 *Hyperledger* 组织的仓库，挺实用的功能。\n\n### 其他有趣的发现\n[xlog](https://github.com/Crossbell-Box/xlog)是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：\n1. You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.\n2. Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.\n\n行尸走肉完结了\n很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。\n\nTed英语演讲\n免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。\n\nHyperledger视频\n他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。\n\n鬼泣背后的剧情\n在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。\n说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。\n","slug":"202211W4","published":1,"updated":"2023-02-19T07:36:00.141Z","_id":"cldsh0ley001h6zsc7zzkdavb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。</p>\n<h3 id=\"听了一周播客\"><a href=\"#听了一周播客\" class=\"headerlink\" title=\"听了一周播客\"></a>听了一周播客</h3><p>从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言……听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。</p>\n<h3 id=\"Github新发现\"><a href=\"#Github新发现\" class=\"headerlink\" title=\"Github新发现\"></a>Github新发现</h3><p>之前一直没注意到 <strong>Github</strong> 的 <strong>Explore</strong> 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 <em>Hyperledger</em> 组织的仓库，挺实用的功能。</p>\n<h3 id=\"其他有趣的发现\"><a href=\"#其他有趣的发现\" class=\"headerlink\" title=\"其他有趣的发现\"></a>其他有趣的发现</h3><p><a href=\"https://github.com/Crossbell-Box/xlog\">xlog</a>是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：</p>\n<ol>\n<li>You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.</li>\n<li>Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.</li>\n</ol>\n<p>行尸走肉完结了<br>很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。</p>\n<p>Ted英语演讲<br>免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。</p>\n<p>Hyperledger视频<br>他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。</p>\n<p>鬼泣背后的剧情<br>在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。<br>说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>周二晚上跑步的时候收到社区的电话说经过风险地区，后续几天不能去公司上班。虽说不让去公司上班，倒也没有强制把整个楼封掉，或者不让下楼扔垃圾，只是避免和太多人接触吧。在家的几天也挺规律的，每晚都下楼跑步，12点就睡觉。</p>\n<h3 id=\"听了一周播客\"><a href=\"#听了一周播客\" class=\"headerlink\" title=\"听了一周播客\"></a>听了一周播客</h3><p>从周二开始又想跑步了，之前也提到自国庆以来基本是没有跑了，以往跑步手机直接放家里，只带个手环下楼用于买水和记录跑步的里程和心率等，跑完就上楼了，现在每天会把手机打开播客听一期开源相关的内容，实在没什么可听的就选择一些生活相关的播客，比如设计，旅游，语言……听了一周的体验是相当不错的，平时自己也会关注自己感兴趣的博客。相比之下播客有几个好处：1. 是听的而不是看了，因为跑步的时候只能听而不能拿着手机看博客，除去安全问题眼睛是受不了的。2. 互动，播客的目的就是大家交流想法，比如开发软件可能他觉得有更好的工具或者包，而博客只靠表达效果是远远没有这么好的，比如主持人中间的开玩笑啊，其他人的语气这些从文字中是体会不到的。3. 博客相比线下的Meeting Up灵活很多，在线即可，疫情原因很多线下活动举办起来没那么方便，可能一年也没几场，博客只需开个channel就可以了。4. 其实很多主播也不一定有博客，或者有些主题自己写没什么意思，而在播客里可以了解到更多样的主播。</p>\n<h3 id=\"Github新发现\"><a href=\"#Github新发现\" class=\"headerlink\" title=\"Github新发现\"></a>Github新发现</h3><p>之前一直没注意到 <strong>Github</strong> 的 <strong>Explore</strong> 功能，它是通过你关注的项目去推荐可能感兴趣的同类项目，类似抖音的视频推荐，比如最近比较关注区块链相关的项目，它就会推荐 <em>Hyperledger</em> 组织的仓库，挺实用的功能。</p>\n<h3 id=\"其他有趣的发现\"><a href=\"#其他有趣的发现\" class=\"headerlink\" title=\"其他有趣的发现\"></a>其他有趣的发现</h3><p><a href=\"https://github.com/Crossbell-Box/xlog\">xlog</a>是一个dapp博客，它的数据都在链上，评论也已经有了，支持用户自定义功能：</p>\n<ol>\n<li>You can follow, comment, like, and mint your blog and posts, all on the blockchain of course.</li>\n<li>Domain name, navigation bar, custom styles, all as you wish, and stored on the blockchain.</li>\n</ol>\n<p>行尸走肉完结了<br>很多年前追过的一部美剧，也是唯一看过的一部丧尸相关电视剧，前两天在B站看到说它大结局了，从高中到毕业三年，不过真的剧情太长了，看看以后会不会想起来追完它。</p>\n<p>Ted英语演讲<br>免费的英语学习app，有讲解视频和中英对应，还有长按翻译，目前使用很好。</p>\n<p>Hyperledger视频<br>他们每周都会更新一些区块链相关应用的视频，这周看了一下在慈善基金会的应用。</p>\n<p>鬼泣背后的剧情<br>在B站上看到一位Up主分析了鬼泣5背后的剧情，对鬼泣有了新的认识，比如为什么最后总需要V补刀，因为梦魇是无法杀人的。<br>说起来鬼泣还是小学时候在电视上一个游戏频道看到的，打斗感和过场动画震撼到了当时只会玩红警和4399的我，后来去网吧也是会打开玩一下的，也是从那个时候开始粉丁叔的，桀骜不逊的性格，表面上玩世不恭又异常可靠，最喜欢的游戏角色，没有之一了吧。</p>\n"},{"title":"除夕的深圳","date":"2023-01-22T10:33:12.000Z","_content":"\n小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。\n\n### 除夕\n提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。\n后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。\n晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。\n\n### 看书\n沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。\n\n### 其他\n初一的欢乐港湾人比想象中的多。\n![20230122191202](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png)\n![20230122191342](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png)\n","source":"_posts/202301W3.md","raw":"---\ntitle: 除夕的深圳\ndate: 2023-01-22 18:33:12\ntags:\n    - 周报\ncategories: 生活\n---\n\n小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。\n\n### 除夕\n提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。\n后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。\n晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。\n\n### 看书\n沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。\n\n### 其他\n初一的欢乐港湾人比想象中的多。\n![20230122191202](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png)\n![20230122191342](https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png)\n","slug":"202301W3","published":1,"updated":"2023-02-19T07:36:00.141Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cleb2vr0w00005j5e1eg0gri3","content":"<p>小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。</p>\n<h3 id=\"除夕\"><a href=\"#除夕\" class=\"headerlink\" title=\"除夕\"></a>除夕</h3><p>提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。<br>后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。<br>晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。</p>\n<h3 id=\"看书\"><a href=\"#看书\" class=\"headerlink\" title=\"看书\"></a>看书</h3><p>沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>初一的欢乐港湾人比想象中的多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png\" alt=\"20230122191202\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png\" alt=\"20230122191342\"></p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>小区附近的店铺都关门回家过年了，使得本就比较偏僻的街道显得格外冷清，连平时后瑞地铁站周边密集的小吃摊也仅剩了三两个在维持着最后的烟火味。</p>\n<h3 id=\"除夕\"><a href=\"#除夕\" class=\"headerlink\" title=\"除夕\"></a>除夕</h3><p>提前放假的几天在家疯狂玩游戏，玩到作息昼夜颠倒，每天凌晨4-5点睡觉，11点之后起床，基本没怎么下楼。直到除夕那天中午应邀去同事家吃午饭，本来约好的吃完早饭就过去的，结果刷了一下B站睡着了，要不是老爸的一个视频电话打过来可能就一直睡到中午了。同事家里做了蛮多的菜，期间她们问我做的如何，我笑了笑，打趣道比昨晚吃的泡面好多了。<br>后来去荷兰小镇转了转，看到有卖乌龟的，想起了之前养的没有活过一个季度的乌龟，同事说可以再买一只，有比较便宜的品种，最终还是没买，家里那只之前生病的时候我觉得症状比较轻微，而且乌龟的生命力比较顽强，就没有带着去看兽医，直到最后结果无法挽回，那段时间极度消沉，不专业的喂养是在亵渎生命，就决定暂时不养宠物了。<br>晚点的时候感谢了同事的招待，坐地铁去深圳湾转了转，坐到了另一个站，又低估了深圳湾的长度，绕了很久都没有走到经常出站的那个地铁口，错过了落日。</p>\n<h3 id=\"看书\"><a href=\"#看书\" class=\"headerlink\" title=\"看书\"></a>看书</h3><p>沉迷游戏也没怎么看书，过年的前三天刷一下曹春辉大大写的《Go语言高级编程》。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>初一的欢乐港湾人比想象中的多。<br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191202.png\" alt=\"20230122191202\"><br><img src=\"https://cdn.jsdelivr.net/gh/mar-heaven/image-repo@main/blogs/pictures/20230122191342.png\" alt=\"20230122191342\"></p>\n"},{"title":"202301W3 头文字D","author":"Ginta","date":"2023-02-19T13:21:31.000Z","_content":"小区楼下有几个小朋友在下象棋，仿佛看到了20年前的自己，那时候小区也是有几位一起玩的朋友，如今也都各奔东西了，只有一个还保持联系。\n好久没有和表哥联系了，周末抽了一个多小时闲聊，他说北京疫情比起几个月前好多了，说我一个人在深圳没什么意思，要不要在北京工作，或者天津，可能是过年那几天家里有和他提了一下。我说政治中心太过严肃了，闲散惯了融入不了那边的生活，天津还相对靠谱点，不过还是惦记着成都。\n\n### 换了一台电脑\n终于忍受不了编译一个小工程也要半分钟了，找老妈朋友买了台 *M1 PRO* 的，本来是选的 *M2* ，阿姨说刚好她店里下架了一台14寸的，配置比我选的会好不少，如果不介意电池损耗可以一试。考虑到电脑大部分时间通电，所以电池容量下降一点没关系，但是性能的提升还是能降低不少血压的，事实也是如此，内存和芯片的提升节省了一半以上的编译时间。\n\n### 头文字D\n这周把《头文字D》动漫前3部刷完了，还顺便把周董拍的真人版也刷了一遍，最近几天脑子里全是 **AE86**。相比之下还是动漫人物刻画得更鲜明，无论是主角还是配角，尤其是文太总是表现得漫不经心，却能给人一种“你爹还是你爹”的感觉，比如给 *86* 换了怪物一样的引擎，还有秋名山碾压拓海的车技。\n\n### 小说\n好久没看的《大秦帝国》又续上了。\n","source":"_posts/202302W3.md","raw":"---\ntitle: 202301W3 头文字D\nauthor: Ginta\ndate: 2023-02-19 21:21:31\ntags:\n    - 周报\ncategories: 生活\n---\n小区楼下有几个小朋友在下象棋，仿佛看到了20年前的自己，那时候小区也是有几位一起玩的朋友，如今也都各奔东西了，只有一个还保持联系。\n好久没有和表哥联系了，周末抽了一个多小时闲聊，他说北京疫情比起几个月前好多了，说我一个人在深圳没什么意思，要不要在北京工作，或者天津，可能是过年那几天家里有和他提了一下。我说政治中心太过严肃了，闲散惯了融入不了那边的生活，天津还相对靠谱点，不过还是惦记着成都。\n\n### 换了一台电脑\n终于忍受不了编译一个小工程也要半分钟了，找老妈朋友买了台 *M1 PRO* 的，本来是选的 *M2* ，阿姨说刚好她店里下架了一台14寸的，配置比我选的会好不少，如果不介意电池损耗可以一试。考虑到电脑大部分时间通电，所以电池容量下降一点没关系，但是性能的提升还是能降低不少血压的，事实也是如此，内存和芯片的提升节省了一半以上的编译时间。\n\n### 头文字D\n这周把《头文字D》动漫前3部刷完了，还顺便把周董拍的真人版也刷了一遍，最近几天脑子里全是 **AE86**。相比之下还是动漫人物刻画得更鲜明，无论是主角还是配角，尤其是文太总是表现得漫不经心，却能给人一种“你爹还是你爹”的感觉，比如给 *86* 换了怪物一样的引擎，还有秋名山碾压拓海的车技。\n\n### 小说\n好久没看的《大秦帝国》又续上了。\n","slug":"202302W3","published":1,"updated":"2023-02-25T13:46:29.043Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf59cq3700000n5e0gc7c5u1","content":"<p>小区楼下有几个小朋友在下象棋，仿佛看到了20年前的自己，那时候小区也是有几位一起玩的朋友，如今也都各奔东西了，只有一个还保持联系。<br>好久没有和表哥联系了，周末抽了一个多小时闲聊，他说北京疫情比起几个月前好多了，说我一个人在深圳没什么意思，要不要在北京工作，或者天津，可能是过年那几天家里有和他提了一下。我说政治中心太过严肃了，闲散惯了融入不了那边的生活，天津还相对靠谱点，不过还是惦记着成都。</p>\n<h3 id=\"换了一台电脑\"><a href=\"#换了一台电脑\" class=\"headerlink\" title=\"换了一台电脑\"></a>换了一台电脑</h3><p>终于忍受不了编译一个小工程也要半分钟了，找老妈朋友买了台 <em>M1 PRO</em> 的，本来是选的 <em>M2</em> ，阿姨说刚好她店里下架了一台14寸的，配置比我选的会好不少，如果不介意电池损耗可以一试。考虑到电脑大部分时间通电，所以电池容量下降一点没关系，但是性能的提升还是能降低不少血压的，事实也是如此，内存和芯片的提升节省了一半以上的编译时间。</p>\n<h3 id=\"头文字D\"><a href=\"#头文字D\" class=\"headerlink\" title=\"头文字D\"></a>头文字D</h3><p>这周把《头文字D》动漫前3部刷完了，还顺便把周董拍的真人版也刷了一遍，最近几天脑子里全是 <strong>AE86</strong>。相比之下还是动漫人物刻画得更鲜明，无论是主角还是配角，尤其是文太总是表现得漫不经心，却能给人一种“你爹还是你爹”的感觉，比如给 <em>86</em> 换了怪物一样的引擎，还有秋名山碾压拓海的车技。</p>\n<h3 id=\"小说\"><a href=\"#小说\" class=\"headerlink\" title=\"小说\"></a>小说</h3><p>好久没看的《大秦帝国》又续上了。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>小区楼下有几个小朋友在下象棋，仿佛看到了20年前的自己，那时候小区也是有几位一起玩的朋友，如今也都各奔东西了，只有一个还保持联系。<br>好久没有和表哥联系了，周末抽了一个多小时闲聊，他说北京疫情比起几个月前好多了，说我一个人在深圳没什么意思，要不要在北京工作，或者天津，可能是过年那几天家里有和他提了一下。我说政治中心太过严肃了，闲散惯了融入不了那边的生活，天津还相对靠谱点，不过还是惦记着成都。</p>\n<h3 id=\"换了一台电脑\"><a href=\"#换了一台电脑\" class=\"headerlink\" title=\"换了一台电脑\"></a>换了一台电脑</h3><p>终于忍受不了编译一个小工程也要半分钟了，找老妈朋友买了台 <em>M1 PRO</em> 的，本来是选的 <em>M2</em> ，阿姨说刚好她店里下架了一台14寸的，配置比我选的会好不少，如果不介意电池损耗可以一试。考虑到电脑大部分时间通电，所以电池容量下降一点没关系，但是性能的提升还是能降低不少血压的，事实也是如此，内存和芯片的提升节省了一半以上的编译时间。</p>\n<h3 id=\"头文字D\"><a href=\"#头文字D\" class=\"headerlink\" title=\"头文字D\"></a>头文字D</h3><p>这周把《头文字D》动漫前3部刷完了，还顺便把周董拍的真人版也刷了一遍，最近几天脑子里全是 <strong>AE86</strong>。相比之下还是动漫人物刻画得更鲜明，无论是主角还是配角，尤其是文太总是表现得漫不经心，却能给人一种“你爹还是你爹”的感觉，比如给 <em>86</em> 换了怪物一样的引擎，还有秋名山碾压拓海的车技。</p>\n<h3 id=\"小说\"><a href=\"#小说\" class=\"headerlink\" title=\"小说\"></a>小说</h3><p>好久没看的《大秦帝国》又续上了。</p>\n"},{"title":"202301W4 Hello eBPF","author":"Ginta","date":"2023-02-25T13:44:46.000Z","_content":"From this report, i just start writing in English as much as possible.\nI had a short but insightful conversation with a fellow open-source enthusiast over the phone. As mentioned in my year-end review, I felt that my involvement in open-source projects had decreased in 2022 compared to 2021 (partly due to maintaining my company's open-source projects). This year, I plan to sacrifice some of my social time to invest my energy in more active open-source projects, and try to shift discussions about PRs and issues from WeChat to email for better asynchronicity.\n\n### 6km\nOn Wednesday, I listened to an episode of GGTalk podcast and decided to run 2km more than my usual 4km, but stopped because I had to work the next day. I hope to achieve the goal of running a half-marathon distance at one time this year.\n\n### reading\n《大秦帝国》 have read 80% percent.\n\n### just talk\nIt has been a month since I last communicated with my friend.Although we live very close, we rarely talk to each other.We talked some topics about military and tourism.","source":"_posts/202302W4.md","raw":"---\ntitle: 202301W4 Hello eBPF\nauthor: Ginta\ndate: 2023-02-25 21:44:46\ntags:\n    - 周报\ncategories: 生活\n---\nFrom this report, i just start writing in English as much as possible.\nI had a short but insightful conversation with a fellow open-source enthusiast over the phone. As mentioned in my year-end review, I felt that my involvement in open-source projects had decreased in 2022 compared to 2021 (partly due to maintaining my company's open-source projects). This year, I plan to sacrifice some of my social time to invest my energy in more active open-source projects, and try to shift discussions about PRs and issues from WeChat to email for better asynchronicity.\n\n### 6km\nOn Wednesday, I listened to an episode of GGTalk podcast and decided to run 2km more than my usual 4km, but stopped because I had to work the next day. I hope to achieve the goal of running a half-marathon distance at one time this year.\n\n### reading\n《大秦帝国》 have read 80% percent.\n\n### just talk\nIt has been a month since I last communicated with my friend.Although we live very close, we rarely talk to each other.We talked some topics about military and tourism.","slug":"202302W4","published":1,"updated":"2023-02-26T12:56:48.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf59cq3d00010n5eekly7zan","content":"<p>From this report, i just start writing in English as much as possible.<br>I had a short but insightful conversation with a fellow open-source enthusiast over the phone. As mentioned in my year-end review, I felt that my involvement in open-source projects had decreased in 2022 compared to 2021 (partly due to maintaining my company’s open-source projects). This year, I plan to sacrifice some of my social time to invest my energy in more active open-source projects, and try to shift discussions about PRs and issues from WeChat to email for better asynchronicity.</p>\n<h3 id=\"6km\"><a href=\"#6km\" class=\"headerlink\" title=\"6km\"></a>6km</h3><p>On Wednesday, I listened to an episode of GGTalk podcast and decided to run 2km more than my usual 4km, but stopped because I had to work the next day. I hope to achieve the goal of running a half-marathon distance at one time this year.</p>\n<h3 id=\"reading\"><a href=\"#reading\" class=\"headerlink\" title=\"reading\"></a>reading</h3><p>《大秦帝国》 have read 80% percent.</p>\n<h3 id=\"just-talk\"><a href=\"#just-talk\" class=\"headerlink\" title=\"just talk\"></a>just talk</h3><p>It has been a month since I last communicated with my friend.Although we live very close, we rarely talk to each other.We talked some topics about military and tourism.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>From this report, i just start writing in English as much as possible.<br>I had a short but insightful conversation with a fellow open-source enthusiast over the phone. As mentioned in my year-end review, I felt that my involvement in open-source projects had decreased in 2022 compared to 2021 (partly due to maintaining my company’s open-source projects). This year, I plan to sacrifice some of my social time to invest my energy in more active open-source projects, and try to shift discussions about PRs and issues from WeChat to email for better asynchronicity.</p>\n<h3 id=\"6km\"><a href=\"#6km\" class=\"headerlink\" title=\"6km\"></a>6km</h3><p>On Wednesday, I listened to an episode of GGTalk podcast and decided to run 2km more than my usual 4km, but stopped because I had to work the next day. I hope to achieve the goal of running a half-marathon distance at one time this year.</p>\n<h3 id=\"reading\"><a href=\"#reading\" class=\"headerlink\" title=\"reading\"></a>reading</h3><p>《大秦帝国》 have read 80% percent.</p>\n<h3 id=\"just-talk\"><a href=\"#just-talk\" class=\"headerlink\" title=\"just talk\"></a>just talk</h3><p>It has been a month since I last communicated with my friend.Although we live very close, we rarely talk to each other.We talked some topics about military and tourism.</p>\n"},{"title":"202303W2 ski and tennis","author":"Ginta","date":"2023-03-12T10:00:00.000Z","_content":"I went skiing with friend on Saturday, now i can control the speed easily.The last time we went skiing in Guangzhou was in 2021.\nAfter skiing, we had barbecue. After a night's rest, we went to play tennis with friends the next day.\n\nThis week i spent some time learning about Golang's concurrency features.By the way, I learned about the nft implementation of blockchain.\n\nReading book 《坏蛋是怎样炼成的》，it has pass 15 years since i read it first time.Once i feel be lack of power, i will reread this novel.\n\n","source":"_posts/202303W2.md","raw":"---\ntitle: 202303W2 ski and tennis\nauthor: Ginta\ndate: 2023-03-12 18:00:00\ntags:\n    - 周报\ncategories: 生活\n---\nI went skiing with friend on Saturday, now i can control the speed easily.The last time we went skiing in Guangzhou was in 2021.\nAfter skiing, we had barbecue. After a night's rest, we went to play tennis with friends the next day.\n\nThis week i spent some time learning about Golang's concurrency features.By the way, I learned about the nft implementation of blockchain.\n\nReading book 《坏蛋是怎样炼成的》，it has pass 15 years since i read it first time.Once i feel be lack of power, i will reread this novel.\n\n","slug":"202303W2","published":1,"updated":"2023-03-12T10:22:16.274Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf59cq3f00030n5ea5ra49il","content":"<p>I went skiing with friend on Saturday, now i can control the speed easily.The last time we went skiing in Guangzhou was in 2021.<br>After skiing, we had barbecue. After a night’s rest, we went to play tennis with friends the next day.</p>\n<p>This week i spent some time learning about Golang’s concurrency features.By the way, I learned about the nft implementation of blockchain.</p>\n<p>Reading book 《坏蛋是怎样炼成的》，it has pass 15 years since i read it first time.Once i feel be lack of power, i will reread this novel.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>I went skiing with friend on Saturday, now i can control the speed easily.The last time we went skiing in Guangzhou was in 2021.<br>After skiing, we had barbecue. After a night’s rest, we went to play tennis with friends the next day.</p>\n<p>This week i spent some time learning about Golang’s concurrency features.By the way, I learned about the nft implementation of blockchain.</p>\n<p>Reading book 《坏蛋是怎样炼成的》，it has pass 15 years since i read it first time.Once i feel be lack of power, i will reread this novel.</p>\n"},{"title":"202303W3 GPT-4 and an interesting meeting","date":"2023-03-18T02:06:09.000Z","_content":"In the past week,GPT-4 has gone viral on the internet, and every one around me is disscussing topics related to it.As an old movie \"The Matrix\" shows, AI will become increasingly powerful,i believe it will eventually take over all aspects of our lives.\n\nI took part in  an interesting meeting on Friday night,and it was my first time participating in a meeting in English.Although my English level is average,my forign friend could still understand what i was trying to say.\n\nWhen it comes to speaking English, most people worry that they can's express themselves correctly due to their poor English.However,the foreigners can still understand what they say means even if they speak poorly. \n\nRecently, i have been trying to use Github actions to automate my project workflow.When the code is pushed to the develop branch,it will automatically build the image and deploy the service on EC2.In the future, i still need to address issues related to service load balancing and discovery.\n\nI took the time to migrate the project from `sudo nohup ...` to k3s.Previously, i had to kill the process manually every time i updated, and there were several minutes where the service could not be provided externally.","source":"_posts/202303W3.md","raw":"---\ntitle: 202303W3 GPT-4 and an interesting meeting\ndate: 2023-03-18 10:06:09\ntags:\n    - 周报\ncategories: 生活\n---\nIn the past week,GPT-4 has gone viral on the internet, and every one around me is disscussing topics related to it.As an old movie \"The Matrix\" shows, AI will become increasingly powerful,i believe it will eventually take over all aspects of our lives.\n\nI took part in  an interesting meeting on Friday night,and it was my first time participating in a meeting in English.Although my English level is average,my forign friend could still understand what i was trying to say.\n\nWhen it comes to speaking English, most people worry that they can's express themselves correctly due to their poor English.However,the foreigners can still understand what they say means even if they speak poorly. \n\nRecently, i have been trying to use Github actions to automate my project workflow.When the code is pushed to the develop branch,it will automatically build the image and deploy the service on EC2.In the future, i still need to address issues related to service load balancing and discovery.\n\nI took the time to migrate the project from `sudo nohup ...` to k3s.Previously, i had to kill the process manually every time i updated, and there were several minutes where the service could not be provided externally.","slug":"202303W3","published":1,"updated":"2023-03-19T12:01:09.064Z","_id":"clfdd246u00007i5ebasi343j","comments":1,"layout":"post","photos":[],"link":"","content":"<p>In the past week,GPT-4 has gone viral on the internet, and every one around me is disscussing topics related to it.As an old movie “The Matrix” shows, AI will become increasingly powerful,i believe it will eventually take over all aspects of our lives.</p>\n<p>I took part in  an interesting meeting on Friday night,and it was my first time participating in a meeting in English.Although my English level is average,my forign friend could still understand what i was trying to say.</p>\n<p>When it comes to speaking English, most people worry that they can’s express themselves correctly due to their poor English.However,the foreigners can still understand what they say means even if they speak poorly. </p>\n<p>Recently, i have been trying to use Github actions to automate my project workflow.When the code is pushed to the develop branch,it will automatically build the image and deploy the service on EC2.In the future, i still need to address issues related to service load balancing and discovery.</p>\n<p>I took the time to migrate the project from <code>sudo nohup ...</code> to k3s.Previously, i had to kill the process manually every time i updated, and there were several minutes where the service could not be provided externally.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>In the past week,GPT-4 has gone viral on the internet, and every one around me is disscussing topics related to it.As an old movie “The Matrix” shows, AI will become increasingly powerful,i believe it will eventually take over all aspects of our lives.</p>\n<p>I took part in  an interesting meeting on Friday night,and it was my first time participating in a meeting in English.Although my English level is average,my forign friend could still understand what i was trying to say.</p>\n<p>When it comes to speaking English, most people worry that they can’s express themselves correctly due to their poor English.However,the foreigners can still understand what they say means even if they speak poorly. </p>\n<p>Recently, i have been trying to use Github actions to automate my project workflow.When the code is pushed to the develop branch,it will automatically build the image and deploy the service on EC2.In the future, i still need to address issues related to service load balancing and discovery.</p>\n<p>I took the time to migrate the project from <code>sudo nohup ...</code> to k3s.Previously, i had to kill the process manually every time i updated, and there were several minutes where the service could not be provided externally.</p>\n"},{"title":"2021年总结","date":"2022-01-01T04:35:47.000Z","author":"Ginta","img":"https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg","top":false,"hide":false,"cover":false,"coverImg":"https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg","toc":false,"mathjax":false,"summary":null,"_content":"\n本来是打算在年末的最后一天总结一下的，结果跨年玩到了3点多才回后瑞，那就元旦的上午抽点时间回顾2021年的经历，顺便规划一下2022年。\n\n按理来说总结应该是简单的，不过多写点其实也挺好的，很久之后再看回过头再看自己写的东西其实挺有意思的。\n\n2021年的春节是在朋友家过的，在过年的前一个月疫情突然又严重了，老妈说太原那边看样子回不去了，票可以退掉。想到从来没有一个人在外地过年，还是有点新鲜的，所以后来虽然确定可以回去了，也果断选择留在深圳过年。\n\n那天上午在家玩了几局游戏，下午就出门了，目的地没有想好，先去宝安图书馆转了一下，本以为十分冷清的大厅竟坐满了人，大部分是准备考试的，考研、考证、可能考公也不一定。在书架上挑了本讲宇宙天体的书看了两个小时，不得不说有插画的书，特别是这种讲太空星体的更能让人耐心看下去。\n四点多到了深圳湾公园，海边也有不少人的，也不奇怪，毕竟图书馆都能有那么多人。有不少人在拍照,找了自认为风景还可以的角度拍了几张，选了一张贴上。![深圳湾公园](https://img-blog.csdnimg.cn/710bbf5d98db45a2a41a47dd69b84d55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n七点回去吃年夜饭，朋友准备的还是很不错的，菜式比较丰富，名字叫不上来，十分好吃。期间聊了一下工作，还有以前的经历，每个人都有自己的过去，以前一直认为朋友身在一个互联网大厂，在深圳定居已经让不少人羡慕了，但北京的几年辛酸加上个人的性格，就不在 *Tencent* 想必也差不到哪去。朋友说很多年前他也曾沉迷游戏，为了充钱过年也没有回家，家里还一度以为他在好好读书。那天聊了很久，年夜饭就这么结束了。过年的两个星期把《无心法师》追完了。\n\n三月和同事去玩了恐怖密室，《鬼打墙》。之前是没有玩过恐怖主题密室的，表面平静，实际感觉还是有点吓人的，有个女生主动 *solo* 最后一关，我们还是佩服她的勇气，后来又去了个恐怖主题的，但都没有第一家那种感觉了。\n\n六月组织了梅林-塘朗山穿越，一行七人，都是入门级玩家，有四位竟然只带了一瓶水就来爬山了，只能说想法比较年经，不过能让他们体会到了躺平是多么美好的一件事，后来这种强度的运动他们再也不参加了。还有一位行进比较慢就到终点等我们了。同事体力相当好，我被丢到了后面，后来带着我的所有补给和唯一的通信工具上了山顶，以至于我后来没有体力走下去了，也联系不上同事，还遇到了分叉口，被迫下山了。下山后找了家小商店，八宝粥火腿什么的各种吃，顺便加了根老冰棍,然后给家里打电话说没钱结账了，家里多转了100块打车回家，用电脑上的微信联系到了同事。“你太能折腾了，自己都这样还叫同事，下次一个人就好了，自己丢了不要紧，别把其他人捎带了。”依稀记得后来老妈是说么说的。再后来就把阳台山，梧桐山也爬完了，之后考虑挑战更高难度的山。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ab829a6c6e7b4ba396584dc4bef9c32f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n七月份入门了围棋，围棋以前总觉得很高深，不好上手。其实围棋对新人来说还是很友好的，成为国手就是另一回事了。\n\n十一月底换了工作，转了 *go* 的开发。比较感谢 *leader* 一年多的关照，还有公司的其他同事也比较好沟通，离职一个多月了有时做梦还能梦到公司的猫。\n\n\n十二月初捡起了闲置几个月的吉他，自买回来就没弹过几次，不过整个十二月还是连续下来了。\n\n\n读书清单如下：\n- 《幻夜》30%\n- 《程序员修炼之道》40%\n- 《我曾走在崩溃的边缘》100%\n- 《明朝那些事儿》100%\n- 《活着》100%\n- 《读者》、《特别关注》若干\n\n2021年总体来说相对2020年还是丰富了很多，2020年的周末基本都是在家里宅的。*Pycon China* 的*Meeting up* 也结识了不少新朋友，听了他们不同人生经历感触还是挺深的。读书的话这么一看似乎是有点少了，大部分都是杂志，技术方面对 *k8s* 架构了解了一下，也不再只局限于架构。小说只完成了两本，其实小说应该至少15+的。\n### 退掉好多微信群\n年度的某个周末，我做了一个重大决定：退掉大部分群，简化社交。\n截止到2021年末微信加了很多很多的群，大部分都是同事群。因为都是和工作无关，所以离职后也没有退，还有一些在其他场合加入的。\n也许是自己无法做到让内心足够的平静，查看多个群的内容每天占据了相当可观的时间，虽然确实有一些内容比较有用，但这样的状态也不是自己所理想的。\n有考虑过退掉这么多群带来的弊端，比如技术领域的滞后，以及社交能力的下滑。然而最后还是这么做了。\n一直以来理想的状态是每周可以静心读一到两本小说，或者半月通读一本技术书籍；每天弹半个小时到一个小时吉他，然后做一定量的运动。\n如果每隔几分钟就想看一下群消息，担心错过什么重要信息，那我可能一直达不到理想的状态了。\n基于以上考虑，目前还是选择放弃一部分社交，多出来的时间调节一下自己，哪怕只是在躺着什么也不做，什么也不想。\n\n### 2022年\n读书前置清单：\n- 《幻夜》（一周）\n- 《重构》（一个月）\n- 《放学后》（一周）\n- 《大秦帝国》（三个月）\n- 《why we sleep》（两个月）\n先规划半年的吧，读书量按周末时间来估的\n\n技术\n- SRE - Google 运维解密\n- 深入了解 Proxyless Service Mesh 相关技术\n- 一周两道算法练习\n- 读gin源码\n- 深度学习mysql\n\n开源\n- 参与到kratos\n- rqalpha\n\n户外运动（玩）\n- 排牙山\n- 广州蹦极\n- 七娘山\n\n音乐\n- 学习乐理\n\n健身\n目前每天晚上是固定2组简单的运动：每组40次哑铃（单手1.75KG），80个仰卧起坐以及30个俯卧撑。\n二月结束的时候希望达到每组50次哑铃（单手2.5KG），100个仰卧起坐以及40个俯卧撑。目前先这么定，哑铃的目标感觉有点高了，先挂着吧。\n### 尝试\n尝试做一些自己从来没做过的方向，年前听了[100天计划，你可以完成什么？](https://uxcoffee.com/episode/74)播客，觉得很有意思，几位主播都用100天尝试自己从未涉及的领域，100天后的效果还是挺好的。能把一件自己觉得有意思的事连续100天不间断做下来，第二个100天就容易很多了。从来没有期望自己做什么惊天动地的大事，只是不想每天过着重复的生活，很多冲动的决定，只是希望生活可以丰富一点。\n\n## end\n最近看到一句很不错的话:\n>>>一个人最好的状态莫过于,眼里写满了故事,脸上却不见风霜。\n","source":"_posts/1024.md","raw":"---\ntitle: 2021年总结\ndate: 2022-01-01 12:35:47\nauthor: Ginta\nimg: https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg\ntop: false\nhide: false\ncover: false\ncoverImg: https://img.ginta.top/src%3Dhttp___gss0.baidu.com_-Po3dSag_xI4khGko9WTAnF6hhy_zhidao_pic_item_f7246b600c338744d0431315570fd9f9d62aa0d0.jpg%26refer%3Dhttp___gss0.baidu.jpeg\ntoc: false\nmathjax: false\nsummary:\ntags:\n    - 年终总结\ncategories: 生活\n---\n\n本来是打算在年末的最后一天总结一下的，结果跨年玩到了3点多才回后瑞，那就元旦的上午抽点时间回顾2021年的经历，顺便规划一下2022年。\n\n按理来说总结应该是简单的，不过多写点其实也挺好的，很久之后再看回过头再看自己写的东西其实挺有意思的。\n\n2021年的春节是在朋友家过的，在过年的前一个月疫情突然又严重了，老妈说太原那边看样子回不去了，票可以退掉。想到从来没有一个人在外地过年，还是有点新鲜的，所以后来虽然确定可以回去了，也果断选择留在深圳过年。\n\n那天上午在家玩了几局游戏，下午就出门了，目的地没有想好，先去宝安图书馆转了一下，本以为十分冷清的大厅竟坐满了人，大部分是准备考试的，考研、考证、可能考公也不一定。在书架上挑了本讲宇宙天体的书看了两个小时，不得不说有插画的书，特别是这种讲太空星体的更能让人耐心看下去。\n四点多到了深圳湾公园，海边也有不少人的，也不奇怪，毕竟图书馆都能有那么多人。有不少人在拍照,找了自认为风景还可以的角度拍了几张，选了一张贴上。![深圳湾公园](https://img-blog.csdnimg.cn/710bbf5d98db45a2a41a47dd69b84d55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n七点回去吃年夜饭，朋友准备的还是很不错的，菜式比较丰富，名字叫不上来，十分好吃。期间聊了一下工作，还有以前的经历，每个人都有自己的过去，以前一直认为朋友身在一个互联网大厂，在深圳定居已经让不少人羡慕了，但北京的几年辛酸加上个人的性格，就不在 *Tencent* 想必也差不到哪去。朋友说很多年前他也曾沉迷游戏，为了充钱过年也没有回家，家里还一度以为他在好好读书。那天聊了很久，年夜饭就这么结束了。过年的两个星期把《无心法师》追完了。\n\n三月和同事去玩了恐怖密室，《鬼打墙》。之前是没有玩过恐怖主题密室的，表面平静，实际感觉还是有点吓人的，有个女生主动 *solo* 最后一关，我们还是佩服她的勇气，后来又去了个恐怖主题的，但都没有第一家那种感觉了。\n\n六月组织了梅林-塘朗山穿越，一行七人，都是入门级玩家，有四位竟然只带了一瓶水就来爬山了，只能说想法比较年经，不过能让他们体会到了躺平是多么美好的一件事，后来这种强度的运动他们再也不参加了。还有一位行进比较慢就到终点等我们了。同事体力相当好，我被丢到了后面，后来带着我的所有补给和唯一的通信工具上了山顶，以至于我后来没有体力走下去了，也联系不上同事，还遇到了分叉口，被迫下山了。下山后找了家小商店，八宝粥火腿什么的各种吃，顺便加了根老冰棍,然后给家里打电话说没钱结账了，家里多转了100块打车回家，用电脑上的微信联系到了同事。“你太能折腾了，自己都这样还叫同事，下次一个人就好了，自己丢了不要紧，别把其他人捎带了。”依稀记得后来老妈是说么说的。再后来就把阳台山，梧桐山也爬完了，之后考虑挑战更高难度的山。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ab829a6c6e7b4ba396584dc4bef9c32f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center)\n\n七月份入门了围棋，围棋以前总觉得很高深，不好上手。其实围棋对新人来说还是很友好的，成为国手就是另一回事了。\n\n十一月底换了工作，转了 *go* 的开发。比较感谢 *leader* 一年多的关照，还有公司的其他同事也比较好沟通，离职一个多月了有时做梦还能梦到公司的猫。\n\n\n十二月初捡起了闲置几个月的吉他，自买回来就没弹过几次，不过整个十二月还是连续下来了。\n\n\n读书清单如下：\n- 《幻夜》30%\n- 《程序员修炼之道》40%\n- 《我曾走在崩溃的边缘》100%\n- 《明朝那些事儿》100%\n- 《活着》100%\n- 《读者》、《特别关注》若干\n\n2021年总体来说相对2020年还是丰富了很多，2020年的周末基本都是在家里宅的。*Pycon China* 的*Meeting up* 也结识了不少新朋友，听了他们不同人生经历感触还是挺深的。读书的话这么一看似乎是有点少了，大部分都是杂志，技术方面对 *k8s* 架构了解了一下，也不再只局限于架构。小说只完成了两本，其实小说应该至少15+的。\n### 退掉好多微信群\n年度的某个周末，我做了一个重大决定：退掉大部分群，简化社交。\n截止到2021年末微信加了很多很多的群，大部分都是同事群。因为都是和工作无关，所以离职后也没有退，还有一些在其他场合加入的。\n也许是自己无法做到让内心足够的平静，查看多个群的内容每天占据了相当可观的时间，虽然确实有一些内容比较有用，但这样的状态也不是自己所理想的。\n有考虑过退掉这么多群带来的弊端，比如技术领域的滞后，以及社交能力的下滑。然而最后还是这么做了。\n一直以来理想的状态是每周可以静心读一到两本小说，或者半月通读一本技术书籍；每天弹半个小时到一个小时吉他，然后做一定量的运动。\n如果每隔几分钟就想看一下群消息，担心错过什么重要信息，那我可能一直达不到理想的状态了。\n基于以上考虑，目前还是选择放弃一部分社交，多出来的时间调节一下自己，哪怕只是在躺着什么也不做，什么也不想。\n\n### 2022年\n读书前置清单：\n- 《幻夜》（一周）\n- 《重构》（一个月）\n- 《放学后》（一周）\n- 《大秦帝国》（三个月）\n- 《why we sleep》（两个月）\n先规划半年的吧，读书量按周末时间来估的\n\n技术\n- SRE - Google 运维解密\n- 深入了解 Proxyless Service Mesh 相关技术\n- 一周两道算法练习\n- 读gin源码\n- 深度学习mysql\n\n开源\n- 参与到kratos\n- rqalpha\n\n户外运动（玩）\n- 排牙山\n- 广州蹦极\n- 七娘山\n\n音乐\n- 学习乐理\n\n健身\n目前每天晚上是固定2组简单的运动：每组40次哑铃（单手1.75KG），80个仰卧起坐以及30个俯卧撑。\n二月结束的时候希望达到每组50次哑铃（单手2.5KG），100个仰卧起坐以及40个俯卧撑。目前先这么定，哑铃的目标感觉有点高了，先挂着吧。\n### 尝试\n尝试做一些自己从来没做过的方向，年前听了[100天计划，你可以完成什么？](https://uxcoffee.com/episode/74)播客，觉得很有意思，几位主播都用100天尝试自己从未涉及的领域，100天后的效果还是挺好的。能把一件自己觉得有意思的事连续100天不间断做下来，第二个100天就容易很多了。从来没有期望自己做什么惊天动地的大事，只是不想每天过着重复的生活，很多冲动的决定，只是希望生活可以丰富一点。\n\n## end\n最近看到一句很不错的话:\n>>>一个人最好的状态莫过于,眼里写满了故事,脸上却不见风霜。\n","slug":"1024","published":1,"updated":"2023-02-19T07:36:00.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfmnsxu40000v85e16vo5u8x","content":"<p>本来是打算在年末的最后一天总结一下的，结果跨年玩到了3点多才回后瑞，那就元旦的上午抽点时间回顾2021年的经历，顺便规划一下2022年。</p>\n<p>按理来说总结应该是简单的，不过多写点其实也挺好的，很久之后再看回过头再看自己写的东西其实挺有意思的。</p>\n<p>2021年的春节是在朋友家过的，在过年的前一个月疫情突然又严重了，老妈说太原那边看样子回不去了，票可以退掉。想到从来没有一个人在外地过年，还是有点新鲜的，所以后来虽然确定可以回去了，也果断选择留在深圳过年。</p>\n<p>那天上午在家玩了几局游戏，下午就出门了，目的地没有想好，先去宝安图书馆转了一下，本以为十分冷清的大厅竟坐满了人，大部分是准备考试的，考研、考证、可能考公也不一定。在书架上挑了本讲宇宙天体的书看了两个小时，不得不说有插画的书，特别是这种讲太空星体的更能让人耐心看下去。<br>四点多到了深圳湾公园，海边也有不少人的，也不奇怪，毕竟图书馆都能有那么多人。有不少人在拍照,找了自认为风景还可以的角度拍了几张，选了一张贴上。<img src=\"https://img-blog.csdnimg.cn/710bbf5d98db45a2a41a47dd69b84d55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"深圳湾公园\"><br>七点回去吃年夜饭，朋友准备的还是很不错的，菜式比较丰富，名字叫不上来，十分好吃。期间聊了一下工作，还有以前的经历，每个人都有自己的过去，以前一直认为朋友身在一个互联网大厂，在深圳定居已经让不少人羡慕了，但北京的几年辛酸加上个人的性格，就不在 <em>Tencent</em> 想必也差不到哪去。朋友说很多年前他也曾沉迷游戏，为了充钱过年也没有回家，家里还一度以为他在好好读书。那天聊了很久，年夜饭就这么结束了。过年的两个星期把《无心法师》追完了。</p>\n<p>三月和同事去玩了恐怖密室，《鬼打墙》。之前是没有玩过恐怖主题密室的，表面平静，实际感觉还是有点吓人的，有个女生主动 <em>solo</em> 最后一关，我们还是佩服她的勇气，后来又去了个恐怖主题的，但都没有第一家那种感觉了。</p>\n<p>六月组织了梅林-塘朗山穿越，一行七人，都是入门级玩家，有四位竟然只带了一瓶水就来爬山了，只能说想法比较年经，不过能让他们体会到了躺平是多么美好的一件事，后来这种强度的运动他们再也不参加了。还有一位行进比较慢就到终点等我们了。同事体力相当好，我被丢到了后面，后来带着我的所有补给和唯一的通信工具上了山顶，以至于我后来没有体力走下去了，也联系不上同事，还遇到了分叉口，被迫下山了。下山后找了家小商店，八宝粥火腿什么的各种吃，顺便加了根老冰棍,然后给家里打电话说没钱结账了，家里多转了100块打车回家，用电脑上的微信联系到了同事。“你太能折腾了，自己都这样还叫同事，下次一个人就好了，自己丢了不要紧，别把其他人捎带了。”依稀记得后来老妈是说么说的。再后来就把阳台山，梧桐山也爬完了，之后考虑挑战更高难度的山。<br><img src=\"https://img-blog.csdnimg.cn/ab829a6c6e7b4ba396584dc4bef9c32f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>七月份入门了围棋，围棋以前总觉得很高深，不好上手。其实围棋对新人来说还是很友好的，成为国手就是另一回事了。</p>\n<p>十一月底换了工作，转了 <em>go</em> 的开发。比较感谢 <em>leader</em> 一年多的关照，还有公司的其他同事也比较好沟通，离职一个多月了有时做梦还能梦到公司的猫。</p>\n<p>十二月初捡起了闲置几个月的吉他，自买回来就没弹过几次，不过整个十二月还是连续下来了。</p>\n<p>读书清单如下：</p>\n<ul>\n<li>《幻夜》30%</li>\n<li>《程序员修炼之道》40%</li>\n<li>《我曾走在崩溃的边缘》100%</li>\n<li>《明朝那些事儿》100%</li>\n<li>《活着》100%</li>\n<li>《读者》、《特别关注》若干</li>\n</ul>\n<p>2021年总体来说相对2020年还是丰富了很多，2020年的周末基本都是在家里宅的。<em>Pycon China</em> 的<em>Meeting up</em> 也结识了不少新朋友，听了他们不同人生经历感触还是挺深的。读书的话这么一看似乎是有点少了，大部分都是杂志，技术方面对 <em>k8s</em> 架构了解了一下，也不再只局限于架构。小说只完成了两本，其实小说应该至少15+的。</p>\n<h3><span id=\"退掉好多微信群\">退掉好多微信群</span></h3><p>年度的某个周末，我做了一个重大决定：退掉大部分群，简化社交。<br>截止到2021年末微信加了很多很多的群，大部分都是同事群。因为都是和工作无关，所以离职后也没有退，还有一些在其他场合加入的。<br>也许是自己无法做到让内心足够的平静，查看多个群的内容每天占据了相当可观的时间，虽然确实有一些内容比较有用，但这样的状态也不是自己所理想的。<br>有考虑过退掉这么多群带来的弊端，比如技术领域的滞后，以及社交能力的下滑。然而最后还是这么做了。<br>一直以来理想的状态是每周可以静心读一到两本小说，或者半月通读一本技术书籍；每天弹半个小时到一个小时吉他，然后做一定量的运动。<br>如果每隔几分钟就想看一下群消息，担心错过什么重要信息，那我可能一直达不到理想的状态了。<br>基于以上考虑，目前还是选择放弃一部分社交，多出来的时间调节一下自己，哪怕只是在躺着什么也不做，什么也不想。</p>\n<h3><span id=\"2022年\">2022年</span></h3><p>读书前置清单：</p>\n<ul>\n<li>《幻夜》（一周）</li>\n<li>《重构》（一个月）</li>\n<li>《放学后》（一周）</li>\n<li>《大秦帝国》（三个月）</li>\n<li>《why we sleep》（两个月）<br>先规划半年的吧，读书量按周末时间来估的</li>\n</ul>\n<p>技术</p>\n<ul>\n<li>SRE - Google 运维解密</li>\n<li>深入了解 Proxyless Service Mesh 相关技术</li>\n<li>一周两道算法练习</li>\n<li>读gin源码</li>\n<li>深度学习mysql</li>\n</ul>\n<p>开源</p>\n<ul>\n<li>参与到kratos</li>\n<li>rqalpha</li>\n</ul>\n<p>户外运动（玩）</p>\n<ul>\n<li>排牙山</li>\n<li>广州蹦极</li>\n<li>七娘山</li>\n</ul>\n<p>音乐</p>\n<ul>\n<li>学习乐理</li>\n</ul>\n<p>健身<br>目前每天晚上是固定2组简单的运动：每组40次哑铃（单手1.75KG），80个仰卧起坐以及30个俯卧撑。<br>二月结束的时候希望达到每组50次哑铃（单手2.5KG），100个仰卧起坐以及40个俯卧撑。目前先这么定，哑铃的目标感觉有点高了，先挂着吧。</p>\n<h3><span id=\"尝试\">尝试</span></h3><p>尝试做一些自己从来没做过的方向，年前听了<a href=\"https://uxcoffee.com/episode/74\">100天计划，你可以完成什么？</a>播客，觉得很有意思，几位主播都用100天尝试自己从未涉及的领域，100天后的效果还是挺好的。能把一件自己觉得有意思的事连续100天不间断做下来，第二个100天就容易很多了。从来没有期望自己做什么惊天动地的大事，只是不想每天过着重复的生活，很多冲动的决定，只是希望生活可以丰富一点。</p>\n<h2><span id=\"end\">end</span></h2><p>最近看到一句很不错的话:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>一个人最好的状态莫过于,眼里写满了故事,脸上却不见风霜。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>本来是打算在年末的最后一天总结一下的，结果跨年玩到了3点多才回后瑞，那就元旦的上午抽点时间回顾2021年的经历，顺便规划一下2022年。</p>\n<p>按理来说总结应该是简单的，不过多写点其实也挺好的，很久之后再看回过头再看自己写的东西其实挺有意思的。</p>\n<p>2021年的春节是在朋友家过的，在过年的前一个月疫情突然又严重了，老妈说太原那边看样子回不去了，票可以退掉。想到从来没有一个人在外地过年，还是有点新鲜的，所以后来虽然确定可以回去了，也果断选择留在深圳过年。</p>\n<p>那天上午在家玩了几局游戏，下午就出门了，目的地没有想好，先去宝安图书馆转了一下，本以为十分冷清的大厅竟坐满了人，大部分是准备考试的，考研、考证、可能考公也不一定。在书架上挑了本讲宇宙天体的书看了两个小时，不得不说有插画的书，特别是这种讲太空星体的更能让人耐心看下去。<br>四点多到了深圳湾公园，海边也有不少人的，也不奇怪，毕竟图书馆都能有那么多人。有不少人在拍照,找了自认为风景还可以的角度拍了几张，选了一张贴上。<img src=\"https://img-blog.csdnimg.cn/710bbf5d98db45a2a41a47dd69b84d55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"深圳湾公园\"><br>七点回去吃年夜饭，朋友准备的还是很不错的，菜式比较丰富，名字叫不上来，十分好吃。期间聊了一下工作，还有以前的经历，每个人都有自己的过去，以前一直认为朋友身在一个互联网大厂，在深圳定居已经让不少人羡慕了，但北京的几年辛酸加上个人的性格，就不在 <em>Tencent</em> 想必也差不到哪去。朋友说很多年前他也曾沉迷游戏，为了充钱过年也没有回家，家里还一度以为他在好好读书。那天聊了很久，年夜饭就这么结束了。过年的两个星期把《无心法师》追完了。</p>\n<p>三月和同事去玩了恐怖密室，《鬼打墙》。之前是没有玩过恐怖主题密室的，表面平静，实际感觉还是有点吓人的，有个女生主动 <em>solo</em> 最后一关，我们还是佩服她的勇气，后来又去了个恐怖主题的，但都没有第一家那种感觉了。</p>\n<p>六月组织了梅林-塘朗山穿越，一行七人，都是入门级玩家，有四位竟然只带了一瓶水就来爬山了，只能说想法比较年经，不过能让他们体会到了躺平是多么美好的一件事，后来这种强度的运动他们再也不参加了。还有一位行进比较慢就到终点等我们了。同事体力相当好，我被丢到了后面，后来带着我的所有补给和唯一的通信工具上了山顶，以至于我后来没有体力走下去了，也联系不上同事，还遇到了分叉口，被迫下山了。下山后找了家小商店，八宝粥火腿什么的各种吃，顺便加了根老冰棍,然后给家里打电话说没钱结账了，家里多转了100块打车回家，用电脑上的微信联系到了同事。“你太能折腾了，自己都这样还叫同事，下次一个人就好了，自己丢了不要紧，别把其他人捎带了。”依稀记得后来老妈是说么说的。再后来就把阳台山，梧桐山也爬完了，之后考虑挑战更高难度的山。<br><img src=\"https://img-blog.csdnimg.cn/ab829a6c6e7b4ba396584dc4bef9c32f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAR2ludGFfeA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>七月份入门了围棋，围棋以前总觉得很高深，不好上手。其实围棋对新人来说还是很友好的，成为国手就是另一回事了。</p>\n<p>十一月底换了工作，转了 <em>go</em> 的开发。比较感谢 <em>leader</em> 一年多的关照，还有公司的其他同事也比较好沟通，离职一个多月了有时做梦还能梦到公司的猫。</p>\n<p>十二月初捡起了闲置几个月的吉他，自买回来就没弹过几次，不过整个十二月还是连续下来了。</p>\n<p>读书清单如下：</p>\n<ul>\n<li>《幻夜》30%</li>\n<li>《程序员修炼之道》40%</li>\n<li>《我曾走在崩溃的边缘》100%</li>\n<li>《明朝那些事儿》100%</li>\n<li>《活着》100%</li>\n<li>《读者》、《特别关注》若干</li>\n</ul>\n<p>2021年总体来说相对2020年还是丰富了很多，2020年的周末基本都是在家里宅的。<em>Pycon China</em> 的<em>Meeting up</em> 也结识了不少新朋友，听了他们不同人生经历感触还是挺深的。读书的话这么一看似乎是有点少了，大部分都是杂志，技术方面对 <em>k8s</em> 架构了解了一下，也不再只局限于架构。小说只完成了两本，其实小说应该至少15+的。</p>\n<h3 id=\"退掉好多微信群\"><a href=\"#退掉好多微信群\" class=\"headerlink\" title=\"退掉好多微信群\"></a>退掉好多微信群</h3><p>年度的某个周末，我做了一个重大决定：退掉大部分群，简化社交。<br>截止到2021年末微信加了很多很多的群，大部分都是同事群。因为都是和工作无关，所以离职后也没有退，还有一些在其他场合加入的。<br>也许是自己无法做到让内心足够的平静，查看多个群的内容每天占据了相当可观的时间，虽然确实有一些内容比较有用，但这样的状态也不是自己所理想的。<br>有考虑过退掉这么多群带来的弊端，比如技术领域的滞后，以及社交能力的下滑。然而最后还是这么做了。<br>一直以来理想的状态是每周可以静心读一到两本小说，或者半月通读一本技术书籍；每天弹半个小时到一个小时吉他，然后做一定量的运动。<br>如果每隔几分钟就想看一下群消息，担心错过什么重要信息，那我可能一直达不到理想的状态了。<br>基于以上考虑，目前还是选择放弃一部分社交，多出来的时间调节一下自己，哪怕只是在躺着什么也不做，什么也不想。</p>\n<h3 id=\"2022年\"><a href=\"#2022年\" class=\"headerlink\" title=\"2022年\"></a>2022年</h3><p>读书前置清单：</p>\n<ul>\n<li>《幻夜》（一周）</li>\n<li>《重构》（一个月）</li>\n<li>《放学后》（一周）</li>\n<li>《大秦帝国》（三个月）</li>\n<li>《why we sleep》（两个月）<br>先规划半年的吧，读书量按周末时间来估的</li>\n</ul>\n<p>技术</p>\n<ul>\n<li>SRE - Google 运维解密</li>\n<li>深入了解 Proxyless Service Mesh 相关技术</li>\n<li>一周两道算法练习</li>\n<li>读gin源码</li>\n<li>深度学习mysql</li>\n</ul>\n<p>开源</p>\n<ul>\n<li>参与到kratos</li>\n<li>rqalpha</li>\n</ul>\n<p>户外运动（玩）</p>\n<ul>\n<li>排牙山</li>\n<li>广州蹦极</li>\n<li>七娘山</li>\n</ul>\n<p>音乐</p>\n<ul>\n<li>学习乐理</li>\n</ul>\n<p>健身<br>目前每天晚上是固定2组简单的运动：每组40次哑铃（单手1.75KG），80个仰卧起坐以及30个俯卧撑。<br>二月结束的时候希望达到每组50次哑铃（单手2.5KG），100个仰卧起坐以及40个俯卧撑。目前先这么定，哑铃的目标感觉有点高了，先挂着吧。</p>\n<h3 id=\"尝试\"><a href=\"#尝试\" class=\"headerlink\" title=\"尝试\"></a>尝试</h3><p>尝试做一些自己从来没做过的方向，年前听了<a href=\"https://uxcoffee.com/episode/74\">100天计划，你可以完成什么？</a>播客，觉得很有意思，几位主播都用100天尝试自己从未涉及的领域，100天后的效果还是挺好的。能把一件自己觉得有意思的事连续100天不间断做下来，第二个100天就容易很多了。从来没有期望自己做什么惊天动地的大事，只是不想每天过着重复的生活，很多冲动的决定，只是希望生活可以丰富一点。</p>\n<h2 id=\"end\"><a href=\"#end\" class=\"headerlink\" title=\"end\"></a>end</h2><p>最近看到一句很不错的话:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>一个人最好的状态莫过于,眼里写满了故事,脸上却不见风霜。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"title":"GMP","date":"2023-03-22T14:15:43.000Z","toc":true,"_content":"\n### Introduction\nWe all know that **Golang** has high concurrency performance, thanks to its excellent **GMP** model design. This article discusses the cleverness of the **GMP** model.\n\n### History\n#### Single process\nIn the early days of operating systems, there was only one core, and computers executed tasks in the order they were arranged, with task A executed before task B, and task B executed before task C. When task B (actually a process) was blocked, it had to wait indefinitely.\n#### Multiple processes\nImagine that we now need to write a web crawler to retrieve 100 pages, and each page takes 1 second to respond. The entire process takes more than 100 seconds (processing data, writing to a database, etc.), so multi-process/multi-threading technology was introduced. When a task is blocked by I/O, the CPU switches to execute other tasks, and then returns to execute the original task when the other tasks are completed. Compared to the initial performance, this approach greatly improves performance, and the CPU is no longer idle, achieving so-called \"concurrency,\" but not \"parallelism.\"\n#### Multiple processes on multiple cores\nWith the development of hardware technology, computers have entered the era of multiple cores, and multiple CPUs can work simultaneously. At this point, we can say that it is parallelism. However, processes consume a lot of resources, and the cost of switching processes is high:\n1. Save context: CPU registers, program counters, process status, etc.\n2. Load new context: Load new context into CPU registers and program counters.\n3. Switch memory space: The memory space between processes is independent, so when switching processes, the operating system needs to switch the memory space of the process.\n4. Switch hardware context: such as IO cache, interrupt vectors, etc.\n\nThe most common approach is to use multi-threading technology. Since all threads in the same process share the same memory space, file descriptors, and global variables of the process, when switching threads, only the context information of the thread itself needs to be switched, and the memory space and other resources of other processes do not need to be switched.\nHowever, multi-threading also brings new problems: in order to ensure data safety when multiple threads compete, mutexes and other synchronization mechanisms need to be introduced, which significantly increases the cost of mutual exclusion behavior.\n#### Goroutine\nSince thread and process scheduling are relatively resource-intensive, engineers later discovered that a thread is actually divided into kernel mode and user mode, and named this user mode thread a \"goroutine,\" meaning a lightweight thread. When encountering I/O blocking, we can implement scheduling processing in user mode ourselves, without having to trouble the lower-level operating system to switch threads to schedule. This significantly improves performance because a process occupies approximately 4 GB of virtual memory (32-bit operating system), and a thread also requires approximately 4 MB. However, a goroutine is much smaller, requiring only a few kilobytes in Go.\n\n### Binding relationship\n#### N:1\nN goroutines are bound to one thread, avoiding the hassle of thread switching, but multiple cores cannot be used to process programs.\n#### 1:1\nOne goroutine is bound to one thread, returning to the kernel to switch threads.\n#### M:N\nM goroutines are bound to N threads, which can fully utilize multiple cores to efficiently process programs, but the difficulty is to implement the binding and scheduling of goroutines and threads in user mode. Go language uses this strategy.\n\n### GMP模型\n![20230323212056](https://raw.githubusercontent.com/mar-heaven/image-repo/main/blogs/pictures/20230323212056.png)\nG：Represents goroutine\nM：System thread\nP: Scheduler\n\nEach P has its own queue for storing goroutines to be executed, and there is also a global queue. When there are no goroutines to be executed in P's own queue, it first steals some from other queues using the method mentioned above. If other queues are also empty, it will take goroutines from the global P queue. When taking G (referring to goroutine) from the global queue, it will not take many at once, otherwise, other P will come here to take them, increasing unnecessary overhead.\n\nThe GMP scheduling method is as follows:\n1. A system thread (M) that wants to execute a goroutine must first bind to P\n2. M takes G from P to execute it, and then takes the next G according to the aforementioned method\n3. If M encounters a system call (such as file read and write) while executing G, P will unbind from M, but M will remember which P it was bound to. When G and M exit the system call, they will find the P that was just bound to this M. If it cannot be found, they will find other P. If it cannot be found, the G will be marked as runnable and placed in the global queue.\n\nIn addition：\n1. If a running G1 creates a new G2, G2 will be bound to P1, where G1 was originally located.\n2. Rule: When creating G2, running G1 will wake up other P and M (assuming P2 and M2) to execute tasks in the system.\n3. If there are no Gs in the queue of P2, it will try to steal some from other places using the aforementioned method. If it still cannot find any, it will keep searching. We call this state a \"spin state.\" Although it seems a bit silly, it is still acceptable compared to the overhead of creating and destroying threads.\nIn summary, the GMP model uses lightweight goroutines to reduce resource consumption and increase concurrency, and uses a clever scheduling strategy to avoid the high overhead of thread and process switching.\n","source":"_posts/GMP.md","raw":"---\ntitle: GMP\ndate: 2023-03-22 22:15:43\ntags: goroutine\ncategories: Golang\ntoc: true\n---\n\n### Introduction\nWe all know that **Golang** has high concurrency performance, thanks to its excellent **GMP** model design. This article discusses the cleverness of the **GMP** model.\n\n### History\n#### Single process\nIn the early days of operating systems, there was only one core, and computers executed tasks in the order they were arranged, with task A executed before task B, and task B executed before task C. When task B (actually a process) was blocked, it had to wait indefinitely.\n#### Multiple processes\nImagine that we now need to write a web crawler to retrieve 100 pages, and each page takes 1 second to respond. The entire process takes more than 100 seconds (processing data, writing to a database, etc.), so multi-process/multi-threading technology was introduced. When a task is blocked by I/O, the CPU switches to execute other tasks, and then returns to execute the original task when the other tasks are completed. Compared to the initial performance, this approach greatly improves performance, and the CPU is no longer idle, achieving so-called \"concurrency,\" but not \"parallelism.\"\n#### Multiple processes on multiple cores\nWith the development of hardware technology, computers have entered the era of multiple cores, and multiple CPUs can work simultaneously. At this point, we can say that it is parallelism. However, processes consume a lot of resources, and the cost of switching processes is high:\n1. Save context: CPU registers, program counters, process status, etc.\n2. Load new context: Load new context into CPU registers and program counters.\n3. Switch memory space: The memory space between processes is independent, so when switching processes, the operating system needs to switch the memory space of the process.\n4. Switch hardware context: such as IO cache, interrupt vectors, etc.\n\nThe most common approach is to use multi-threading technology. Since all threads in the same process share the same memory space, file descriptors, and global variables of the process, when switching threads, only the context information of the thread itself needs to be switched, and the memory space and other resources of other processes do not need to be switched.\nHowever, multi-threading also brings new problems: in order to ensure data safety when multiple threads compete, mutexes and other synchronization mechanisms need to be introduced, which significantly increases the cost of mutual exclusion behavior.\n#### Goroutine\nSince thread and process scheduling are relatively resource-intensive, engineers later discovered that a thread is actually divided into kernel mode and user mode, and named this user mode thread a \"goroutine,\" meaning a lightweight thread. When encountering I/O blocking, we can implement scheduling processing in user mode ourselves, without having to trouble the lower-level operating system to switch threads to schedule. This significantly improves performance because a process occupies approximately 4 GB of virtual memory (32-bit operating system), and a thread also requires approximately 4 MB. However, a goroutine is much smaller, requiring only a few kilobytes in Go.\n\n### Binding relationship\n#### N:1\nN goroutines are bound to one thread, avoiding the hassle of thread switching, but multiple cores cannot be used to process programs.\n#### 1:1\nOne goroutine is bound to one thread, returning to the kernel to switch threads.\n#### M:N\nM goroutines are bound to N threads, which can fully utilize multiple cores to efficiently process programs, but the difficulty is to implement the binding and scheduling of goroutines and threads in user mode. Go language uses this strategy.\n\n### GMP模型\n![20230323212056](https://raw.githubusercontent.com/mar-heaven/image-repo/main/blogs/pictures/20230323212056.png)\nG：Represents goroutine\nM：System thread\nP: Scheduler\n\nEach P has its own queue for storing goroutines to be executed, and there is also a global queue. When there are no goroutines to be executed in P's own queue, it first steals some from other queues using the method mentioned above. If other queues are also empty, it will take goroutines from the global P queue. When taking G (referring to goroutine) from the global queue, it will not take many at once, otherwise, other P will come here to take them, increasing unnecessary overhead.\n\nThe GMP scheduling method is as follows:\n1. A system thread (M) that wants to execute a goroutine must first bind to P\n2. M takes G from P to execute it, and then takes the next G according to the aforementioned method\n3. If M encounters a system call (such as file read and write) while executing G, P will unbind from M, but M will remember which P it was bound to. When G and M exit the system call, they will find the P that was just bound to this M. If it cannot be found, they will find other P. If it cannot be found, the G will be marked as runnable and placed in the global queue.\n\nIn addition：\n1. If a running G1 creates a new G2, G2 will be bound to P1, where G1 was originally located.\n2. Rule: When creating G2, running G1 will wake up other P and M (assuming P2 and M2) to execute tasks in the system.\n3. If there are no Gs in the queue of P2, it will try to steal some from other places using the aforementioned method. If it still cannot find any, it will keep searching. We call this state a \"spin state.\" Although it seems a bit silly, it is still acceptable compared to the overhead of creating and destroying threads.\nIn summary, the GMP model uses lightweight goroutines to reduce resource consumption and increase concurrency, and uses a clever scheduling strategy to avoid the high overhead of thread and process switching.\n","slug":"GMP","published":1,"updated":"2023-03-27T10:19:41.247Z","_id":"clfmnsxud0002v85e2tqx068z","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><p>We all know that <strong>Golang</strong> has high concurrency performance, thanks to its excellent <strong>GMP</strong> model design. This article discusses the cleverness of the <strong>GMP</strong> model.</p>\n<h3 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h3><h4 id=\"Single-process\"><a href=\"#Single-process\" class=\"headerlink\" title=\"Single process\"></a>Single process</h4><p>In the early days of operating systems, there was only one core, and computers executed tasks in the order they were arranged, with task A executed before task B, and task B executed before task C. When task B (actually a process) was blocked, it had to wait indefinitely.</p>\n<h4 id=\"Multiple-processes\"><a href=\"#Multiple-processes\" class=\"headerlink\" title=\"Multiple processes\"></a>Multiple processes</h4><p>Imagine that we now need to write a web crawler to retrieve 100 pages, and each page takes 1 second to respond. The entire process takes more than 100 seconds (processing data, writing to a database, etc.), so multi-process&#x2F;multi-threading technology was introduced. When a task is blocked by I&#x2F;O, the CPU switches to execute other tasks, and then returns to execute the original task when the other tasks are completed. Compared to the initial performance, this approach greatly improves performance, and the CPU is no longer idle, achieving so-called “concurrency,” but not “parallelism.”</p>\n<h4 id=\"Multiple-processes-on-multiple-cores\"><a href=\"#Multiple-processes-on-multiple-cores\" class=\"headerlink\" title=\"Multiple processes on multiple cores\"></a>Multiple processes on multiple cores</h4><p>With the development of hardware technology, computers have entered the era of multiple cores, and multiple CPUs can work simultaneously. At this point, we can say that it is parallelism. However, processes consume a lot of resources, and the cost of switching processes is high:</p>\n<ol>\n<li>Save context: CPU registers, program counters, process status, etc.</li>\n<li>Load new context: Load new context into CPU registers and program counters.</li>\n<li>Switch memory space: The memory space between processes is independent, so when switching processes, the operating system needs to switch the memory space of the process.</li>\n<li>Switch hardware context: such as IO cache, interrupt vectors, etc.</li>\n</ol>\n<p>The most common approach is to use multi-threading technology. Since all threads in the same process share the same memory space, file descriptors, and global variables of the process, when switching threads, only the context information of the thread itself needs to be switched, and the memory space and other resources of other processes do not need to be switched.<br>However, multi-threading also brings new problems: in order to ensure data safety when multiple threads compete, mutexes and other synchronization mechanisms need to be introduced, which significantly increases the cost of mutual exclusion behavior.</p>\n<h4 id=\"Goroutine\"><a href=\"#Goroutine\" class=\"headerlink\" title=\"Goroutine\"></a>Goroutine</h4><p>Since thread and process scheduling are relatively resource-intensive, engineers later discovered that a thread is actually divided into kernel mode and user mode, and named this user mode thread a “goroutine,” meaning a lightweight thread. When encountering I&#x2F;O blocking, we can implement scheduling processing in user mode ourselves, without having to trouble the lower-level operating system to switch threads to schedule. This significantly improves performance because a process occupies approximately 4 GB of virtual memory (32-bit operating system), and a thread also requires approximately 4 MB. However, a goroutine is much smaller, requiring only a few kilobytes in Go.</p>\n<h3 id=\"Binding-relationship\"><a href=\"#Binding-relationship\" class=\"headerlink\" title=\"Binding relationship\"></a>Binding relationship</h3><h4 id=\"N-1\"><a href=\"#N-1\" class=\"headerlink\" title=\"N:1\"></a>N:1</h4><p>N goroutines are bound to one thread, avoiding the hassle of thread switching, but multiple cores cannot be used to process programs.</p>\n<h4 id=\"1-1\"><a href=\"#1-1\" class=\"headerlink\" title=\"1:1\"></a>1:1</h4><p>One goroutine is bound to one thread, returning to the kernel to switch threads.</p>\n<h4 id=\"M-N\"><a href=\"#M-N\" class=\"headerlink\" title=\"M:N\"></a>M:N</h4><p>M goroutines are bound to N threads, which can fully utilize multiple cores to efficiently process programs, but the difficulty is to implement the binding and scheduling of goroutines and threads in user mode. Go language uses this strategy.</p>\n<h3 id=\"GMP模型\"><a href=\"#GMP模型\" class=\"headerlink\" title=\"GMP模型\"></a>GMP模型</h3><p><img src=\"https://raw.githubusercontent.com/mar-heaven/image-repo/main/blogs/pictures/20230323212056.png\" alt=\"20230323212056\"><br>G：Represents goroutine<br>M：System thread<br>P: Scheduler</p>\n<p>Each P has its own queue for storing goroutines to be executed, and there is also a global queue. When there are no goroutines to be executed in P’s own queue, it first steals some from other queues using the method mentioned above. If other queues are also empty, it will take goroutines from the global P queue. When taking G (referring to goroutine) from the global queue, it will not take many at once, otherwise, other P will come here to take them, increasing unnecessary overhead.</p>\n<p>The GMP scheduling method is as follows:</p>\n<ol>\n<li>A system thread (M) that wants to execute a goroutine must first bind to P</li>\n<li>M takes G from P to execute it, and then takes the next G according to the aforementioned method</li>\n<li>If M encounters a system call (such as file read and write) while executing G, P will unbind from M, but M will remember which P it was bound to. When G and M exit the system call, they will find the P that was just bound to this M. If it cannot be found, they will find other P. If it cannot be found, the G will be marked as runnable and placed in the global queue.</li>\n</ol>\n<p>In addition：</p>\n<ol>\n<li>If a running G1 creates a new G2, G2 will be bound to P1, where G1 was originally located.</li>\n<li>Rule: When creating G2, running G1 will wake up other P and M (assuming P2 and M2) to execute tasks in the system.</li>\n<li>If there are no Gs in the queue of P2, it will try to steal some from other places using the aforementioned method. If it still cannot find any, it will keep searching. We call this state a “spin state.” Although it seems a bit silly, it is still acceptable compared to the overhead of creating and destroying threads.<br>In summary, the GMP model uses lightweight goroutines to reduce resource consumption and increase concurrency, and uses a clever scheduling strategy to avoid the high overhead of thread and process switching.</li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><p>We all know that <strong>Golang</strong> has high concurrency performance, thanks to its excellent <strong>GMP</strong> model design. This article discusses the cleverness of the <strong>GMP</strong> model.</p>\n<h3 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h3><h4 id=\"Single-process\"><a href=\"#Single-process\" class=\"headerlink\" title=\"Single process\"></a>Single process</h4><p>In the early days of operating systems, there was only one core, and computers executed tasks in the order they were arranged, with task A executed before task B, and task B executed before task C. When task B (actually a process) was blocked, it had to wait indefinitely.</p>\n<h4 id=\"Multiple-processes\"><a href=\"#Multiple-processes\" class=\"headerlink\" title=\"Multiple processes\"></a>Multiple processes</h4><p>Imagine that we now need to write a web crawler to retrieve 100 pages, and each page takes 1 second to respond. The entire process takes more than 100 seconds (processing data, writing to a database, etc.), so multi-process&#x2F;multi-threading technology was introduced. When a task is blocked by I&#x2F;O, the CPU switches to execute other tasks, and then returns to execute the original task when the other tasks are completed. Compared to the initial performance, this approach greatly improves performance, and the CPU is no longer idle, achieving so-called “concurrency,” but not “parallelism.”</p>\n<h4 id=\"Multiple-processes-on-multiple-cores\"><a href=\"#Multiple-processes-on-multiple-cores\" class=\"headerlink\" title=\"Multiple processes on multiple cores\"></a>Multiple processes on multiple cores</h4><p>With the development of hardware technology, computers have entered the era of multiple cores, and multiple CPUs can work simultaneously. At this point, we can say that it is parallelism. However, processes consume a lot of resources, and the cost of switching processes is high:</p>\n<ol>\n<li>Save context: CPU registers, program counters, process status, etc.</li>\n<li>Load new context: Load new context into CPU registers and program counters.</li>\n<li>Switch memory space: The memory space between processes is independent, so when switching processes, the operating system needs to switch the memory space of the process.</li>\n<li>Switch hardware context: such as IO cache, interrupt vectors, etc.</li>\n</ol>\n<p>The most common approach is to use multi-threading technology. Since all threads in the same process share the same memory space, file descriptors, and global variables of the process, when switching threads, only the context information of the thread itself needs to be switched, and the memory space and other resources of other processes do not need to be switched.<br>However, multi-threading also brings new problems: in order to ensure data safety when multiple threads compete, mutexes and other synchronization mechanisms need to be introduced, which significantly increases the cost of mutual exclusion behavior.</p>\n<h4 id=\"Goroutine\"><a href=\"#Goroutine\" class=\"headerlink\" title=\"Goroutine\"></a>Goroutine</h4><p>Since thread and process scheduling are relatively resource-intensive, engineers later discovered that a thread is actually divided into kernel mode and user mode, and named this user mode thread a “goroutine,” meaning a lightweight thread. When encountering I&#x2F;O blocking, we can implement scheduling processing in user mode ourselves, without having to trouble the lower-level operating system to switch threads to schedule. This significantly improves performance because a process occupies approximately 4 GB of virtual memory (32-bit operating system), and a thread also requires approximately 4 MB. However, a goroutine is much smaller, requiring only a few kilobytes in Go.</p>\n<h3 id=\"Binding-relationship\"><a href=\"#Binding-relationship\" class=\"headerlink\" title=\"Binding relationship\"></a>Binding relationship</h3><h4 id=\"N-1\"><a href=\"#N-1\" class=\"headerlink\" title=\"N:1\"></a>N:1</h4><p>N goroutines are bound to one thread, avoiding the hassle of thread switching, but multiple cores cannot be used to process programs.</p>\n<h4 id=\"1-1\"><a href=\"#1-1\" class=\"headerlink\" title=\"1:1\"></a>1:1</h4><p>One goroutine is bound to one thread, returning to the kernel to switch threads.</p>\n<h4 id=\"M-N\"><a href=\"#M-N\" class=\"headerlink\" title=\"M:N\"></a>M:N</h4><p>M goroutines are bound to N threads, which can fully utilize multiple cores to efficiently process programs, but the difficulty is to implement the binding and scheduling of goroutines and threads in user mode. Go language uses this strategy.</p>\n<h3 id=\"GMP模型\"><a href=\"#GMP模型\" class=\"headerlink\" title=\"GMP模型\"></a>GMP模型</h3><p><img src=\"https://raw.githubusercontent.com/mar-heaven/image-repo/main/blogs/pictures/20230323212056.png\" alt=\"20230323212056\"><br>G：Represents goroutine<br>M：System thread<br>P: Scheduler</p>\n<p>Each P has its own queue for storing goroutines to be executed, and there is also a global queue. When there are no goroutines to be executed in P’s own queue, it first steals some from other queues using the method mentioned above. If other queues are also empty, it will take goroutines from the global P queue. When taking G (referring to goroutine) from the global queue, it will not take many at once, otherwise, other P will come here to take them, increasing unnecessary overhead.</p>\n<p>The GMP scheduling method is as follows:</p>\n<ol>\n<li>A system thread (M) that wants to execute a goroutine must first bind to P</li>\n<li>M takes G from P to execute it, and then takes the next G according to the aforementioned method</li>\n<li>If M encounters a system call (such as file read and write) while executing G, P will unbind from M, but M will remember which P it was bound to. When G and M exit the system call, they will find the P that was just bound to this M. If it cannot be found, they will find other P. If it cannot be found, the G will be marked as runnable and placed in the global queue.</li>\n</ol>\n<p>In addition：</p>\n<ol>\n<li>If a running G1 creates a new G2, G2 will be bound to P1, where G1 was originally located.</li>\n<li>Rule: When creating G2, running G1 will wake up other P and M (assuming P2 and M2) to execute tasks in the system.</li>\n<li>If there are no Gs in the queue of P2, it will try to steal some from other places using the aforementioned method. If it still cannot find any, it will keep searching. We call this state a “spin state.” Although it seems a bit silly, it is still acceptable compared to the overhead of creating and destroying threads.<br>In summary, the GMP model uses lightweight goroutines to reduce resource consumption and increase concurrency, and uses a clever scheduling strategy to avoid the high overhead of thread and process switching.</li>\n</ol>\n"},{"title":"正版软件","date":"2022-11-20T14:16:36.000Z","_content":"这周把 *Goland* 和 *Pycharm* 都换成正版的了，结束了多年破解版的使用历程。虽说正版的功能也没有完全用到，不过以往用破解版的时候总是有很不顺的感觉，一方面是因为破解版往往落后好几个版本，另一方面是不稳定，要不时去更新一下。\n\n### 关于盗版\n学生时代用的大部分软件都是盗版的，那时的自己根本不懂什么版权意识，无论是办公工具还是游戏一律用破解版，还沾沾自喜觉得找资源有一手。第一次支持正版是2019年出的《全战三国》，处于对三国的狂热，毫不犹豫300多买了价位不算便宜的新版大作。自那以后就慢慢开始支持正版了。\n作为开发者也会参与一些开源项目，偶尔也会其他参与开源的朋友聊天，大部分的作者仅靠开源是不足以支持自己生活开销，如果使用者都能尽自己的所能去支持这些作品，开发者就有更大的动力去把这件事做下去。\n比较好的一个现象是有一些大公司已经这么做了，但充其量也只是很小的一部分开发者得以纯靠开源的收入来生活。\n个人来说，希望能尽自己的力去让更多的开源作者获得一些收入，即使是帮忙宣传一些优秀的项目，也挺好的。","source":"_posts/正版软件.md","raw":"---\ntitle: 正版软件\ndate: 2022-11-20 22:16:36\ntags: 随笔\ncategories: 生活\n---\n这周把 *Goland* 和 *Pycharm* 都换成正版的了，结束了多年破解版的使用历程。虽说正版的功能也没有完全用到，不过以往用破解版的时候总是有很不顺的感觉，一方面是因为破解版往往落后好几个版本，另一方面是不稳定，要不时去更新一下。\n\n### 关于盗版\n学生时代用的大部分软件都是盗版的，那时的自己根本不懂什么版权意识，无论是办公工具还是游戏一律用破解版，还沾沾自喜觉得找资源有一手。第一次支持正版是2019年出的《全战三国》，处于对三国的狂热，毫不犹豫300多买了价位不算便宜的新版大作。自那以后就慢慢开始支持正版了。\n作为开发者也会参与一些开源项目，偶尔也会其他参与开源的朋友聊天，大部分的作者仅靠开源是不足以支持自己生活开销，如果使用者都能尽自己的所能去支持这些作品，开发者就有更大的动力去把这件事做下去。\n比较好的一个现象是有一些大公司已经这么做了，但充其量也只是很小的一部分开发者得以纯靠开源的收入来生活。\n个人来说，希望能尽自己的力去让更多的开源作者获得一些收入，即使是帮忙宣传一些优秀的项目，也挺好的。","slug":"正版软件","published":1,"updated":"2023-03-19T11:52:13.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfmnsxue0003v85e45m206ku","content":"<p>这周把 <em>Goland</em> 和 <em>Pycharm</em> 都换成正版的了，结束了多年破解版的使用历程。虽说正版的功能也没有完全用到，不过以往用破解版的时候总是有很不顺的感觉，一方面是因为破解版往往落后好几个版本，另一方面是不稳定，要不时去更新一下。</p>\n<h3><span id=\"关于盗版\">关于盗版</span></h3><p>学生时代用的大部分软件都是盗版的，那时的自己根本不懂什么版权意识，无论是办公工具还是游戏一律用破解版，还沾沾自喜觉得找资源有一手。第一次支持正版是2019年出的《全战三国》，处于对三国的狂热，毫不犹豫300多买了价位不算便宜的新版大作。自那以后就慢慢开始支持正版了。<br>作为开发者也会参与一些开源项目，偶尔也会其他参与开源的朋友聊天，大部分的作者仅靠开源是不足以支持自己生活开销，如果使用者都能尽自己的所能去支持这些作品，开发者就有更大的动力去把这件事做下去。<br>比较好的一个现象是有一些大公司已经这么做了，但充其量也只是很小的一部分开发者得以纯靠开源的收入来生活。<br>个人来说，希望能尽自己的力去让更多的开源作者获得一些收入，即使是帮忙宣传一些优秀的项目，也挺好的。</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>这周把 <em>Goland</em> 和 <em>Pycharm</em> 都换成正版的了，结束了多年破解版的使用历程。虽说正版的功能也没有完全用到，不过以往用破解版的时候总是有很不顺的感觉，一方面是因为破解版往往落后好几个版本，另一方面是不稳定，要不时去更新一下。</p>\n<h3 id=\"关于盗版\"><a href=\"#关于盗版\" class=\"headerlink\" title=\"关于盗版\"></a>关于盗版</h3><p>学生时代用的大部分软件都是盗版的，那时的自己根本不懂什么版权意识，无论是办公工具还是游戏一律用破解版，还沾沾自喜觉得找资源有一手。第一次支持正版是2019年出的《全战三国》，处于对三国的狂热，毫不犹豫300多买了价位不算便宜的新版大作。自那以后就慢慢开始支持正版了。<br>作为开发者也会参与一些开源项目，偶尔也会其他参与开源的朋友聊天，大部分的作者仅靠开源是不足以支持自己生活开销，如果使用者都能尽自己的所能去支持这些作品，开发者就有更大的动力去把这件事做下去。<br>比较好的一个现象是有一些大公司已经这么做了，但充其量也只是很小的一部分开发者得以纯靠开源的收入来生活。<br>个人来说，希望能尽自己的力去让更多的开源作者获得一些收入，即使是帮忙宣传一些优秀的项目，也挺好的。</p>\n"},{"title":"Kubernetes 架构","date":"2023-03-24T14:38:16.000Z","toc":true,"_content":"\n## 前言\n作为云原生时代的当红人物，一直想精读一下 k8s 的源码，本篇文章会从其架构，源码来深入剖析 k8s 的设计思路。\n\n## K8S组件与职责\n![K8S组件](https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg)\n\n我们可以看到K8S主要是由，API server、Cloud controller manage（可选）、Controller manager、etcd、kubelet、kube-proxy、Scheduler。可以分为Control Plane组件、和Node组件两个大类，Control Plane组件一般在单独的机器上，也就是说生产环境不会把业务Pod和它们放一起，Node组件每台运行Pod的机器都要有的，一方面是维持Pod正常运行，还有就是提供K8S运行时环境。\n\n### Control Plane 组件\n- Kube-APIserver：k8S暴露出来给用户使用API的组件，其它各组件之间的交互都是要经过它的。所以考虑到高频地调用，它是可以部署多个来负载的\n\n- etcd：一个高性能的键值数据库，K8S的持久化数据都放在这里\n\n- kube-scheduler： 持续监听有没有未分配节点的Pod，并根据各种条件（节点情况、Pod配置亲和性）等给它分配一个节点\n\n- kube-controller-manager：正常来说每个控制器都是一个单独的进程，不过K8S为了降低复杂性就把它们把包成一个二进制文件并运行在一个进程中，其中比较常见的控制器有\n    - Node controller： 负责监听Node是否正常\n    - Job controller： 负责监听K8S的一次性运行的Job，并创建Pod去跑Job\n    - EndpointSlice controller：负责EndpointSlice的创建，EndpointSlice 可以理解是 Service和Endpoint之间的一个映射关系\n    - ServiceAccount controller：为新的Namespace创建默认的 ServiceAccounts\n\n### Node 组件\n上边有提到，Node组件是每个节点都会运行的\n- kubelet： 它负责确保Pod中的容器正常运行，并确保按照PodSpecs（比如ServiceAccount，Pod调试策略，标签）等条件运行的。\n- kube-proxy： 是Node中的网络代理，pod与pod间的通信要经由它，实现了k8s service 概念的部分功能\n- Container runtime： 容器器运行时就如它的名字一样，负责运行容器的。常见的容器运行时除了我们熟知的 docker还有containerd，CRI-O等。\n","source":"_posts/1025.md","raw":"---\ntitle: Kubernetes 架构\ndate: 2023-03-24 22:38:16\ntags: 云原生\ncategories: kubernetes\ntoc: true\n---\n\n## 前言\n作为云原生时代的当红人物，一直想精读一下 k8s 的源码，本篇文章会从其架构，源码来深入剖析 k8s 的设计思路。\n\n## K8S组件与职责\n![K8S组件](https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg)\n\n我们可以看到K8S主要是由，API server、Cloud controller manage（可选）、Controller manager、etcd、kubelet、kube-proxy、Scheduler。可以分为Control Plane组件、和Node组件两个大类，Control Plane组件一般在单独的机器上，也就是说生产环境不会把业务Pod和它们放一起，Node组件每台运行Pod的机器都要有的，一方面是维持Pod正常运行，还有就是提供K8S运行时环境。\n\n### Control Plane 组件\n- Kube-APIserver：k8S暴露出来给用户使用API的组件，其它各组件之间的交互都是要经过它的。所以考虑到高频地调用，它是可以部署多个来负载的\n\n- etcd：一个高性能的键值数据库，K8S的持久化数据都放在这里\n\n- kube-scheduler： 持续监听有没有未分配节点的Pod，并根据各种条件（节点情况、Pod配置亲和性）等给它分配一个节点\n\n- kube-controller-manager：正常来说每个控制器都是一个单独的进程，不过K8S为了降低复杂性就把它们把包成一个二进制文件并运行在一个进程中，其中比较常见的控制器有\n    - Node controller： 负责监听Node是否正常\n    - Job controller： 负责监听K8S的一次性运行的Job，并创建Pod去跑Job\n    - EndpointSlice controller：负责EndpointSlice的创建，EndpointSlice 可以理解是 Service和Endpoint之间的一个映射关系\n    - ServiceAccount controller：为新的Namespace创建默认的 ServiceAccounts\n\n### Node 组件\n上边有提到，Node组件是每个节点都会运行的\n- kubelet： 它负责确保Pod中的容器正常运行，并确保按照PodSpecs（比如ServiceAccount，Pod调试策略，标签）等条件运行的。\n- kube-proxy： 是Node中的网络代理，pod与pod间的通信要经由它，实现了k8s service 概念的部分功能\n- Container runtime： 容器器运行时就如它的名字一样，负责运行容器的。常见的容器运行时除了我们熟知的 docker还有containerd，CRI-O等。\n","slug":"1025","published":1,"updated":"2023-08-01T02:16:11.530Z","_id":"clfmnvhbr00002b5e7whmhmgd","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>作为云原生时代的当红人物，一直想精读一下 k8s 的源码，本篇文章会从其架构，源码来深入剖析 k8s 的设计思路。</p>\n<h2 id=\"K8S组件与职责\"><a href=\"#K8S组件与职责\" class=\"headerlink\" title=\"K8S组件与职责\"></a>K8S组件与职责</h2><p><img src=\"https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg\" alt=\"K8S组件\"></p>\n<p>我们可以看到K8S主要是由，API server、Cloud controller manage（可选）、Controller manager、etcd、kubelet、kube-proxy、Scheduler。可以分为Control Plane组件、和Node组件两个大类，Control Plane组件一般在单独的机器上，也就是说生产环境不会把业务Pod和它们放一起，Node组件每台运行Pod的机器都要有的，一方面是维持Pod正常运行，还有就是提供K8S运行时环境。</p>\n<h3 id=\"Control-Plane-组件\"><a href=\"#Control-Plane-组件\" class=\"headerlink\" title=\"Control Plane 组件\"></a>Control Plane 组件</h3><ul>\n<li><p>Kube-APIserver：k8S暴露出来给用户使用API的组件，其它各组件之间的交互都是要经过它的。所以考虑到高频地调用，它是可以部署多个来负载的</p>\n</li>\n<li><p>etcd：一个高性能的键值数据库，K8S的持久化数据都放在这里</p>\n</li>\n<li><p>kube-scheduler： 持续监听有没有未分配节点的Pod，并根据各种条件（节点情况、Pod配置亲和性）等给它分配一个节点</p>\n</li>\n<li><p>kube-controller-manager：正常来说每个控制器都是一个单独的进程，不过K8S为了降低复杂性就把它们把包成一个二进制文件并运行在一个进程中，其中比较常见的控制器有</p>\n<ul>\n<li>Node controller： 负责监听Node是否正常</li>\n<li>Job controller： 负责监听K8S的一次性运行的Job，并创建Pod去跑Job</li>\n<li>EndpointSlice controller：负责EndpointSlice的创建，EndpointSlice 可以理解是 Service和Endpoint之间的一个映射关系</li>\n<li>ServiceAccount controller：为新的Namespace创建默认的 ServiceAccounts</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Node-组件\"><a href=\"#Node-组件\" class=\"headerlink\" title=\"Node 组件\"></a>Node 组件</h3><p>上边有提到，Node组件是每个节点都会运行的</p>\n<ul>\n<li>kubelet： 它负责确保Pod中的容器正常运行，并确保按照PodSpecs（比如ServiceAccount，Pod调试策略，标签）等条件运行的。</li>\n<li>kube-proxy： 是Node中的网络代理，pod与pod间的通信要经由它，实现了k8s service 概念的部分功能</li>\n<li>Container runtime： 容器器运行时就如它的名字一样，负责运行容器的。常见的容器运行时除了我们熟知的 docker还有containerd，CRI-O等。</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>作为云原生时代的当红人物，一直想精读一下 k8s 的源码，本篇文章会从其架构，源码来深入剖析 k8s 的设计思路。</p>\n<h2 id=\"K8S组件与职责\"><a href=\"#K8S组件与职责\" class=\"headerlink\" title=\"K8S组件与职责\"></a>K8S组件与职责</h2><p><img src=\"https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg\" alt=\"K8S组件\"></p>\n<p>我们可以看到K8S主要是由，API server、Cloud controller manage（可选）、Controller manager、etcd、kubelet、kube-proxy、Scheduler。可以分为Control Plane组件、和Node组件两个大类，Control Plane组件一般在单独的机器上，也就是说生产环境不会把业务Pod和它们放一起，Node组件每台运行Pod的机器都要有的，一方面是维持Pod正常运行，还有就是提供K8S运行时环境。</p>\n<h3 id=\"Control-Plane-组件\"><a href=\"#Control-Plane-组件\" class=\"headerlink\" title=\"Control Plane 组件\"></a>Control Plane 组件</h3><ul>\n<li><p>Kube-APIserver：k8S暴露出来给用户使用API的组件，其它各组件之间的交互都是要经过它的。所以考虑到高频地调用，它是可以部署多个来负载的</p>\n</li>\n<li><p>etcd：一个高性能的键值数据库，K8S的持久化数据都放在这里</p>\n</li>\n<li><p>kube-scheduler： 持续监听有没有未分配节点的Pod，并根据各种条件（节点情况、Pod配置亲和性）等给它分配一个节点</p>\n</li>\n<li><p>kube-controller-manager：正常来说每个控制器都是一个单独的进程，不过K8S为了降低复杂性就把它们把包成一个二进制文件并运行在一个进程中，其中比较常见的控制器有</p>\n<ul>\n<li>Node controller： 负责监听Node是否正常</li>\n<li>Job controller： 负责监听K8S的一次性运行的Job，并创建Pod去跑Job</li>\n<li>EndpointSlice controller：负责EndpointSlice的创建，EndpointSlice 可以理解是 Service和Endpoint之间的一个映射关系</li>\n<li>ServiceAccount controller：为新的Namespace创建默认的 ServiceAccounts</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Node-组件\"><a href=\"#Node-组件\" class=\"headerlink\" title=\"Node 组件\"></a>Node 组件</h3><p>上边有提到，Node组件是每个节点都会运行的</p>\n<ul>\n<li>kubelet： 它负责确保Pod中的容器正常运行，并确保按照PodSpecs（比如ServiceAccount，Pod调试策略，标签）等条件运行的。</li>\n<li>kube-proxy： 是Node中的网络代理，pod与pod间的通信要经由它，实现了k8s service 概念的部分功能</li>\n<li>Container runtime： 容器器运行时就如它的名字一样，负责运行容器的。常见的容器运行时除了我们熟知的 docker还有containerd，CRI-O等。</li>\n</ul>\n"},{"title":"202303W4 go hiking","date":"2023-04-02T13:47:16.000Z","_content":"It has passed a month since I go hiking last time. I took 6 hours across the \"dong xi chong\" and then back to the beginning place with my frend on Saturday. At several monthes ago, I ran 4 kilometers every day, however, after a 6-kilometer attempt, my body couldn't adapt. And one day a person told me that i looked fat than before suddenly, although I never deliberately try to lose weight, I want to maintain a normal appearance. So I decided to resume running 5 kilometers every day as before.\n\n","source":"_posts/1026.md","raw":"---\ntitle: 202303W4 go hiking\ndate: 2023-04-02 21:47:16\ntags:\n    - 周报\ncategories: 生活\n---\nIt has passed a month since I go hiking last time. I took 6 hours across the \"dong xi chong\" and then back to the beginning place with my frend on Saturday. At several monthes ago, I ran 4 kilometers every day, however, after a 6-kilometer attempt, my body couldn't adapt. And one day a person told me that i looked fat than before suddenly, although I never deliberately try to lose weight, I want to maintain a normal appearance. So I decided to resume running 5 kilometers every day as before.\n\n","slug":"1026","published":1,"updated":"2023-04-06T07:31:27.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clivk3tb10002uv5e6x6h59lp","content":"<p>It has passed a month since I go hiking last time. I took 6 hours across the “dong xi chong” and then back to the beginning place with my frend on Saturday. At several monthes ago, I ran 4 kilometers every day, however, after a 6-kilometer attempt, my body couldn’t adapt. And one day a person told me that i looked fat than before suddenly, although I never deliberately try to lose weight, I want to maintain a normal appearance. So I decided to resume running 5 kilometers every day as before.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>It has passed a month since I go hiking last time. I took 6 hours across the “dong xi chong” and then back to the beginning place with my frend on Saturday. At several monthes ago, I ran 4 kilometers every day, however, after a 6-kilometer attempt, my body couldn’t adapt. And one day a person told me that i looked fat than before suddenly, although I never deliberately try to lose weight, I want to maintain a normal appearance. So I decided to resume running 5 kilometers every day as before.</p>\n"},{"title":"202306W1 Healthy","date":"2023-06-11T11:40:08.000Z","_content":"I got infected with the novel coronavirus at the beginning of this month. Last month, I informed my friends in the northern region that I would be returning there for a week's vacation at the end of the month, and also planned to visit them. However, due to the virus, this plan had to be postponed until the end of June.\n\n\nAs mentioned before, I have now achieved automated deployment of the project on AWS. The next step is to utilize caching to accelerate the build process. However, progress has been a bit slow recently due to some physical discomfort. I have been focusing on studying Linux system-related topics lately.","source":"_posts/1029.md","raw":"---\ntitle: 202306W1 Healthy\ndate: 2023-06-11 19:40:08\ntags:\n    - 周报\ncategories: 生活\n---\nI got infected with the novel coronavirus at the beginning of this month. Last month, I informed my friends in the northern region that I would be returning there for a week's vacation at the end of the month, and also planned to visit them. However, due to the virus, this plan had to be postponed until the end of June.\n\n\nAs mentioned before, I have now achieved automated deployment of the project on AWS. The next step is to utilize caching to accelerate the build process. However, progress has been a bit slow recently due to some physical discomfort. I have been focusing on studying Linux system-related topics lately.","slug":"1029","published":1,"updated":"2023-06-14T09:48:11.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clivk3tb60004uv5ec59q682g","content":"<p>I got infected with the novel coronavirus at the beginning of this month. Last month, I informed my friends in the northern region that I would be returning there for a week’s vacation at the end of the month, and also planned to visit them. However, due to the virus, this plan had to be postponed until the end of June.</p>\n<p>As mentioned before, I have now achieved automated deployment of the project on AWS. The next step is to utilize caching to accelerate the build process. However, progress has been a bit slow recently due to some physical discomfort. I have been focusing on studying Linux system-related topics lately.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>I got infected with the novel coronavirus at the beginning of this month. Last month, I informed my friends in the northern region that I would be returning there for a week’s vacation at the end of the month, and also planned to visit them. However, due to the virus, this plan had to be postponed until the end of June.</p>\n<p>As mentioned before, I have now achieved automated deployment of the project on AWS. The next step is to utilize caching to accelerate the build process. However, progress has been a bit slow recently due to some physical discomfort. I have been focusing on studying Linux system-related topics lately.</p>\n"},{"title":"202304W4 playing and playing","date":"2023-04-27T16:23:26.000Z","_content":"I have taken a guitar lesson for 2 weeks, from half a month ago, I started playing guitar as before. There are some interesting friends at the milk tea shop on Saturday, someone sings songs well, and someone plays musical instruments well, I'm glad to enjoy music.\n\nLabour Day is coming soon, and  my roommate asked me if there are any places there are not to crowded and fun to go to. Last year we went to a small island, but I haven't decided where to go this time yet. I was thinking of just relaxing in Beijing, but there isn't much to do there. There's a good chance we'll just stay in Guangdong province this year.\n","source":"_posts/1027.md","raw":"---\ntitle: 202304W4 playing and playing\ndate: 2023-04-28 00:23:26\ntags:\n    - 周报\ncategories: 生活\n---\nI have taken a guitar lesson for 2 weeks, from half a month ago, I started playing guitar as before. There are some interesting friends at the milk tea shop on Saturday, someone sings songs well, and someone plays musical instruments well, I'm glad to enjoy music.\n\nLabour Day is coming soon, and  my roommate asked me if there are any places there are not to crowded and fun to go to. Last year we went to a small island, but I haven't decided where to go this time yet. I was thinking of just relaxing in Beijing, but there isn't much to do there. There's a good chance we'll just stay in Guangdong province this year.\n","slug":"1027","published":1,"updated":"2023-04-27T16:46:06.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clivk3tb70005uv5e3gf197no","content":"<p>I have taken a guitar lesson for 2 weeks, from half a month ago, I started playing guitar as before. There are some interesting friends at the milk tea shop on Saturday, someone sings songs well, and someone plays musical instruments well, I’m glad to enjoy music.</p>\n<p>Labour Day is coming soon, and  my roommate asked me if there are any places there are not to crowded and fun to go to. Last year we went to a small island, but I haven’t decided where to go this time yet. I was thinking of just relaxing in Beijing, but there isn’t much to do there. There’s a good chance we’ll just stay in Guangdong province this year.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>I have taken a guitar lesson for 2 weeks, from half a month ago, I started playing guitar as before. There are some interesting friends at the milk tea shop on Saturday, someone sings songs well, and someone plays musical instruments well, I’m glad to enjoy music.</p>\n<p>Labour Day is coming soon, and  my roommate asked me if there are any places there are not to crowded and fun to go to. Last year we went to a small island, but I haven’t decided where to go this time yet. I was thinking of just relaxing in Beijing, but there isn’t much to do there. There’s a good chance we’ll just stay in Guangdong province this year.</p>\n"},{"title":"202305W3 offline for a week","date":"2023-05-23T14:11:52.000Z","_content":"It has been three weeks since the last time I wrote a weekly report. Recently, I've been wanting to go back to the northern region to visit my family. A few days ago, I told my leader that I would be taking a week off. I will be flying to Beijing on the 27th of this month to meet my brother and sister, and then go to my hometown.\n\nRecently, I have been studying AWS platform and GitHub Actions for automation purposes. I plan to gradually accomplish project building, deployment, logging, tracing, and performance monitoring. If there are no other tasks, I intend to work on these during my vacation.","source":"_posts/1028.md","raw":"---\ntitle: 202305W3 offline for a week\ndate: 2023-05-23 22:11:52\ntags:\n    - 周报\ncategories: 生活\n---\nIt has been three weeks since the last time I wrote a weekly report. Recently, I've been wanting to go back to the northern region to visit my family. A few days ago, I told my leader that I would be taking a week off. I will be flying to Beijing on the 27th of this month to meet my brother and sister, and then go to my hometown.\n\nRecently, I have been studying AWS platform and GitHub Actions for automation purposes. I plan to gradually accomplish project building, deployment, logging, tracing, and performance monitoring. If there are no other tasks, I intend to work on these during my vacation.","slug":"1028","published":1,"updated":"2023-05-23T14:31:03.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clivk3tb80008uv5e8jicafp2","content":"<p>It has been three weeks since the last time I wrote a weekly report. Recently, I’ve been wanting to go back to the northern region to visit my family. A few days ago, I told my leader that I would be taking a week off. I will be flying to Beijing on the 27th of this month to meet my brother and sister, and then go to my hometown.</p>\n<p>Recently, I have been studying AWS platform and GitHub Actions for automation purposes. I plan to gradually accomplish project building, deployment, logging, tracing, and performance monitoring. If there are no other tasks, I intend to work on these during my vacation.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>It has been three weeks since the last time I wrote a weekly report. Recently, I’ve been wanting to go back to the northern region to visit my family. A few days ago, I told my leader that I would be taking a week off. I will be flying to Beijing on the 27th of this month to meet my brother and sister, and then go to my hometown.</p>\n<p>Recently, I have been studying AWS platform and GitHub Actions for automation purposes. I plan to gradually accomplish project building, deployment, logging, tracing, and performance monitoring. If there are no other tasks, I intend to work on these during my vacation.</p>\n"},{"title":"202306W2 Discord and Trancy","date":"2023-06-18T10:18:00.000Z","_content":"I found 2 platforms to practive English speaking skill, one is Discord,and the other one is Trancy.On Discord you can have conversations with people all over the world, most of them are students from Asia, I can only understand part of what they're saying. For Trancy offers various dialogue scenarios for practice, such as healthy eating, gaming, and entertainment.\n\nI have gained a lot of weight recently due to consuming too many snacks. I need to control it. Almost half of this year has already passed, and my reading record on Notion has only added one entry. It's likely that my reading volume this year will be only half of what it was last year. I plan to spend more time reading in the remaining six months. Steve mentioned a few days ago that he will be going to Japan for work in July or August. I can catch up with him and hang out when I visit Japan afterward.","source":"_posts/1030.md","raw":"---\ntitle: 202306W2 Discord and Trancy\ndate: 2023-06-18 18:18:00\ntags:\n    - 周报\ncategories: 生活\n---\nI found 2 platforms to practive English speaking skill, one is Discord,and the other one is Trancy.On Discord you can have conversations with people all over the world, most of them are students from Asia, I can only understand part of what they're saying. For Trancy offers various dialogue scenarios for practice, such as healthy eating, gaming, and entertainment.\n\nI have gained a lot of weight recently due to consuming too many snacks. I need to control it. Almost half of this year has already passed, and my reading record on Notion has only added one entry. It's likely that my reading volume this year will be only half of what it was last year. I plan to spend more time reading in the remaining six months. Steve mentioned a few days ago that he will be going to Japan for work in July or August. I can catch up with him and hang out when I visit Japan afterward.","slug":"1030","published":1,"updated":"2023-06-18T10:45:25.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkoptjkc0000da5e173165dn","content":"<p>I found 2 platforms to practive English speaking skill, one is Discord,and the other one is Trancy.On Discord you can have conversations with people all over the world, most of them are students from Asia, I can only understand part of what they’re saying. For Trancy offers various dialogue scenarios for practice, such as healthy eating, gaming, and entertainment.</p>\n<p>I have gained a lot of weight recently due to consuming too many snacks. I need to control it. Almost half of this year has already passed, and my reading record on Notion has only added one entry. It’s likely that my reading volume this year will be only half of what it was last year. I plan to spend more time reading in the remaining six months. Steve mentioned a few days ago that he will be going to Japan for work in July or August. I can catch up with him and hang out when I visit Japan afterward.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>I found 2 platforms to practive English speaking skill, one is Discord,and the other one is Trancy.On Discord you can have conversations with people all over the world, most of them are students from Asia, I can only understand part of what they’re saying. For Trancy offers various dialogue scenarios for practice, such as healthy eating, gaming, and entertainment.</p>\n<p>I have gained a lot of weight recently due to consuming too many snacks. I need to control it. Almost half of this year has already passed, and my reading record on Notion has only added one entry. It’s likely that my reading volume this year will be only half of what it was last year. I plan to spend more time reading in the remaining six months. Steve mentioned a few days ago that he will be going to Japan for work in July or August. I can catch up with him and hang out when I visit Japan afterward.</p>\n"},{"title":"202307W4 Concerts and Podcasts","date":"2023-07-30T00:40:46.000Z","_content":"\nIt's been a while since I went for a run, but this week I'm gradually getting back to my previous level of exercise. I've been indulging in hotpot and barbecue lately, and my weight reached nearly 137 pounds. Although it's still within the normal range, but I want to control it at 135 pounds to avoid excessive weight gain from consuming too many snacks. So, once it goes over 135, I'll start running.\n\nI've been following a star photographer, Ziyi Ye, who has been traveling around the world alone for 18 years to capture solar eclipses. I really admire such a girl. I often watch documentaries about the universe, but in Shenzhen, it's almost impossible to see the stars. When I saw the solar eclipse video she took, I was amazed.\n\nI attended Zhou Chuanxiong's concert for the first time, and I really love his songs. Before this, I had never spent money to attend a concert, I'm looking forward to him coming to Shenzhen again!\n\nI helped my colleague with some issues related to argoCD and Istio while planning to optimize our company's release system by replacing the current CLI with a more convenient web page.\n","source":"_posts/1032.md","raw":"---\ntitle: 202307W4 Concerts and Podcasts\ndate: 2023-07-30 08:40:46\ntags:\n---\n\nIt's been a while since I went for a run, but this week I'm gradually getting back to my previous level of exercise. I've been indulging in hotpot and barbecue lately, and my weight reached nearly 137 pounds. Although it's still within the normal range, but I want to control it at 135 pounds to avoid excessive weight gain from consuming too many snacks. So, once it goes over 135, I'll start running.\n\nI've been following a star photographer, Ziyi Ye, who has been traveling around the world alone for 18 years to capture solar eclipses. I really admire such a girl. I often watch documentaries about the universe, but in Shenzhen, it's almost impossible to see the stars. When I saw the solar eclipse video she took, I was amazed.\n\nI attended Zhou Chuanxiong's concert for the first time, and I really love his songs. Before this, I had never spent money to attend a concert, I'm looking forward to him coming to Shenzhen again!\n\nI helped my colleague with some issues related to argoCD and Istio while planning to optimize our company's release system by replacing the current CLI with a more convenient web page.\n","slug":"1032","published":1,"updated":"2023-07-30T01:54:20.615Z","_id":"clkoptjkf0001da5ehoi71udi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>It’s been a while since I went for a run, but this week I’m gradually getting back to my previous level of exercise. I’ve been indulging in hotpot and barbecue lately, and my weight reached nearly 137 pounds. Although it’s still within the normal range, but I want to control it at 135 pounds to avoid excessive weight gain from consuming too many snacks. So, once it goes over 135, I’ll start running.</p>\n<p>I’ve been following a star photographer, Ziyi Ye, who has been traveling around the world alone for 18 years to capture solar eclipses. I really admire such a girl. I often watch documentaries about the universe, but in Shenzhen, it’s almost impossible to see the stars. When I saw the solar eclipse video she took, I was amazed.</p>\n<p>I attended Zhou Chuanxiong’s concert for the first time, and I really love his songs. Before this, I had never spent money to attend a concert, I’m looking forward to him coming to Shenzhen again!</p>\n<p>I helped my colleague with some issues related to argoCD and Istio while planning to optimize our company’s release system by replacing the current CLI with a more convenient web page.</p>\n","site":{"data":{"friends":[{"avatar":"https://avatars.githubusercontent.com/u/26385612?v=4","name":"Angus","introduction":"一个快乐的调包侠","url":"https://anguswg.github.io/AngusWG/","title":"Angus"}]}},"excerpt":"","more":"<p>It’s been a while since I went for a run, but this week I’m gradually getting back to my previous level of exercise. I’ve been indulging in hotpot and barbecue lately, and my weight reached nearly 137 pounds. Although it’s still within the normal range, but I want to control it at 135 pounds to avoid excessive weight gain from consuming too many snacks. So, once it goes over 135, I’ll start running.</p>\n<p>I’ve been following a star photographer, Ziyi Ye, who has been traveling around the world alone for 18 years to capture solar eclipses. I really admire such a girl. I often watch documentaries about the universe, but in Shenzhen, it’s almost impossible to see the stars. When I saw the solar eclipse video she took, I was amazed.</p>\n<p>I attended Zhou Chuanxiong’s concert for the first time, and I really love his songs. Before this, I had never spent money to attend a concert, I’m looking forward to him coming to Shenzhen again!</p>\n<p>I helped my colleague with some issues related to argoCD and Istio while planning to optimize our company’s release system by replacing the current CLI with a more convenient web page.</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl6p6180r000atkscauc4ap1v","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cl6p6180u000ltkscb9ps8o6y"},{"post_id":"cl6p6180s000etksc4cu99s4j","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p6180x0015tksc2j3v7ylc"},{"post_id":"cl6p6180x0016tkschzh38y0n","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p6180y001etkscawmp36td"},{"post_id":"cl6p6180t000ktkscel9y3p0k","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p6180y001itkschrfndsj1"},{"post_id":"cl6p6180x0018tksc8igm7hi3","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p6180y001ltksc3j5d85nx"},{"post_id":"cl6p6180u000ntksccmh29ip0","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p6180z001otkscbiomgprl"},{"post_id":"cl6p6180v000rtksc3hur601m","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p6180z001qtkscdijrdkym"},{"post_id":"cl6p6180v000utkscdl4j158s","category_id":"cl6p6180y001mtkscc7v2f2p6","_id":"cl6p61810001ztksc07i0cg0c"},{"post_id":"cl6p6180z001utksc77jt40sh","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p618110027tkscfyd9gsbp"},{"post_id":"cl6p6180v000wtksc0qtectb5","category_id":"cl6p6180y001mtkscc7v2f2p6","_id":"cl6p61811002btksc58ln8f7j"},{"post_id":"cl6p6180w0010tksc3uh94tom","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p61812002jtksch0m426qg"},{"post_id":"cl6p618100022tkscd1h33v6h","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p61812002ntksc5x1u3p36"},{"post_id":"cl6p618100026tksc3rcw7g5w","category_id":"cl6p6180u000mtkscfysr3n16","_id":"cl6p61812002rtksc4tirfcdp"},{"post_id":"cl6p6180w0012tksc2wyj0wgx","category_id":"cl6p6180w0014tksc5s8328ix","_id":"cl6p61813002utksc3q9s8let"},{"post_id":"cl6p61811002atkscgcst4ed9","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p61813002wtksc9thuh6ag"},{"post_id":"cl6p61811002etksc8diu8n26","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p618130031tkscbjm38m39"},{"post_id":"cl6p61811002itksc0y3cg2f5","category_id":"cl6p6180y001mtkscc7v2f2p6","_id":"cl6p618140039tksc2nf5gia1"},{"post_id":"cl6p61812002mtkscdsh8fo04","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cl6p61814003ctksc3g8b6f8u"},{"post_id":"cl6p6180y001dtksc88nx17uk","category_id":"cl6p61811002ctksc6993a7lb","_id":"cl6p61814003htksc36x1gqgw"},{"post_id":"cl6p61812002qtkscejgt6h1x","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p61815003ktkscd0os3uw9"},{"post_id":"cl6p6180y001htksc37df8i23","category_id":"cl6p61812002stksca015086b","_id":"cl6p61815003ptkscecag0zgd"},{"post_id":"cl6p6180y001ktksc6xumg0zt","category_id":"cl6p61813002ytksc4ir01nc0","_id":"cl6p61816003vtksc9s9a34gv"},{"post_id":"cl6p6180z001ntksc7oflblz4","category_id":"cl6p61813002ytksc4ir01nc0","_id":"cl6p618180043tksceq1b1pyt"},{"post_id":"cl6p61814003btkscd5c592jp","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p618190047tkscffw35eof"},{"post_id":"cl6p61814003gtksc3z1v2rwu","category_id":"cl6p6180u000mtkscfysr3n16","_id":"cl6p61819004btksc32cp6zcc"},{"post_id":"cl6p6180z001vtksc2tq1cybv","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181a004ftkscd0b5g5p5"},{"post_id":"cl6p61814003jtkscb44l5aba","category_id":"cl6p6180v000ttkscfv5c9nak","_id":"cl6p6181a004itksc74ws28hy"},{"post_id":"cl6p61815003otksc84f341z1","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181a004mtksc096h6yxs"},{"post_id":"cl6p61815003rtksc9pp998th","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181a004ptkscef8fcuj5"},{"post_id":"cl6p61813002vtksc7van54go","category_id":"cl6p61815003ntkscf9t0ej40","_id":"cl6p6181b004stkscdm6lhp5b"},{"post_id":"cl6p61815003utkschguwc3dc","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181b004wtksc808k7oep"},{"post_id":"cl6p61818003ztksc5uyd3u86","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181b0050tksc1pi17bzo"},{"post_id":"cl6p618180042tksc9ari0xde","category_id":"cl6p618190048tkscfb8q9mai","_id":"cl6p6181c005ftkscfy0bclsa"},{"post_id":"cl6p6181a004htksc5d9470jn","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cl6p6181c005itkscf7q6hhgr"},{"post_id":"cl6p6181a004ltksc9ze72hgi","category_id":"cl6p6180u000mtkscfysr3n16","_id":"cl6p6181c005ktksc8wbm0np3"},{"post_id":"cl6p6181a004otkscaoap81am","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cl6p6181c005ntkscguwp0jpx"},{"post_id":"cl6p61819004etksc0teu65qk","category_id":"cl6p6181a004jtksc426mgsf2","_id":"cl6p6181c005ptksca226b5c8"},{"post_id":"cl6p6181b0053tksc62zg1cqc","category_id":"cl6p61812002stksca015086b","_id":"cl6p6181c005qtksc7jnm74h0"},{"post_id":"cl6p6181a004rtkscdvsq80vg","category_id":"cl6p6181b004ytksc99btd20d","_id":"cl6p6181d005ttkscet29gym4"},{"post_id":"cl6p6181c005btkscep0f4pez","category_id":"cl6p6181b004ytksc99btd20d","_id":"cl6p6181d005wtksc3ue59pnp"},{"post_id":"cl6p6181b004vtksc5tv30alg","category_id":"cl6p6181b004ytksc99btd20d","_id":"cl6p6181d005xtksc8m6bc8wk"},{"post_id":"cl6p6181b004ztkscfjr0dgic","category_id":"cl6p6181b004ytksc99btd20d","_id":"cl6p6181d005ytksccvzw1wfq"},{"post_id":"cl7otbdkn0001qkf07tew68hj","category_id":"cl6p618190048tkscfb8q9mai","_id":"cl7otbdkz0004qkf0cq365qes"},{"post_id":"clahulh2y00002vsc6h4levli","category_id":"clahulh2z00012vscht1n3siu","_id":"clahulh3400042vsc3n5v42x4"},{"post_id":"clahulh2y00002vsc6h4levli","category_id":"clam1si3u0006b6sc3hsa0gda","_id":"clam1tlso0002cgscbpz72bkm"},{"post_id":"clbu6cb5i00014lsccxmx7hs1","category_id":"clbu6cb5k00044lscfsnqagu6","_id":"clbu6cb5r00084lscfnlc5xb1"},{"post_id":"cl6p6180m0001tkscbucr6r3j","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clcsntsuu0000opsch1z9b79b"},{"post_id":"cldket1k3000095sc6jtg7hxu","category_id":"cldket1k7000295scdxbyahhx","_id":"cldket1kd000595sc096u9emh"},{"post_id":"cldsh0lei00006zsc5i496pk6","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ler00056zsc733j597t"},{"post_id":"cldsh0lek00016zscfmp57pce","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ler00076zscg9u3f6y8"},{"post_id":"cldsh0leq00036zscbr8j2qrb","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0let000b6zsc4epyg9gj"},{"post_id":"cldsh0ler00046zscdspzgf98","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0leu000e6zsccyua4nol"},{"post_id":"cldsh0ler00066zsc07bg20p6","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0leu000i6zsc4jykdynb"},{"post_id":"cldsh0let000a6zscfofq9wx2","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lev000l6zsc9rigc86h"},{"post_id":"cldsh0leu000d6zschsj37s9l","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lev000o6zscgwz7f7z4"},{"post_id":"cldsh0leu000h6zscgpj6a0y2","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lew000r6zsc9mj25uay"},{"post_id":"cldsh0lev000k6zscbi5bgnmb","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lew000u6zsc1h1ag8nd"},{"post_id":"cldsh0lev000n6zsce8z353oh","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lew000x6zscgklsgn1j"},{"post_id":"cldsh0lev000q6zscfog0aeuz","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lex00106zsc3ygo72bw"},{"post_id":"cldsh0lew000t6zsc4tpsa9dn","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lex00136zsc1smb10jf"},{"post_id":"cldsh0lew000w6zscfneog5ia","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lex00166zscfxk271ub"},{"post_id":"cldsh0lew000z6zsc96mw4wfg","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ley00196zsc7zm8294m"},{"post_id":"cldsh0lex00126zsc8kyf0clu","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ley001c6zscccmzceue"},{"post_id":"cldsh0lex00156zscc91l559w","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ley001f6zsc8dptdh3g"},{"post_id":"cldsh0lex00186zsceiyt8kxx","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0ley001i6zsce4f87zxn"},{"post_id":"cldsh0ley001b6zscdtvu2020","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lez001k6zsc9ssh4kb0"},{"post_id":"cldsh0ley001e6zsc010ef522","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lez001m6zsc1rxn95sm"},{"post_id":"cldsh0ley001h6zsc7zzkdavb","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cldsh0lez001o6zsc6xpw4s3d"},{"post_id":"cleb2vr0w00005j5e1eg0gri3","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"cleb2vr0x00025j5eabidc3j6"},{"post_id":"clf59cq3700000n5e0gc7c5u1","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clf59cq3h00050n5e1n9cb9pd"},{"post_id":"clf59cq3d00010n5eekly7zan","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clf59cq3h00070n5ect204xep"},{"post_id":"clf59cq3f00030n5ea5ra49il","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clf59cq3h00080n5eg5clhlzs"},{"post_id":"clfdd246u00007i5ebasi343j","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clfdd247000027i5e1p904waf"},{"post_id":"clfmnsxu40000v85e16vo5u8x","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clfmnsxug0004v85e6ijrgdar"},{"post_id":"clfmnsxue0003v85e45m206ku","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clfmnsxuv0008v85eaakf5vyy"},{"post_id":"clfmnsxud0002v85e2tqx068z","category_id":"clfmnsxug0005v85e3eke2prk","_id":"clfmnsxuv000av85edue45rl2"},{"post_id":"clfmnvhbr00002b5e7whmhmgd","category_id":"clfmnvhbu00012b5e4p0z1vm6","_id":"clfmnvhbw00042b5e7woqhime"},{"post_id":"clivk3tb10002uv5e6x6h59lp","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clivk3tb70006uv5e04jj71yk"},{"post_id":"clivk3tb60004uv5ec59q682g","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clivk3tb8000auv5e89qb6dh4"},{"post_id":"clivk3tb70005uv5e3gf197no","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clivk3tba000cuv5ecb9u2w9u"},{"post_id":"clivk3tb80008uv5e8jicafp2","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clivk3tba000duv5e26iz8dz2"},{"post_id":"clkoptjkc0000da5e173165dn","category_id":"cl6p6180p0004tksc9juhb5ao","_id":"clkoptjkg0003da5ea97tepjf"}],"PostTag":[{"post_id":"cl6p6180s000etksc4cu99s4j","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p6180w000xtksc7upi0fep"},{"post_id":"cl6p6180t000ktkscel9y3p0k","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p6180x0019tksc9aqg7b2m"},{"post_id":"cl6p6180u000ntksccmh29ip0","tag_id":"cl6p6180t000htksccqvu6yjv","_id":"cl6p6180y001ftksc71yzete5"},{"post_id":"cl6p6180u000ntksccmh29ip0","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p6180y001jtkscd5262o3w"},{"post_id":"cl6p618100022tkscd1h33v6h","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p618110029tksc5xwo1uav"},{"post_id":"cl6p6180z001utksc77jt40sh","tag_id":"cl6p618100020tksc274wdjb9","_id":"cl6p61811002dtkscg6zv9n4t"},{"post_id":"cl6p618100026tksc3rcw7g5w","tag_id":"cl6p6180t000htksccqvu6yjv","_id":"cl6p61811002htksc18dk6qki"},{"post_id":"cl6p618100026tksc3rcw7g5w","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p61812002ltksc44rx54a1"},{"post_id":"cl6p61811002itksc0y3cg2f5","tag_id":"cl6p618110028tksccdrcaeal","_id":"cl6p61812002ptksc0pkaedti"},{"post_id":"cl6p6180z001vtksc2tq1cybv","tag_id":"cl6p618110028tksccdrcaeal","_id":"cl6p61813002ztksc07sn2fot"},{"post_id":"cl6p6180z001vtksc2tq1cybv","tag_id":"cl6p61811002gtksc5rhkb4qb","_id":"cl6p618130032tksccbj16e25"},{"post_id":"cl6p6180z001vtksc2tq1cybv","tag_id":"cl6p61812002otkscg0bt258j","_id":"cl6p618140036tkscd54k6ap1"},{"post_id":"cl6p61811002atkscgcst4ed9","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p61814003etksc92k85noz"},{"post_id":"cl6p61811002atkscgcst4ed9","tag_id":"cl6p61813002xtkscannzfwsf","_id":"cl6p61814003itksc111bfgnr"},{"post_id":"cl6p61811002etksc8diu8n26","tag_id":"cl6p618130035tkscdtxqbcfg","_id":"cl6p61815003qtksc9lpwg53b"},{"post_id":"cl6p61814003gtksc3z1v2rwu","tag_id":"cl6p6180t000htksccqvu6yjv","_id":"cl6p61815003ttksc7blz5agm"},{"post_id":"cl6p61812002mtkscdsh8fo04","tag_id":"cl6p61814003dtksc3a1gd8s0","_id":"cl6p61818003ytkscbjre8ujd"},{"post_id":"cl6p61815003rtksc9pp998th","tag_id":"cl6p618110028tksccdrcaeal","_id":"cl6p618180041tkscha62ecrd"},{"post_id":"cl6p61815003rtksc9pp998th","tag_id":"cl6p61811002gtksc5rhkb4qb","_id":"cl6p618190045tkscew6z82ee"},{"post_id":"cl6p61815003rtksc9pp998th","tag_id":"cl6p61812002otkscg0bt258j","_id":"cl6p618190049tksc0zso2ybj"},{"post_id":"cl6p61813002vtksc7van54go","tag_id":"cl6p61815003ltkscg3avbpf2","_id":"cl6p61819004dtksc28pj7geo"},{"post_id":"cl6p61813002vtksc7van54go","tag_id":"cl6p61816003wtksc8o8y7oe5","_id":"cl6p6181a004gtksc1md2dosf"},{"post_id":"cl6p6181a004htksc5d9470jn","tag_id":"cl6p61814003dtksc3a1gd8s0","_id":"cl6p6181b004utksccwfg0qef"},{"post_id":"cl6p6181a004ltksc9ze72hgi","tag_id":"cl6p6180t000htksccqvu6yjv","_id":"cl6p6181b004xtksc6ype18f9"},{"post_id":"cl6p61814003btkscd5c592jp","tag_id":"cl6p6180t000htksccqvu6yjv","_id":"cl6p6181b0052tkscd85k95dc"},{"post_id":"cl6p61814003btkscd5c592jp","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p6181b0055tksce1cdejsg"},{"post_id":"cl6p61814003btkscd5c592jp","tag_id":"cl6p6181a004ktkschtwo7l6s","_id":"cl6p6181c005atksc0i028d1h"},{"post_id":"cl6p61814003jtkscb44l5aba","tag_id":"cl6p6180u000otkscc83me597","_id":"cl6p6181c005dtksc2h752l9j"},{"post_id":"cl6p61814003jtkscb44l5aba","tag_id":"cl6p6181a004ktkschtwo7l6s","_id":"cl6p6181c005htksc4tt5d4rq"},{"post_id":"cl6p61814003jtkscb44l5aba","tag_id":"cl6p6181b0051tksc99zqcew4","_id":"cl6p6181c005jtksc3ruoguii"},{"post_id":"cl6p61818003ztksc5uyd3u86","tag_id":"cl6p6181c0059tkscexgt471q","_id":"cl6p6181c005ltksc5deu5jwu"},{"post_id":"cl6p618180042tksc9ari0xde","tag_id":"cl6p6181c005gtkscfyqx1d9r","_id":"cl6p6181c005otkscac1t1nos"},{"post_id":"cl6p6181b004ztkscfjr0dgic","tag_id":"cl6p6181c005mtksc6lm7cwxu","_id":"cl6p6181d005stksc4tky34q7"},{"post_id":"cl6p6181b0053tksc62zg1cqc","tag_id":"cl6p6181c005mtksc6lm7cwxu","_id":"cl6p6181d005vtkscf6cy4z0p"},{"post_id":"cl7otbdkn0001qkf07tew68hj","tag_id":"cl7otbdkp0002qkf0apb716zz","_id":"cl7otbdl00006qkf09xk06n1o"},{"post_id":"cl7otbdkn0001qkf07tew68hj","tag_id":"cl7otbdkz0005qkf00sa20oi1","_id":"cl7otbdl00007qkf06cl3gwcy"},{"post_id":"clahulh2y00002vsc6h4levli","tag_id":"clahulh3400022vscbsoya9hr","_id":"clahulh3400052vsc1rku4dou"},{"post_id":"clahulh2y00002vsc6h4levli","tag_id":"clahulh3400032vsc6xsxfzdh","_id":"clahulh3400062vsccv59cu2x"},{"post_id":"clbu6cb5i00014lsccxmx7hs1","tag_id":"clbu6cb5p00054lscc5aodm5t","_id":"clbu6cb5r00074lsc3tdq80h5"},{"post_id":"clcsknk3d0001dmscatv3039y","tag_id":"clcsknk3f0002dmsc4etyedfi","_id":"clcsknk410006dmsc9yxiax0m"},{"post_id":"cl6p6180m0001tkscbucr6r3j","tag_id":"clcsknk3f0002dmsc4etyedfi","_id":"clcsnilsn0000ussc9cczhpni"},{"post_id":"cldket1k3000095sc6jtg7hxu","tag_id":"cldket1kd000495scg033bjkv","_id":"cldket1kd000795scaryc4cwl"},{"post_id":"cldket1k3000095sc6jtg7hxu","tag_id":"cldkf1cvh0000k0scfv7mdsvv","_id":"cldkf1cvs0001k0scddqfewt1"},{"post_id":"cldsh0ler00046zscdspzgf98","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0let00096zsc4saa6g5z"},{"post_id":"cldsh0lei00006zsc5i496pk6","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0let000c6zsc71ra89n3"},{"post_id":"cldsh0ler00066zsc07bg20p6","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0leu000g6zsc3xig0r40"},{"post_id":"cldsh0let000a6zscfofq9wx2","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lev000j6zsc7p95a41i"},{"post_id":"cldsh0lek00016zscfmp57pce","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lev000m6zsc7fecdiz3"},{"post_id":"cldsh0leu000d6zschsj37s9l","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lev000p6zsc8446heq0"},{"post_id":"cldsh0leu000h6zscgpj6a0y2","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lew000s6zscbjh0gfvd"},{"post_id":"cldsh0leq00036zscbr8j2qrb","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lew000v6zsca2aq6j8f"},{"post_id":"cldsh0lev000k6zscbi5bgnmb","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lew000y6zsc0zdqccy2"},{"post_id":"cldsh0lev000n6zsce8z353oh","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lex00116zsc8mw66z7x"},{"post_id":"cldsh0lev000q6zscfog0aeuz","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lex00146zsc5o8ehcm5"},{"post_id":"cldsh0lew000t6zsc4tpsa9dn","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lex00176zsc1u80hyvm"},{"post_id":"cldsh0lew000w6zscfneog5ia","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0ley001a6zsca93f42d0"},{"post_id":"cldsh0lew000z6zsc96mw4wfg","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0ley001d6zsc7n6dcf0j"},{"post_id":"cldsh0lex00126zsc8kyf0clu","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0ley001g6zscdvmz5qvb"},{"post_id":"cldsh0lex00156zscc91l559w","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lez001j6zsc0wo949ag"},{"post_id":"cldsh0lex00186zsceiyt8kxx","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lez001l6zsc4mp60ky3"},{"post_id":"cldsh0ley001b6zscdtvu2020","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lez001n6zsc7u6pbccr"},{"post_id":"cldsh0ley001e6zsc010ef522","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lez001p6zsc1rb0fbeg"},{"post_id":"cldsh0ley001h6zsc7zzkdavb","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cldsh0lez001q6zsc52r9bg6v"},{"post_id":"cleb2vr0w00005j5e1eg0gri3","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"cleb2vr0x00015j5e6ds5gomo"},{"post_id":"clf59cq3700000n5e0gc7c5u1","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clf59cq3f00020n5edzajcqns"},{"post_id":"clf59cq3d00010n5eekly7zan","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clf59cq3h00040n5e69uc48vb"},{"post_id":"clf59cq3f00030n5ea5ra49il","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clf59cq3h00060n5e5qlq4x6d"},{"post_id":"clfdd246u00007i5ebasi343j","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clfdd247000017i5edbtl2ioe"},{"post_id":"clfmnsxu40000v85e16vo5u8x","tag_id":"clcsknk3f0002dmsc4etyedfi","_id":"clfmnsxud0001v85ehc8nco1v"},{"post_id":"clfmnsxue0003v85e45m206ku","tag_id":"claph5dp400022kscaqp7hs85","_id":"clfmnsxuv0007v85e3jz29v5n"},{"post_id":"clfmnsxud0002v85e2tqx068z","tag_id":"clfmnsxut0006v85eeunt87ra","_id":"clfmnsxuv0009v85e2xvq4qvt"},{"post_id":"clfmnvhbr00002b5e7whmhmgd","tag_id":"clivk3tal0000uv5e60ptat82","_id":"clivk3tax0001uv5ebgy59sre"},{"post_id":"clivk3tb10002uv5e6x6h59lp","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clivk3tb60003uv5e83mg8z0f"},{"post_id":"clivk3tb60004uv5ec59q682g","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clivk3tb80007uv5e3ovkd2f7"},{"post_id":"clivk3tb70005uv5e3gf197no","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clivk3tb80009uv5e0v8j5qad"},{"post_id":"clivk3tb80008uv5e8jicafp2","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clivk3tb9000buv5efvee05r6"},{"post_id":"clkoptjkc0000da5e173165dn","tag_id":"cldsh0lel00026zsc24q9bmbq","_id":"clkoptjkg0002da5e5idwba6t"}],"Tag":[{"name":"python","_id":"cl6p6180t000htksccqvu6yjv"},{"name":"Django","_id":"cl6p6180u000otkscc83me597"},{"name":"多线程","_id":"cl6p6180z001ttksccwbwfutf"},{"name":"redis","_id":"cl6p618100020tksc274wdjb9"},{"name":"docker","_id":"cl6p618110028tksccdrcaeal"},{"name":"windows","_id":"cl6p61811002gtksc5rhkb4qb"},{"name":"k8s","_id":"cl6p61812002otkscg0bt258j"},{"name":"邮件","_id":"cl6p61813002xtkscannzfwsf"},{"name":"django3","_id":"cl6p618130035tkscdtxqbcfg"},{"name":"生活","_id":"cl6p61814003dtksc3a1gd8s0"},{"name":"Typora","_id":"cl6p61815003ltkscg3avbpf2"},{"name":"Markdown","_id":"cl6p61816003wtksc8o8y7oe5"},{"name":"FastAPI","_id":"cl6p618190044tksc4xts9pkl"},{"name":"Vue","_id":"cl6p61819004ctksc23ht3pq3"},{"name":"自动化","_id":"cl6p6181a004ktkschtwo7l6s"},{"name":"uwsgi","_id":"cl6p6181b0051tksc99zqcew4"},{"name":"WSL2","_id":"cl6p6181c0059tkscexgt471q"},{"name":"历史相关","_id":"cl6p6181c005gtkscfyqx1d9r"},{"name":"树莓派","_id":"cl6p6181c005mtksc6lm7cwxu"},{"name":"小说","_id":"cl7otbdkp0002qkf0apb716zz"},{"name":"东野圭吾","_id":"cl7otbdkz0005qkf00sa20oi1"},{"name":"Hyperledger","_id":"clahulh3400022vscbsoya9hr"},{"name":"Fabric","_id":"clahulh3400032vsc6xsxfzdh"},{"name":"随笔","_id":"claph5dp400022kscaqp7hs85"},{"name":"科技双眼啤","_id":"clbu6cb5p00054lscc5aodm5t"},{"name":"年终总结","_id":"clcsknk3f0002dmsc4etyedfi"},{"name":"grpc","_id":"cldket1kc000395sccg5g0voo"},{"name":"go","_id":"cldket1kd000495scg033bjkv"},{"name":"gRPC","_id":"cldkf1cvh0000k0scfv7mdsvv"},{"name":"周报","_id":"cldsh0lel00026zsc24q9bmbq"},{"name":"goroutine","_id":"clfmnsxut0006v85eeunt87ra"},{"name":"源码阅读","_id":"clfmnvhbv00022b5e146g0wxs"},{"name":"云原生","_id":"clivk3tal0000uv5e60ptat82"}]}}